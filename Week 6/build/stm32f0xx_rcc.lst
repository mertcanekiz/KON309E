ARM GAS  /tmp/ccnQQ0zV.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	RCC_DeInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	RCC_DeInit:
  25              	.LFB32:
  26              		.file 1 "Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c"
   1:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
   2:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ******************************************************************************
   3:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @file    stm32f0xx_rcc.c
   4:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @author  MCD Application Team
   5:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @version V1.0.0
   6:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @date    23-March-2012
   7:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:
   9:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           + Peripheral clocks configuration
  12:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           + Interrupts and flags management
  13:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  14:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  @verbatim
  15:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  16:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
  17:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****                         ##### RCC specific features #####
  18:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
  19:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] After reset the device is running from HSI (8 MHz) with Flash 0 WS, 
  20:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          all peripherals are off except internal SRAM, Flash and SWD.
  21:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  22:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              all peripherals mapped on these busses are running at HSI speed.
  23:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) All GPIOs are in input floating state, except the SWD pins which
  25:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              are assigned to be used for debug purpose.
  26:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Configure the clock source to be used to drive the System clock
  28:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (if the application needs higher frequency/performance)
  29:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Configure the System clock frequency and Flash settings
  30:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Configure the AHB and APB busses prescalers
  31:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Enable the clock for the peripheral(s) to be used
  32:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Configure the clock source(s) for peripherals which clocks are not
ARM GAS  /tmp/ccnQQ0zV.s 			page 2


  33:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              derived from the System clock (ADC, CEC, I2C, USART, RTC and IWDG)
  34:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  35:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  @endverbatim
  36:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
  37:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ******************************************************************************
  38:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @attention
  39:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  40:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  41:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  42:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  43:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * You may not use this file except in compliance with the License.
  44:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * You may obtain a copy of the License at:
  45:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  46:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  47:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  48:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  49:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  50:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  51:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * See the License for the specific language governing permissions and
  52:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * limitations under the License.
  53:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
  54:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ******************************************************************************
  55:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
  56:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  57:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Includes ------------------------------------------------------------------*/
  58:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #include "stm32f0xx_rcc.h"
  59:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  60:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  61:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
  62:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
  63:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  64:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC 
  65:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief RCC driver modules
  66:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
  67:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */ 
  68:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  69:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  70:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private define ------------------------------------------------------------*/
  71:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  72:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* ---------------------- RCC registers mask -------------------------------- */
  73:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* RCC Flag Mask */
  74:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
  75:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  76:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* CR register byte 2 (Bits[23:16]) base address */
  77:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #define CR_BYTE2_ADDRESS          ((uint32_t)0x40021002)
  78:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  79:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* CFGR register byte 3 (Bits[31:23]) base address */
  80:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #define CFGR_BYTE3_ADDRESS        ((uint32_t)0x40021007)
  81:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  82:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* CIR register byte 1 (Bits[15:8]) base address */
  83:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #define CIR_BYTE1_ADDRESS         ((uint32_t)0x40021009)
  84:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  85:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* CIR register byte 2 (Bits[23:16]) base address */
  86:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x4002100A)
  87:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  88:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/ccnQQ0zV.s 			page 3


  90:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
  91:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  92:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private function prototypes -----------------------------------------------*/
  93:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /* Private functions ---------------------------------------------------------*/
  94:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  95:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC_Private_Functions
  96:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
  97:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
  98:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
  99:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 100:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 101:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *
 102:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @verbatim
 103:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
 104:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ##### Internal-external clocks, PLL, CSS and MCO configuration functions #####
 105:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
 106:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] This section provides functions allowing to configure the internal/external clocks,
 107:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          PLL, CSS and MCO.
 108:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly 
 109:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              or through the PLL as System clock source.
 110:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              The HSI clock can be used also to clock the USART, I2C and CEC peripherals.
 111:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) HSI14 (high-speed internal for ADC), 14 MHz factory-trimmed RC used to clock
 112:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              the ADC peripheral.
 113:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) LSI (low-speed internal), 40 KHz low consumption RC used as IWDG and/or RTC
 114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              clock source.
 115:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 116:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 117:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source. 
 118:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              LSE can be used also to clock the USART and CEC peripherals.   
 119:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) PLL (clocked by HSI or HSE), for System clock.
 120:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs 
 121:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (HSE used directly or through PLL as System clock source), the System clock
 122:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled. 
 123:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              The interrupt is linked to the Cortex-M0 NMI (Non-Maskable Interrupt) 
 124:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              exception vector.   
 125:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSI14, LSI,
 126:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              HSE, LSE or PLL (divided by 2) clock on PA8 pin.
 127:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 128:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @endverbatim
 129:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
 130:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 131:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 132:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 133:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 134:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 135:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      HSI ON and used as system clock source 
 136:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      HSI14, HSE and PLL OFF
 137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      AHB, APB prescaler set to 1.
 138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      CSS and MCO OFF
 139:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      All interrupts disabled
 140:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   However, this function doesn't modify the configuration of the
 141:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      Peripheral clocks
 142:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note      LSI, LSE and RTC clocks
 143:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  None
 144:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 145:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 146:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_DeInit(void)
ARM GAS  /tmp/ccnQQ0zV.s 			page 4


 147:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
  27              		.loc 1 147 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 148:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set HSION bit */
 149:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  32              		.loc 1 149 3 view .LVU1
  33              		.loc 1 149 11 is_stmt 0 view .LVU2
  34 0000 114B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 0121     		movs	r1, #1
  37 0006 0A43     		orrs	r2, r1
  38 0008 1A60     		str	r2, [r3]
 150:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 151:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
 152:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FFB80C;
  39              		.loc 1 152 3 is_stmt 1 view .LVU3
  40              		.loc 1 152 13 is_stmt 0 view .LVU4
  41 000a 5A68     		ldr	r2, [r3, #4]
  42 000c 0F48     		ldr	r0, .L2+4
  43 000e 0240     		ands	r2, r0
  44 0010 5A60     		str	r2, [r3, #4]
 153:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 154:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 155:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  45              		.loc 1 155 3 is_stmt 1 view .LVU5
  46              		.loc 1 155 11 is_stmt 0 view .LVU6
  47 0012 1A68     		ldr	r2, [r3]
  48 0014 0E48     		ldr	r0, .L2+8
  49 0016 0240     		ands	r2, r0
  50 0018 1A60     		str	r2, [r3]
 156:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 157:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset HSEBYP bit */
 158:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  51              		.loc 1 158 3 is_stmt 1 view .LVU7
  52              		.loc 1 158 11 is_stmt 0 view .LVU8
  53 001a 1A68     		ldr	r2, [r3]
  54 001c 0D48     		ldr	r0, .L2+12
  55 001e 0240     		ands	r2, r0
  56 0020 1A60     		str	r2, [r3]
 159:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 160:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 161:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR &= (uint32_t)0xFFC0FFFF;
  57              		.loc 1 161 3 is_stmt 1 view .LVU9
  58              		.loc 1 161 13 is_stmt 0 view .LVU10
  59 0022 5A68     		ldr	r2, [r3, #4]
  60 0024 0C48     		ldr	r0, .L2+16
  61 0026 0240     		ands	r2, r0
  62 0028 5A60     		str	r2, [r3, #4]
 162:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 163:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset PREDIV1[3:0] bits */
 164:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
  63              		.loc 1 164 3 is_stmt 1 view .LVU11
  64              		.loc 1 164 14 is_stmt 0 view .LVU12
  65 002a DA6A     		ldr	r2, [r3, #44]
ARM GAS  /tmp/ccnQQ0zV.s 			page 5


  66 002c 0F20     		movs	r0, #15
  67 002e 8243     		bics	r2, r0
  68 0030 DA62     		str	r2, [r3, #44]
 165:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 166:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset USARTSW[1:0], I2CSW, CECSW and ADCSW bits */
 167:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 &= (uint32_t)0xFFFFFEAC;
  69              		.loc 1 167 3 is_stmt 1 view .LVU13
  70              		.loc 1 167 14 is_stmt 0 view .LVU14
  71 0032 1A6B     		ldr	r2, [r3, #48]
  72 0034 0948     		ldr	r0, .L2+20
  73 0036 0240     		ands	r2, r0
  74 0038 1A63     		str	r2, [r3, #48]
 168:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 169:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset HSI14 bit */
 170:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR2 &= (uint32_t)0xFFFFFFFE;
  75              		.loc 1 170 3 is_stmt 1 view .LVU15
  76              		.loc 1 170 12 is_stmt 0 view .LVU16
  77 003a 5A6B     		ldr	r2, [r3, #52]
  78 003c 8A43     		bics	r2, r1
  79 003e 5A63     		str	r2, [r3, #52]
 171:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 172:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Disable all interrupts */
 173:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CIR = 0x00000000;
  80              		.loc 1 173 3 is_stmt 1 view .LVU17
  81              		.loc 1 173 12 is_stmt 0 view .LVU18
  82 0040 0022     		movs	r2, #0
  83 0042 9A60     		str	r2, [r3, #8]
 174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
  84              		.loc 1 174 1 view .LVU19
  85              		@ sp needed
  86 0044 7047     		bx	lr
  87              	.L3:
  88 0046 C046     		.align	2
  89              	.L2:
  90 0048 00100240 		.word	1073876992
  91 004c 0CB8FFF8 		.word	-117458932
  92 0050 FFFFF6FE 		.word	-17367041
  93 0054 FFFFFBFF 		.word	-262145
  94 0058 FFFFC0FF 		.word	-4128769
  95 005c ACFEFFFF 		.word	-340
  96              		.cfi_endproc
  97              	.LFE32:
  99              		.section	.text.RCC_HSEConfig,"ax",%progbits
 100              		.align	1
 101              		.global	RCC_HSEConfig
 102              		.syntax unified
 103              		.code	16
 104              		.thumb_func
 105              		.fpu softvfp
 107              	RCC_HSEConfig:
 108              	.LVL0:
 109              	.LFB33:
 175:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 176:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 177:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 178:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 179:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           software should wait on HSERDY flag to be set indicating that HSE clock
ARM GAS  /tmp/ccnQQ0zV.s 			page 6


 180:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           is stable and can be used to clock the PLL and/or system clock.
 181:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *  @note    HSE state can not be changed if it is used directly or through the
 182:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           PLL as system clock. In this case, you have to select another source
 183:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           of the system clock then change the HSE state (ex. disable it).
 184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *  @note    The HSE is stopped by hardware when entering STOP and STANDBY modes.
 185:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function resets the CSSON bit, so if the Clock security system(CSS)
 186:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 187:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         function.
 188:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param RCC_HSE: specifies the new state of the HSE.
 189:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 190:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 191:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                       6 HSE oscillator clock cycles.
 192:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HSE_ON: turn ON the HSE oscillator
 193:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 194:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 195:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 196:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 197:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 110              		.loc 1 197 1 is_stmt 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
 198:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 199:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 115              		.loc 1 199 3 view .LVU21
 200:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 201:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 202:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE_OFF;
 116              		.loc 1 202 3 view .LVU22
 117              		.loc 1 202 38 is_stmt 0 view .LVU23
 118 0000 024B     		ldr	r3, .L5
 119 0002 0022     		movs	r2, #0
 120 0004 1A70     		strb	r2, [r3]
 203:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 204:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 205:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE;
 121              		.loc 1 205 3 is_stmt 1 view .LVU24
 122              		.loc 1 205 38 is_stmt 0 view .LVU25
 123 0006 1870     		strb	r0, [r3]
 206:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 207:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 124              		.loc 1 207 1 view .LVU26
 125              		@ sp needed
 126 0008 7047     		bx	lr
 127              	.L6:
 128 000a C046     		.align	2
 129              	.L5:
 130 000c 02100240 		.word	1073876994
 131              		.cfi_endproc
 132              	.LFE33:
 134              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 135              		.align	1
 136              		.global	RCC_AdjustHSICalibrationValue
 137              		.syntax unified
 138              		.code	16
 139              		.thumb_func
ARM GAS  /tmp/ccnQQ0zV.s 			page 7


 140              		.fpu softvfp
 142              	RCC_AdjustHSICalibrationValue:
 143              	.LVL1:
 144              	.LFB35:
 208:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 209:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 210:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Waits for HSE start-up.
 211:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function waits on HSERDY flag to be set and return SUCCESS if 
 212:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 213:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 214:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f0xx.h file. You can tailor it depending
 215:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         on the HSE crystal used in your application.
 216:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         - The HSE is stopped by hardware when entering STOP and STANDBY modes.
 217:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  None
 218:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval An ErrorStatus enumeration value:
 219:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 220:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 221:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 222:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 223:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 224:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 225:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ErrorStatus status = ERROR;
 226:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   FlagStatus HSEStatus = RESET;
 227:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 228:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Wait till HSE is ready and if timeout is reached exit */
 229:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   do
 230:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 231:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 232:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     StartUpCounter++;  
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 234:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 236:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 237:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     status = SUCCESS;
 238:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 239:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 240:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 241:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     status = ERROR;
 242:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }  
 243:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   return (status);
 244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 245:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 246:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 247:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 248:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 249:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 250:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         Refer to the Application Note AN3300 for more details on how to  
 251:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         calibrate the HSI.
 252:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  HSICalibrationValue: specifies the HSI calibration trimming value.
 253:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 254:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 255:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 256:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 257:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 145              		.loc 1 257 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccnQQ0zV.s 			page 8


 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 258:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
 150              		.loc 1 258 3 view .LVU28
 259:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 260:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 261:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_HSI_CALIBRATION_VALUE(HSICalibrationValue));
 151              		.loc 1 261 3 view .LVU29
 262:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 263:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CR;
 152              		.loc 1 263 3 view .LVU30
 153              		.loc 1 263 10 is_stmt 0 view .LVU31
 154 0000 034A     		ldr	r2, .L8
 155 0002 1368     		ldr	r3, [r2]
 156              	.LVL2:
 264:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 265:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 266:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 157              		.loc 1 266 3 is_stmt 1 view .LVU32
 158              		.loc 1 266 10 is_stmt 0 view .LVU33
 159 0004 F821     		movs	r1, #248
 160 0006 8B43     		bics	r3, r1
 161              	.LVL3:
 267:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 268:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 269:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 162              		.loc 1 269 3 is_stmt 1 view .LVU34
 163              		.loc 1 269 43 is_stmt 0 view .LVU35
 164 0008 C000     		lsls	r0, r0, #3
 165              	.LVL4:
 166              		.loc 1 269 10 view .LVU36
 167 000a 1843     		orrs	r0, r3
 168              	.LVL5:
 270:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 271:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 272:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR = tmpreg;
 169              		.loc 1 272 3 is_stmt 1 view .LVU37
 170              		.loc 1 272 11 is_stmt 0 view .LVU38
 171 000c 1060     		str	r0, [r2]
 273:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 172              		.loc 1 273 1 view .LVU39
 173              		@ sp needed
 174 000e 7047     		bx	lr
 175              	.L9:
 176              		.align	2
 177              	.L8:
 178 0010 00100240 		.word	1073876992
 179              		.cfi_endproc
 180              	.LFE35:
 182              		.section	.text.RCC_HSICmd,"ax",%progbits
 183              		.align	1
 184              		.global	RCC_HSICmd
 185              		.syntax unified
 186              		.code	16
 187              		.thumb_func
 188              		.fpu softvfp
 190              	RCC_HSICmd:
ARM GAS  /tmp/ccnQQ0zV.s 			page 9


 191              	.LVL6:
 192              	.LFB36:
 274:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 275:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 276:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 277:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     After enabling the HSI, the application software should wait on 
 278:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           HSIRDY flag to be set indicating that HSI clock is stable and can
 279:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           be used to clock the PLL and/or system clock.
 280:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     HSI can not be stopped if it is used directly or through the PLL
 281:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           as system clock. In this case, you have to select another source 
 282:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           of the system clock then stop the HSI.
 283:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     The HSI is stopped by hardware when entering STOP and STANDBY modes.
 284:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the HSI.
 285:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 286:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 287:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         clock cycles.
 288:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 289:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 290:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 291:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 193              		.loc 1 291 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 292:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 293:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 198              		.loc 1 293 3 view .LVU41
 294:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 295:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 199              		.loc 1 295 3 view .LVU42
 200              		.loc 1 295 6 is_stmt 0 view .LVU43
 201 0000 0028     		cmp	r0, #0
 202 0002 05D0     		beq	.L11
 296:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 297:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR |= RCC_CR_HSION;
 203              		.loc 1 297 5 is_stmt 1 view .LVU44
 204              		.loc 1 297 13 is_stmt 0 view .LVU45
 205 0004 054A     		ldr	r2, .L13
 206 0006 1368     		ldr	r3, [r2]
 207 0008 0121     		movs	r1, #1
 208 000a 0B43     		orrs	r3, r1
 209 000c 1360     		str	r3, [r2]
 210              	.L10:
 298:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 299:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 300:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 301:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR &= ~RCC_CR_HSION;
 302:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 303:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 211              		.loc 1 303 1 view .LVU46
 212              		@ sp needed
 213 000e 7047     		bx	lr
 214              	.L11:
 301:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 215              		.loc 1 301 5 is_stmt 1 view .LVU47
 301:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
ARM GAS  /tmp/ccnQQ0zV.s 			page 10


 216              		.loc 1 301 13 is_stmt 0 view .LVU48
 217 0010 024A     		ldr	r2, .L13
 218 0012 1368     		ldr	r3, [r2]
 219 0014 0121     		movs	r1, #1
 220 0016 8B43     		bics	r3, r1
 221 0018 1360     		str	r3, [r2]
 222              		.loc 1 303 1 view .LVU49
 223 001a F8E7     		b	.L10
 224              	.L14:
 225              		.align	2
 226              	.L13:
 227 001c 00100240 		.word	1073876992
 228              		.cfi_endproc
 229              	.LFE36:
 231              		.section	.text.RCC_AdjustHSI14CalibrationValue,"ax",%progbits
 232              		.align	1
 233              		.global	RCC_AdjustHSI14CalibrationValue
 234              		.syntax unified
 235              		.code	16
 236              		.thumb_func
 237              		.fpu softvfp
 239              	RCC_AdjustHSI14CalibrationValue:
 240              	.LVL7:
 241              	.LFB37:
 304:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 305:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 306:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator for ADC (HSI14) 
 307:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         calibration value.
 308:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 309:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 310:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         Refer to the Application Note AN3300 for more details on how to  
 311:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         calibrate the HSI14.
 312:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  HSI14CalibrationValue: specifies the HSI14 calibration trimming value.
 313:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 314:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 315:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 316:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_AdjustHSI14CalibrationValue(uint8_t HSI14CalibrationValue)
 317:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 242              		.loc 1 317 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 318:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
 247              		.loc 1 318 3 view .LVU51
 319:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 320:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 321:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_HSI14_CALIBRATION_VALUE(HSI14CalibrationValue));
 248              		.loc 1 321 3 view .LVU52
 322:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 323:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CR2;
 249              		.loc 1 323 3 view .LVU53
 250              		.loc 1 323 10 is_stmt 0 view .LVU54
 251 0000 034A     		ldr	r2, .L16
 252 0002 536B     		ldr	r3, [r2, #52]
 253              	.LVL8:
 324:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
ARM GAS  /tmp/ccnQQ0zV.s 			page 11


 325:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear HSI14TRIM[4:0] bits */
 326:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~RCC_CR2_HSI14TRIM;
 254              		.loc 1 326 3 is_stmt 1 view .LVU55
 255              		.loc 1 326 10 is_stmt 0 view .LVU56
 256 0004 F821     		movs	r1, #248
 257 0006 8B43     		bics	r3, r1
 258              	.LVL9:
 327:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 328:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the HSITRIM14[4:0] bits according to HSI14CalibrationValue value */
 329:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= (uint32_t)HSI14CalibrationValue << 3;
 259              		.loc 1 329 3 is_stmt 1 view .LVU57
 260              		.loc 1 329 45 is_stmt 0 view .LVU58
 261 0008 C000     		lsls	r0, r0, #3
 262              	.LVL10:
 263              		.loc 1 329 10 view .LVU59
 264 000a 1843     		orrs	r0, r3
 265              	.LVL11:
 330:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 331:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 332:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CR2 = tmpreg;
 266              		.loc 1 332 3 is_stmt 1 view .LVU60
 267              		.loc 1 332 12 is_stmt 0 view .LVU61
 268 000c 5063     		str	r0, [r2, #52]
 333:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 269              		.loc 1 333 1 view .LVU62
 270              		@ sp needed
 271 000e 7047     		bx	lr
 272              	.L17:
 273              		.align	2
 274              	.L16:
 275 0010 00100240 		.word	1073876992
 276              		.cfi_endproc
 277              	.LFE37:
 279              		.section	.text.RCC_HSI14Cmd,"ax",%progbits
 280              		.align	1
 281              		.global	RCC_HSI14Cmd
 282              		.syntax unified
 283              		.code	16
 284              		.thumb_func
 285              		.fpu softvfp
 287              	RCC_HSI14Cmd:
 288              	.LVL12:
 289              	.LFB38:
 334:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 335:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 336:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator for ADC (HSI14).
 337:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     After enabling the HSI14, the application software should wait on 
 338:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           HSIRDY flag to be set indicating that HSI clock is stable and can
 339:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           be used to clock the ADC.
 340:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     The HSI14 is stopped by hardware when entering STOP and STANDBY modes.
 341:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the HSI14.
 342:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 343:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   When the HSI14 is stopped, HSI14RDY flag goes low after 6 HSI14 oscillator
 344:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         clock cycles.
 345:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 346:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 347:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_HSI14Cmd(FunctionalState NewState)
ARM GAS  /tmp/ccnQQ0zV.s 			page 12


 348:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 290              		.loc 1 348 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 349:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 350:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 295              		.loc 1 350 3 view .LVU64
 351:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 352:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 296              		.loc 1 352 3 view .LVU65
 297              		.loc 1 352 6 is_stmt 0 view .LVU66
 298 0000 0028     		cmp	r0, #0
 299 0002 05D0     		beq	.L19
 353:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 354:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR2 |= RCC_CR2_HSI14ON;
 300              		.loc 1 354 5 is_stmt 1 view .LVU67
 301              		.loc 1 354 14 is_stmt 0 view .LVU68
 302 0004 054A     		ldr	r2, .L21
 303 0006 536B     		ldr	r3, [r2, #52]
 304 0008 0121     		movs	r1, #1
 305 000a 0B43     		orrs	r3, r1
 306 000c 5363     		str	r3, [r2, #52]
 307              	.L18:
 355:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 356:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 357:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 358:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR2 &= ~RCC_CR2_HSI14ON;
 359:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 360:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 308              		.loc 1 360 1 view .LVU69
 309              		@ sp needed
 310 000e 7047     		bx	lr
 311              	.L19:
 358:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 312              		.loc 1 358 5 is_stmt 1 view .LVU70
 358:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 313              		.loc 1 358 14 is_stmt 0 view .LVU71
 314 0010 024A     		ldr	r2, .L21
 315 0012 536B     		ldr	r3, [r2, #52]
 316 0014 0121     		movs	r1, #1
 317 0016 8B43     		bics	r3, r1
 318 0018 5363     		str	r3, [r2, #52]
 319              		.loc 1 360 1 view .LVU72
 320 001a F8E7     		b	.L18
 321              	.L22:
 322              		.align	2
 323              	.L21:
 324 001c 00100240 		.word	1073876992
 325              		.cfi_endproc
 326              	.LFE38:
 328              		.section	.text.RCC_HSI14ADCRequestCmd,"ax",%progbits
 329              		.align	1
 330              		.global	RCC_HSI14ADCRequestCmd
 331              		.syntax unified
 332              		.code	16
ARM GAS  /tmp/ccnQQ0zV.s 			page 13


 333              		.thumb_func
 334              		.fpu softvfp
 336              	RCC_HSI14ADCRequestCmd:
 337              	.LVL13:
 338              	.LFB39:
 361:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 362:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 363:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator request from ADC.
 364:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the HSI14 ADC request.
 365:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 366:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 367:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 368:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_HSI14ADCRequestCmd(FunctionalState NewState)
 369:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 339              		.loc 1 369 1 is_stmt 1 view -0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 0
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 370:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 371:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 344              		.loc 1 371 3 view .LVU74
 372:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 373:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 345              		.loc 1 373 3 view .LVU75
 346              		.loc 1 373 6 is_stmt 0 view .LVU76
 347 0000 0028     		cmp	r0, #0
 348 0002 05D0     		beq	.L24
 374:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 375:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR2 &= ~RCC_CR2_HSI14DIS;
 349              		.loc 1 375 5 is_stmt 1 view .LVU77
 350              		.loc 1 375 14 is_stmt 0 view .LVU78
 351 0004 054A     		ldr	r2, .L26
 352 0006 536B     		ldr	r3, [r2, #52]
 353 0008 0421     		movs	r1, #4
 354 000a 8B43     		bics	r3, r1
 355 000c 5363     		str	r3, [r2, #52]
 356              	.L23:
 376:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 377:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 378:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 379:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR2 |= RCC_CR2_HSI14DIS;
 380:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 381:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 357              		.loc 1 381 1 view .LVU79
 358              		@ sp needed
 359 000e 7047     		bx	lr
 360              	.L24:
 379:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 361              		.loc 1 379 5 is_stmt 1 view .LVU80
 379:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 362              		.loc 1 379 14 is_stmt 0 view .LVU81
 363 0010 024A     		ldr	r2, .L26
 364 0012 536B     		ldr	r3, [r2, #52]
 365 0014 0421     		movs	r1, #4
 366 0016 0B43     		orrs	r3, r1
 367 0018 5363     		str	r3, [r2, #52]
ARM GAS  /tmp/ccnQQ0zV.s 			page 14


 368              		.loc 1 381 1 view .LVU82
 369 001a F8E7     		b	.L23
 370              	.L27:
 371              		.align	2
 372              	.L26:
 373 001c 00100240 		.word	1073876992
 374              		.cfi_endproc
 375              	.LFE39:
 377              		.section	.text.RCC_LSEConfig,"ax",%progbits
 378              		.align	1
 379              		.global	RCC_LSEConfig
 380              		.syntax unified
 381              		.code	16
 382              		.thumb_func
 383              		.fpu softvfp
 385              	RCC_LSEConfig:
 386              	.LVL14:
 387              	.LFB40:
 382:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 383:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 384:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 385:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     As the LSE is in the Backup domain and write access is denied to this
 386:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           domain after reset, you have to enable write access using 
 387:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 388:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           (to be done once after reset).
 389:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 390:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           software should wait on LSERDY flag to be set indicating that LSE clock
 391:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           is stable and can be used to clock the RTC.
 392:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 393:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 394:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 395:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                       6 LSE oscillator clock cycles.
 396:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSE_ON: turn ON the LSE oscillator
 397:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 398:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 399:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 400:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_LSEConfig(uint32_t RCC_LSE)
 401:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 388              		.loc 1 401 1 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 402:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 403:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 393              		.loc 1 403 3 view .LVU84
 404:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 405:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 406:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset LSEON bit */
 407:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEON);
 394              		.loc 1 407 3 view .LVU85
 395              		.loc 1 407 13 is_stmt 0 view .LVU86
 396 0000 064B     		ldr	r3, .L29
 397 0002 196A     		ldr	r1, [r3, #32]
 398 0004 0122     		movs	r2, #1
 399 0006 9143     		bics	r1, r2
 400 0008 1962     		str	r1, [r3, #32]
ARM GAS  /tmp/ccnQQ0zV.s 			page 15


 408:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 409:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Reset LSEBYP bit */
 410:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEBYP);
 401              		.loc 1 410 3 is_stmt 1 view .LVU87
 402              		.loc 1 410 13 is_stmt 0 view .LVU88
 403 000a 196A     		ldr	r1, [r3, #32]
 404 000c 0332     		adds	r2, r2, #3
 405 000e 9143     		bics	r1, r2
 406 0010 1962     		str	r1, [r3, #32]
 411:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 412:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Configure LSE */
 413:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR |= RCC_LSE;
 407              		.loc 1 413 3 is_stmt 1 view .LVU89
 408              		.loc 1 413 13 is_stmt 0 view .LVU90
 409 0012 1A6A     		ldr	r2, [r3, #32]
 410 0014 0243     		orrs	r2, r0
 411 0016 1A62     		str	r2, [r3, #32]
 414:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 412              		.loc 1 414 1 view .LVU91
 413              		@ sp needed
 414 0018 7047     		bx	lr
 415              	.L30:
 416 001a C046     		.align	2
 417              	.L29:
 418 001c 00100240 		.word	1073876992
 419              		.cfi_endproc
 420              	.LFE40:
 422              		.section	.text.RCC_LSEDriveConfig,"ax",%progbits
 423              		.align	1
 424              		.global	RCC_LSEDriveConfig
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	RCC_LSEDriveConfig:
 431              	.LVL15:
 432              	.LFB41:
 415:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 416:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 417:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE) drive capability.
 418:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_LSEDrive: specifies the new state of the LSE drive capability.
 419:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 420:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSEDrive_Low: LSE oscillator low drive capability.
 421:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSEDrive_MediumLow: LSE oscillator medium low drive capability.
 422:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSEDrive_MediumHigh: LSE oscillator medium high drive capability.
 423:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_LSEDrive_High: LSE oscillator high drive capability.
 424:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 425:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 426:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_LSEDriveConfig(uint32_t RCC_LSEDrive)
 427:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 433              		.loc 1 427 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 428:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 429:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_LSE_DRIVE(RCC_LSEDrive));
ARM GAS  /tmp/ccnQQ0zV.s 			page 16


 438              		.loc 1 429 3 view .LVU93
 430:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 431:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear LSEDRV[1:0] bits */
 432:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEDRV);
 439              		.loc 1 432 3 view .LVU94
 440              		.loc 1 432 13 is_stmt 0 view .LVU95
 441 0000 044B     		ldr	r3, .L32
 442 0002 196A     		ldr	r1, [r3, #32]
 443 0004 1822     		movs	r2, #24
 444 0006 9143     		bics	r1, r2
 445 0008 1962     		str	r1, [r3, #32]
 433:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 434:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the LSE Drive */
 435:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR |= RCC_LSEDrive;
 446              		.loc 1 435 3 is_stmt 1 view .LVU96
 447              		.loc 1 435 13 is_stmt 0 view .LVU97
 448 000a 1A6A     		ldr	r2, [r3, #32]
 449 000c 0243     		orrs	r2, r0
 450 000e 1A62     		str	r2, [r3, #32]
 436:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 451              		.loc 1 436 1 view .LVU98
 452              		@ sp needed
 453 0010 7047     		bx	lr
 454              	.L33:
 455 0012 C046     		.align	2
 456              	.L32:
 457 0014 00100240 		.word	1073876992
 458              		.cfi_endproc
 459              	.LFE41:
 461              		.section	.text.RCC_LSICmd,"ax",%progbits
 462              		.align	1
 463              		.global	RCC_LSICmd
 464              		.syntax unified
 465              		.code	16
 466              		.thumb_func
 467              		.fpu softvfp
 469              	RCC_LSICmd:
 470              	.LVL16:
 471              	.LFB42:
 437:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 438:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 439:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 440:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     After enabling the LSI, the application software should wait on 
 441:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           LSIRDY flag to be set indicating that LSI clock is stable and can
 442:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           be used to clock the IWDG and/or the RTC.
 443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     LSI can not be disabled if the IWDG is running.
 444:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the LSI.
 445:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 446:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         clock cycles.
 448:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 449:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 450:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 472              		.loc 1 451 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccnQQ0zV.s 			page 17


 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 452:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 453:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 477              		.loc 1 453 3 view .LVU100
 454:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 455:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 478              		.loc 1 455 3 view .LVU101
 479              		.loc 1 455 6 is_stmt 0 view .LVU102
 480 0000 0028     		cmp	r0, #0
 481 0002 05D0     		beq	.L35
 456:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 457:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CSR |= RCC_CSR_LSION;
 482              		.loc 1 457 5 is_stmt 1 view .LVU103
 483              		.loc 1 457 14 is_stmt 0 view .LVU104
 484 0004 054A     		ldr	r2, .L37
 485 0006 536A     		ldr	r3, [r2, #36]
 486 0008 0121     		movs	r1, #1
 487 000a 0B43     		orrs	r3, r1
 488 000c 5362     		str	r3, [r2, #36]
 489              	.L34:
 458:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 459:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 460:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 461:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CSR &= ~RCC_CSR_LSION;
 462:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 463:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 490              		.loc 1 463 1 view .LVU105
 491              		@ sp needed
 492 000e 7047     		bx	lr
 493              	.L35:
 461:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 494              		.loc 1 461 5 is_stmt 1 view .LVU106
 461:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 495              		.loc 1 461 14 is_stmt 0 view .LVU107
 496 0010 024A     		ldr	r2, .L37
 497 0012 536A     		ldr	r3, [r2, #36]
 498 0014 0121     		movs	r1, #1
 499 0016 8B43     		bics	r3, r1
 500 0018 5362     		str	r3, [r2, #36]
 501              		.loc 1 463 1 view .LVU108
 502 001a F8E7     		b	.L34
 503              	.L38:
 504              		.align	2
 505              	.L37:
 506 001c 00100240 		.word	1073876992
 507              		.cfi_endproc
 508              	.LFE42:
 510              		.section	.text.RCC_PLLConfig,"ax",%progbits
 511              		.align	1
 512              		.global	RCC_PLLConfig
 513              		.syntax unified
 514              		.code	16
 515              		.thumb_func
 516              		.fpu softvfp
 518              	RCC_PLLConfig:
 519              	.LVL17:
ARM GAS  /tmp/ccnQQ0zV.s 			page 18


 520              	.LFB43:
 464:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 465:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 466:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 467:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 468:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
 469:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 470:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 471:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock selected as PLL clock source
 472:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 473:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   The minimum input clock frequency for PLL is 2 MHz (when using HSE as
 474:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         PLL source).
 475:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
 476:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor, which drive the PLLVCO clock
 477:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be RCC_PLLMul_x where x:[2,16] 
 478:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *
 479:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 480:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 481:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 482:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 521              		.loc 1 482 1 is_stmt 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		.loc 1 482 1 is_stmt 0 view .LVU110
 526 0000 10B5     		push	{r4, lr}
 527              	.LCFI0:
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 4, -8
 530              		.cfi_offset 14, -4
 483:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 484:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 531              		.loc 1 484 3 is_stmt 1 view .LVU111
 485:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 532              		.loc 1 485 3 view .LVU112
 486:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 487:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear PLL Source [16] and Multiplier [21:18] bits */
 488:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR &= ~(RCC_CFGR_PLLMULL | RCC_CFGR_PLLSRC);
 533              		.loc 1 488 3 view .LVU113
 534              		.loc 1 488 13 is_stmt 0 view .LVU114
 535 0002 054B     		ldr	r3, .L40
 536 0004 5C68     		ldr	r4, [r3, #4]
 537 0006 054A     		ldr	r2, .L40+4
 538 0008 1440     		ands	r4, r2
 539 000a 5C60     		str	r4, [r3, #4]
 489:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 490:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the PLL Source and Multiplier */
 491:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR |= (uint32_t)(RCC_PLLSource | RCC_PLLMul);
 540              		.loc 1 491 3 is_stmt 1 view .LVU115
 541              		.loc 1 491 13 is_stmt 0 view .LVU116
 542 000c 5A68     		ldr	r2, [r3, #4]
 543              		.loc 1 491 41 view .LVU117
 544 000e 0843     		orrs	r0, r1
 545              	.LVL18:
 546              		.loc 1 491 13 view .LVU118
 547 0010 0243     		orrs	r2, r0
 548 0012 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccnQQ0zV.s 			page 19


 492:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 549              		.loc 1 492 1 view .LVU119
 550              		@ sp needed
 551 0014 10BD     		pop	{r4, pc}
 552              	.L41:
 553 0016 C046     		.align	2
 554              	.L40:
 555 0018 00100240 		.word	1073876992
 556 001c FFFFC2FF 		.word	-3997697
 557              		.cfi_endproc
 558              	.LFE43:
 560              		.section	.text.RCC_PLLCmd,"ax",%progbits
 561              		.align	1
 562              		.global	RCC_PLLCmd
 563              		.syntax unified
 564              		.code	16
 565              		.thumb_func
 566              		.fpu softvfp
 568              	RCC_PLLCmd:
 569              	.LVL19:
 570              	.LFB44:
 493:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 494:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 495:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the PLL.
 496:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   - After enabling the PLL, the application software should wait on 
 497:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           PLLRDY flag to be set indicating that PLL clock is stable and can
 498:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           be used as system clock source.
 499:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         - The PLL can not be disabled if it is used as system clock source
 500:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         - The PLL is disabled by hardware when entering STOP and STANDBY modes.
 501:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the PLL.
 502:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 503:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 504:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 505:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 506:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 571              		.loc 1 506 1 is_stmt 1 view -0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 507:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 508:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 576              		.loc 1 508 3 view .LVU121
 509:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 510:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 577              		.loc 1 510 3 view .LVU122
 578              		.loc 1 510 6 is_stmt 0 view .LVU123
 579 0000 0028     		cmp	r0, #0
 580 0002 06D0     		beq	.L43
 511:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 512:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR |= RCC_CR_PLLON;
 581              		.loc 1 512 5 is_stmt 1 view .LVU124
 582              		.loc 1 512 13 is_stmt 0 view .LVU125
 583 0004 064A     		ldr	r2, .L45
 584 0006 1168     		ldr	r1, [r2]
 585 0008 8023     		movs	r3, #128
 586 000a 5B04     		lsls	r3, r3, #17
ARM GAS  /tmp/ccnQQ0zV.s 			page 20


 587 000c 0B43     		orrs	r3, r1
 588 000e 1360     		str	r3, [r2]
 589              	.L42:
 513:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 514:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 515:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 516:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR &= ~RCC_CR_PLLON;
 517:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 518:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 590              		.loc 1 518 1 view .LVU126
 591              		@ sp needed
 592 0010 7047     		bx	lr
 593              	.L43:
 516:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 594              		.loc 1 516 5 is_stmt 1 view .LVU127
 516:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 595              		.loc 1 516 13 is_stmt 0 view .LVU128
 596 0012 034A     		ldr	r2, .L45
 597 0014 1368     		ldr	r3, [r2]
 598 0016 0349     		ldr	r1, .L45+4
 599 0018 0B40     		ands	r3, r1
 600 001a 1360     		str	r3, [r2]
 601              		.loc 1 518 1 view .LVU129
 602 001c F8E7     		b	.L42
 603              	.L46:
 604 001e C046     		.align	2
 605              	.L45:
 606 0020 00100240 		.word	1073876992
 607 0024 FFFFFFFE 		.word	-16777217
 608              		.cfi_endproc
 609              	.LFE44:
 611              		.section	.text.RCC_PREDIV1Config,"ax",%progbits
 612              		.align	1
 613              		.global	RCC_PREDIV1Config
 614              		.syntax unified
 615              		.code	16
 616              		.thumb_func
 617              		.fpu softvfp
 619              	RCC_PREDIV1Config:
 620              	.LVL20:
 621              	.LFB45:
 519:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 520:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 521:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 522:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 523:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 524:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 525:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 526:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 527:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Div)
 528:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 622              		.loc 1 528 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 529:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
ARM GAS  /tmp/ccnQQ0zV.s 			page 21


 627              		.loc 1 529 3 view .LVU131
 530:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 531:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 532:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 628              		.loc 1 532 3 view .LVU132
 533:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 534:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CFGR2;
 629              		.loc 1 534 3 view .LVU133
 630              		.loc 1 534 10 is_stmt 0 view .LVU134
 631 0000 034A     		ldr	r2, .L48
 632 0002 D36A     		ldr	r3, [r2, #44]
 633              	.LVL21:
 535:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear PREDIV1[3:0] bits */
 536:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~(RCC_CFGR2_PREDIV1);
 634              		.loc 1 536 3 is_stmt 1 view .LVU135
 635              		.loc 1 536 10 is_stmt 0 view .LVU136
 636 0004 0F21     		movs	r1, #15
 637 0006 8B43     		bics	r3, r1
 638              	.LVL22:
 537:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set the PREDIV1 division factor */
 538:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= RCC_PREDIV1_Div;
 639              		.loc 1 538 3 is_stmt 1 view .LVU137
 640              		.loc 1 538 10 is_stmt 0 view .LVU138
 641 0008 0343     		orrs	r3, r0
 642              	.LVL23:
 539:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 540:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR2 = tmpreg;
 643              		.loc 1 540 3 is_stmt 1 view .LVU139
 644              		.loc 1 540 14 is_stmt 0 view .LVU140
 645 000a D362     		str	r3, [r2, #44]
 541:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 646              		.loc 1 541 1 view .LVU141
 647              		@ sp needed
 648 000c 7047     		bx	lr
 649              	.L49:
 650 000e C046     		.align	2
 651              	.L48:
 652 0010 00100240 		.word	1073876992
 653              		.cfi_endproc
 654              	.LFE45:
 656              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 657              		.align	1
 658              		.global	RCC_ClockSecuritySystemCmd
 659              		.syntax unified
 660              		.code	16
 661              		.thumb_func
 662              		.fpu softvfp
 664              	RCC_ClockSecuritySystemCmd:
 665              	.LVL24:
 666              	.LFB46:
 542:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 543:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 544:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 545:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 546:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 547:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 548:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
ARM GAS  /tmp/ccnQQ0zV.s 			page 22


 549:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.
 550:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 551:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 552:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 553:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 554:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 555:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 667              		.loc 1 555 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 556:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 557:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 672              		.loc 1 557 3 view .LVU143
 558:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 559:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 673              		.loc 1 559 3 view .LVU144
 674              		.loc 1 559 6 is_stmt 0 view .LVU145
 675 0000 0028     		cmp	r0, #0
 676 0002 06D0     		beq	.L51
 560:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 561:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR |= RCC_CR_CSSON;
 677              		.loc 1 561 5 is_stmt 1 view .LVU146
 678              		.loc 1 561 13 is_stmt 0 view .LVU147
 679 0004 064A     		ldr	r2, .L53
 680 0006 1168     		ldr	r1, [r2]
 681 0008 8023     		movs	r3, #128
 682 000a 1B03     		lsls	r3, r3, #12
 683 000c 0B43     		orrs	r3, r1
 684 000e 1360     		str	r3, [r2]
 685              	.L50:
 562:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 563:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 564:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->CR &= ~RCC_CR_CSSON;
 566:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 567:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 686              		.loc 1 567 1 view .LVU148
 687              		@ sp needed
 688 0010 7047     		bx	lr
 689              	.L51:
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 690              		.loc 1 565 5 is_stmt 1 view .LVU149
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 691              		.loc 1 565 13 is_stmt 0 view .LVU150
 692 0012 034A     		ldr	r2, .L53
 693 0014 1368     		ldr	r3, [r2]
 694 0016 0349     		ldr	r1, .L53+4
 695 0018 0B40     		ands	r3, r1
 696 001a 1360     		str	r3, [r2]
 697              		.loc 1 567 1 view .LVU151
 698 001c F8E7     		b	.L50
 699              	.L54:
 700 001e C046     		.align	2
 701              	.L53:
 702 0020 00100240 		.word	1073876992
ARM GAS  /tmp/ccnQQ0zV.s 			page 23


 703 0024 FFFFF7FF 		.word	-524289
 704              		.cfi_endproc
 705              	.LFE46:
 707              		.section	.text.RCC_MCOConfig,"ax",%progbits
 708              		.align	1
 709              		.global	RCC_MCOConfig
 710              		.syntax unified
 711              		.code	16
 712              		.thumb_func
 713              		.fpu softvfp
 715              	RCC_MCOConfig:
 716              	.LVL25:
 717              	.LFB47:
 568:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 569:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 570:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Selects the clock source to output on MCO pin (PA8).
 571:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 572:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
 573:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 574:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_NoClock: No clock selected.
 575:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_HSI14: HSI14 oscillator clock selected.
 576:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_LSI: LSI oscillator clock selected.
 577:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_LSE: LSE oscillator clock selected.
 578:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_SYSCLK: System clock selected.
 579:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_HSI: HSI oscillator clock selected.
 580:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_HSE: HSE oscillator clock selected.
 581:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_MCOSource_PLLCLK_Div2: PLL clock divided by 2 selected.
 582:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 583:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 584:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCOSource)
 585:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 718              		.loc 1 585 1 is_stmt 1 view -0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 586:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 587:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_MCO_SOURCE(RCC_MCOSource));
 723              		.loc 1 587 3 view .LVU153
 588:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     
 589:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Select MCO clock source and prescaler */
 590:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE3_ADDRESS =  RCC_MCOSource;
 724              		.loc 1 590 3 view .LVU154
 725              		.loc 1 590 40 is_stmt 0 view .LVU155
 726 0000 014B     		ldr	r3, .L56
 727 0002 1870     		strb	r0, [r3]
 591:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 728              		.loc 1 591 1 view .LVU156
 729              		@ sp needed
 730 0004 7047     		bx	lr
 731              	.L57:
 732 0006 C046     		.align	2
 733              	.L56:
 734 0008 07100240 		.word	1073876999
 735              		.cfi_endproc
 736              	.LFE47:
 738              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
ARM GAS  /tmp/ccnQQ0zV.s 			page 24


 739              		.align	1
 740              		.global	RCC_SYSCLKConfig
 741              		.syntax unified
 742              		.code	16
 743              		.thumb_func
 744              		.fpu softvfp
 746              	RCC_SYSCLKConfig:
 747              	.LVL26:
 748              	.LFB48:
 592:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 593:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 594:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @}
 595:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 596:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 597:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC_Group2 System AHB and APB busses clocks configuration functions
 598:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 599:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *
 600:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @verbatim
 601:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
 602:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****      ##### System, AHB and APB busses clocks configuration functions #####
 603:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
 604:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 605:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] This section provide functions allowing to configure the System, AHB and 
 606:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          APB busses clocks.
 607:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 608:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              HSE and PLL.
 609:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable prescaler
 610:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              and used to clock the CPU, memory and peripherals mapped on AHB bus (DMA and GPIO).
 611:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              and APB (PCLK) clocks are derived from AHB clock through 
 612:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              configurable prescalers and used to clock the peripherals mapped on these busses.
 613:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              You can use "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks
 614:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 615:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 616:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) The ADC clock which is derived from HSI14 or APB (APB divided by a
 617:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****                   programmable prescaler: 2 or 4).
 618:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) The CEC clock which is derived from LSE or HSI divided by 244.
 619:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) The I2C clock which is derived from HSI or system clock (SYSCLK).
 620:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) The USART clock which is derived from HSI, system clock (SYSCLK), APB or LSE.
 621:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) The RTC/LCD clock which is derived from the LSE, LSI or 2 MHz HSE_RTC (HSE
 622:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****                   divided by a programmable prescaler).
 623:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****                   The System clock (SYSCLK) frequency must be higher or equal to the RTC/LCD
 624:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****                   clock frequency.
 625:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              (+@) IWDG clock which is always the LSI clock.
 626:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****        
 627:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) The maximum frequency of the SYSCLK, HCLK and PCLK is 48 MHz.
 628:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              Depending on the maximum frequency, the FLASH wait states (WS) should be 
 629:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              adapted accordingly:
 630:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         +--------------------------------------------- +
 631:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         |  Wait states  |   HCLK clock frequency (MHz) |
 632:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         |---------------|------------------------------|
 633:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         |0WS(1CPU cycle)|       0 < HCLK <= 24         |
 634:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         |---------------|------------------------------|
 635:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         |1WS(2CPU cycle)|       24 < HCLK <= 48        |
 636:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         +----------------------------------------------+
 637:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 638:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and 
 639:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              prefetch is disabled.
ARM GAS  /tmp/ccnQQ0zV.s 			page 25


 640:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 641:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] It is recommended to use the following software sequences to tune the number
 642:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          of wait states needed to access the Flash memory with the CPU frequency (HCLK).
 643:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (+) Increasing the CPU frequency
 644:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Program the Flash Prefetch buffer, using "FLASH_PrefetchBufferCmd(ENABLE)" 
 645:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               function
 646:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that Flash Prefetch buffer activation is taken into account by 
 647:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               reading FLASH_ACR using the FLASH_GetPrefetchBufferStatus() function
 648:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Program Flash WS to 1, using "FLASH_SetLatency(FLASH_Latency_1)" function
 649:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 650:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 651:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 652:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that the new CPU clock source is taken into account by reading 
 653:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               the clock source status, using "RCC_GetSYSCLKSource()" function 
 654:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (+) Decreasing the CPU frequency
 655:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 656:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 657:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that the new CPU clock source is taken into account by reading 
 658:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               the clock source status, using "RCC_GetSYSCLKSource()" function
 659:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Program the new number of WS, using "FLASH_SetLatency()" function
 660:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 661:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Disable the Flash Prefetch buffer using "FLASH_PrefetchBufferCmd(DISABLE)" 
 662:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               function
 663:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (++) Check that Flash Prefetch buffer deactivation is taken into account by reading FLASH_
 664:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****               using the FLASH_GetPrefetchBufferStatus() function.
 665:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 666:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @endverbatim
 667:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
 668:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 669:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 670:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 671:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 672:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note    The HSI is used (enabled by hardware) as system clock source after
 673:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           startup from Reset, wake-up from STOP and STANDBY mode, or in case
 674:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           of failure of the HSE used directly or indirectly as system clock
 675:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           (if the Clock Security System CSS is enabled).
 676:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     A switch from one clock source to another occurs only if the target
 677:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           clock source is ready (clock stable after startup delay or PLL locked). 
 678:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           If a clock source which is not yet ready is selected, the switch will
 679:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           occur when the clock source will be ready. 
 680:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           You can use RCC_GetSYSCLKSource() function to know which clock is
 681:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           currently used as system clock source.  
 682:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock source 
 683:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 684:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI:    HSI selected as system clock source
 685:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE:    HSE selected as system clock source
 686:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source
 687:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 688:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 689:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 690:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 749              		.loc 1 690 1 is_stmt 1 view -0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 691:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
ARM GAS  /tmp/ccnQQ0zV.s 			page 26


 754              		.loc 1 691 3 view .LVU158
 692:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 693:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 694:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 755              		.loc 1 694 3 view .LVU159
 695:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 696:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CFGR;
 756              		.loc 1 696 3 view .LVU160
 757              		.loc 1 696 10 is_stmt 0 view .LVU161
 758 0000 034A     		ldr	r2, .L59
 759 0002 5368     		ldr	r3, [r2, #4]
 760              	.LVL27:
 697:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 698:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear SW[1:0] bits */
 699:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 761              		.loc 1 699 3 is_stmt 1 view .LVU162
 762              		.loc 1 699 10 is_stmt 0 view .LVU163
 763 0004 0321     		movs	r1, #3
 764 0006 8B43     		bics	r3, r1
 765              	.LVL28:
 700:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 701:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 702:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 766              		.loc 1 702 3 is_stmt 1 view .LVU164
 767              		.loc 1 702 10 is_stmt 0 view .LVU165
 768 0008 0343     		orrs	r3, r0
 769              	.LVL29:
 703:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 704:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 705:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR = tmpreg;
 770              		.loc 1 705 3 is_stmt 1 view .LVU166
 771              		.loc 1 705 13 is_stmt 0 view .LVU167
 772 000a 5360     		str	r3, [r2, #4]
 706:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 773              		.loc 1 706 1 view .LVU168
 774              		@ sp needed
 775 000c 7047     		bx	lr
 776              	.L60:
 777 000e C046     		.align	2
 778              	.L59:
 779 0010 00100240 		.word	1073876992
 780              		.cfi_endproc
 781              	.LFE48:
 783              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 784              		.align	1
 785              		.global	RCC_GetSYSCLKSource
 786              		.syntax unified
 787              		.code	16
 788              		.thumb_func
 789              		.fpu softvfp
 791              	RCC_GetSYSCLKSource:
 792              	.LFB49:
 707:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 708:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 709:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Returns the clock source used as system clock.
 710:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  None
 711:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one 
ARM GAS  /tmp/ccnQQ0zV.s 			page 27


 712:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         of the following values:
 713:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              - 0x00: HSI used as system clock
 714:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              - 0x04: HSE used as system clock  
 715:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              - 0x08: PLL used as system clock
 716:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 717:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 718:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 793              		.loc 1 718 1 is_stmt 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 719:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 798              		.loc 1 719 3 view .LVU170
 799              		.loc 1 719 24 is_stmt 0 view .LVU171
 800 0000 024B     		ldr	r3, .L62
 801 0002 5B68     		ldr	r3, [r3, #4]
 802              		.loc 1 719 11 view .LVU172
 803 0004 0C20     		movs	r0, #12
 804 0006 1840     		ands	r0, r3
 720:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 805              		.loc 1 720 1 view .LVU173
 806              		@ sp needed
 807 0008 7047     		bx	lr
 808              	.L63:
 809 000a C046     		.align	2
 810              	.L62:
 811 000c 00100240 		.word	1073876992
 812              		.cfi_endproc
 813              	.LFE49:
 815              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 816              		.align	1
 817              		.global	RCC_HCLKConfig
 818              		.syntax unified
 819              		.code	16
 820              		.thumb_func
 821              		.fpu softvfp
 823              	RCC_HCLKConfig:
 824              	.LVL30:
 825              	.LFB50:
 721:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 722:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 723:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 724:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 725:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                     the system clock (SYSCLK).
 726:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 727:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div1:   AHB clock = SYSCLK
 728:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div2:   AHB clock = SYSCLK/2
 729:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div4:   AHB clock = SYSCLK/4
 730:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div8:   AHB clock = SYSCLK/8
 731:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div16:  AHB clock = SYSCLK/16
 732:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div64:  AHB clock = SYSCLK/64
 733:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 734:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 735:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 736:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 737:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
ARM GAS  /tmp/ccnQQ0zV.s 			page 28


 738:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 739:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 826              		.loc 1 739 1 is_stmt 1 view -0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 740:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
 831              		.loc 1 740 3 view .LVU175
 741:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 742:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 743:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 832              		.loc 1 743 3 view .LVU176
 744:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 745:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CFGR;
 833              		.loc 1 745 3 view .LVU177
 834              		.loc 1 745 10 is_stmt 0 view .LVU178
 835 0000 034A     		ldr	r2, .L65
 836 0002 5368     		ldr	r3, [r2, #4]
 837              	.LVL31:
 746:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 747:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear HPRE[3:0] bits */
 748:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 838              		.loc 1 748 3 is_stmt 1 view .LVU179
 839              		.loc 1 748 10 is_stmt 0 view .LVU180
 840 0004 F021     		movs	r1, #240
 841 0006 8B43     		bics	r3, r1
 842              	.LVL32:
 749:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 750:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 751:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= RCC_SYSCLK;
 843              		.loc 1 751 3 is_stmt 1 view .LVU181
 844              		.loc 1 751 10 is_stmt 0 view .LVU182
 845 0008 0343     		orrs	r3, r0
 846              	.LVL33:
 752:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 753:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 754:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR = tmpreg;
 847              		.loc 1 754 3 is_stmt 1 view .LVU183
 848              		.loc 1 754 13 is_stmt 0 view .LVU184
 849 000a 5360     		str	r3, [r2, #4]
 755:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 850              		.loc 1 755 1 view .LVU185
 851              		@ sp needed
 852 000c 7047     		bx	lr
 853              	.L66:
 854 000e C046     		.align	2
 855              	.L65:
 856 0010 00100240 		.word	1073876992
 857              		.cfi_endproc
 858              	.LFE50:
 860              		.section	.text.RCC_PCLKConfig,"ax",%progbits
 861              		.align	1
 862              		.global	RCC_PCLKConfig
 863              		.syntax unified
 864              		.code	16
 865              		.thumb_func
ARM GAS  /tmp/ccnQQ0zV.s 			page 29


 866              		.fpu softvfp
 868              	RCC_PCLKConfig:
 869              	.LVL34:
 870              	.LFB51:
 756:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 757:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 758:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the APB clock (PCLK).
 759:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_HCLK: defines the APB clock divider. This clock is derived from 
 760:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         the AHB clock (HCLK).
 761:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
 762:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HCLK_Div1: APB clock = HCLK
 763:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HCLK_Div2: APB clock = HCLK/2
 764:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HCLK_Div4: APB clock = HCLK/4
 765:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HCLK_Div8: APB clock = HCLK/8
 766:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_HCLK_Div16: APB clock = HCLK/16
 767:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 768:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 769:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_PCLKConfig(uint32_t RCC_HCLK)
 770:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 871              		.loc 1 770 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 771:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmpreg = 0;
 876              		.loc 1 771 3 view .LVU187
 772:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 773:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 774:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 877              		.loc 1 774 3 view .LVU188
 775:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 776:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg = RCC->CFGR;
 878              		.loc 1 776 3 view .LVU189
 879              		.loc 1 776 10 is_stmt 0 view .LVU190
 880 0000 034A     		ldr	r2, .L68
 881 0002 5368     		ldr	r3, [r2, #4]
 882              	.LVL35:
 777:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 778:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear PPRE[2:0] bits */
 779:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE;
 883              		.loc 1 779 3 is_stmt 1 view .LVU191
 884              		.loc 1 779 10 is_stmt 0 view .LVU192
 885 0004 0349     		ldr	r1, .L68+4
 886 0006 0B40     		ands	r3, r1
 887              	.LVL36:
 780:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 781:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set PPRE[2:0] bits according to RCC_HCLK value */
 782:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmpreg |= RCC_HCLK;
 888              		.loc 1 782 3 is_stmt 1 view .LVU193
 889              		.loc 1 782 10 is_stmt 0 view .LVU194
 890 0008 0343     		orrs	r3, r0
 891              	.LVL37:
 783:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 784:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Store the new value */
 785:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR = tmpreg;
 892              		.loc 1 785 3 is_stmt 1 view .LVU195
 893              		.loc 1 785 13 is_stmt 0 view .LVU196
ARM GAS  /tmp/ccnQQ0zV.s 			page 30


 894 000a 5360     		str	r3, [r2, #4]
 786:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 895              		.loc 1 786 1 view .LVU197
 896              		@ sp needed
 897 000c 7047     		bx	lr
 898              	.L69:
 899 000e C046     		.align	2
 900              	.L68:
 901 0010 00100240 		.word	1073876992
 902 0014 FFF8FFFF 		.word	-1793
 903              		.cfi_endproc
 904              	.LFE51:
 906              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 907              		.align	1
 908              		.global	RCC_ADCCLKConfig
 909              		.syntax unified
 910              		.code	16
 911              		.thumb_func
 912              		.fpu softvfp
 914              	RCC_ADCCLKConfig:
 915              	.LVL38:
 916              	.LFB52:
 787:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 788:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 789:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 790:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_ADCCLK: defines the ADC clock source. This clock is derived 
 791:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         from the HSI14 or APB clock (PCLK).
 792:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
 793:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_ADCCLK_HSI14: ADC clock = HSI14 (14MHz)
 794:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_ADCCLK_PCLK_Div2: ADC clock = PCLK/2
 795:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_ADCCLK_PCLK_Div4: ADC clock = PCLK/4  
 796:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 797:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 798:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_ADCCLK)
 799:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** { 
 917              		.loc 1 799 1 is_stmt 1 view -0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 0
 920              		@ frame_needed = 0, uses_anonymous_args = 0
 921              		@ link register save eliminated.
 800:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 801:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_ADCCLK));
 922              		.loc 1 801 3 view .LVU199
 802:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 803:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear ADCPRE bit */
 804:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR &= ~RCC_CFGR_ADCPRE;
 923              		.loc 1 804 3 view .LVU200
 924              		.loc 1 804 13 is_stmt 0 view .LVU201
 925 0000 094B     		ldr	r3, .L71
 926 0002 5A68     		ldr	r2, [r3, #4]
 927 0004 0949     		ldr	r1, .L71+4
 928 0006 0A40     		ands	r2, r1
 929 0008 5A60     		str	r2, [r3, #4]
 805:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set ADCPRE bits according to RCC_PCLK value */
 806:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR |= RCC_ADCCLK & 0xFFFF;
 930              		.loc 1 806 3 is_stmt 1 view .LVU202
 931              		.loc 1 806 13 is_stmt 0 view .LVU203
ARM GAS  /tmp/ccnQQ0zV.s 			page 31


 932 000a 5A68     		ldr	r2, [r3, #4]
 933              		.loc 1 806 27 view .LVU204
 934 000c 0104     		lsls	r1, r0, #16
 935 000e 090C     		lsrs	r1, r1, #16
 936              		.loc 1 806 13 view .LVU205
 937 0010 0A43     		orrs	r2, r1
 938 0012 5A60     		str	r2, [r3, #4]
 807:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 808:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear ADCSW bit */
 809:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 &= ~RCC_CFGR3_ADCSW; 
 939              		.loc 1 809 3 is_stmt 1 view .LVU206
 940              		.loc 1 809 14 is_stmt 0 view .LVU207
 941 0014 1A6B     		ldr	r2, [r3, #48]
 942 0016 0649     		ldr	r1, .L71+8
 943 0018 0A40     		ands	r2, r1
 944 001a 1A63     		str	r2, [r3, #48]
 810:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set ADCSW bits according to RCC_ADCCLK value */
 811:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 |= RCC_ADCCLK >> 16;  
 945              		.loc 1 811 3 is_stmt 1 view .LVU208
 946              		.loc 1 811 14 is_stmt 0 view .LVU209
 947 001c 1A6B     		ldr	r2, [r3, #48]
 948              		.loc 1 811 28 view .LVU210
 949 001e 000C     		lsrs	r0, r0, #16
 950              	.LVL39:
 951              		.loc 1 811 14 view .LVU211
 952 0020 1043     		orrs	r0, r2
 953 0022 1863     		str	r0, [r3, #48]
 812:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 954              		.loc 1 812 1 view .LVU212
 955              		@ sp needed
 956 0024 7047     		bx	lr
 957              	.L72:
 958 0026 C046     		.align	2
 959              	.L71:
 960 0028 00100240 		.word	1073876992
 961 002c FFBFFFFF 		.word	-16385
 962 0030 FFFEFFFF 		.word	-257
 963              		.cfi_endproc
 964              	.LFE52:
 966              		.section	.text.RCC_CECCLKConfig,"ax",%progbits
 967              		.align	1
 968              		.global	RCC_CECCLKConfig
 969              		.syntax unified
 970              		.code	16
 971              		.thumb_func
 972              		.fpu softvfp
 974              	RCC_CECCLKConfig:
 975              	.LVL40:
 976              	.LFB53:
 813:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 814:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 815:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the CEC clock (CECCLK).
 816:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_CECCLK: defines the CEC clock source. This clock is derived 
 817:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         from the HSI or LSE clock.
 818:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
 819:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_CECCLK_HSI_Div244: CEC clock = HSI/244 (32768Hz)
 820:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_CECCLK_LSE: CEC clock = LSE
ARM GAS  /tmp/ccnQQ0zV.s 			page 32


 821:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 822:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 823:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_CECCLKConfig(uint32_t RCC_CECCLK)
 824:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** { 
 977              		.loc 1 824 1 is_stmt 1 view -0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 825:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 826:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_CECCLK(RCC_CECCLK));
 982              		.loc 1 826 3 view .LVU214
 827:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 828:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear CECSW bit */
 829:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 &= ~RCC_CFGR3_CECSW;
 983              		.loc 1 829 3 view .LVU215
 984              		.loc 1 829 14 is_stmt 0 view .LVU216
 985 0000 044B     		ldr	r3, .L74
 986 0002 196B     		ldr	r1, [r3, #48]
 987 0004 4022     		movs	r2, #64
 988 0006 9143     		bics	r1, r2
 989 0008 1963     		str	r1, [r3, #48]
 830:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set CECSW bits according to RCC_CECCLK value */
 831:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 |= RCC_CECCLK;
 990              		.loc 1 831 3 is_stmt 1 view .LVU217
 991              		.loc 1 831 14 is_stmt 0 view .LVU218
 992 000a 1A6B     		ldr	r2, [r3, #48]
 993 000c 0243     		orrs	r2, r0
 994 000e 1A63     		str	r2, [r3, #48]
 832:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 995              		.loc 1 832 1 view .LVU219
 996              		@ sp needed
 997 0010 7047     		bx	lr
 998              	.L75:
 999 0012 C046     		.align	2
 1000              	.L74:
 1001 0014 00100240 		.word	1073876992
 1002              		.cfi_endproc
 1003              	.LFE53:
 1005              		.section	.text.RCC_I2CCLKConfig,"ax",%progbits
 1006              		.align	1
 1007              		.global	RCC_I2CCLKConfig
 1008              		.syntax unified
 1009              		.code	16
 1010              		.thumb_func
 1011              		.fpu softvfp
 1013              	RCC_I2CCLKConfig:
 1014              	.LVL41:
 1015              	.LFB54:
 833:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 834:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 835:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the I2C1 clock (I2C1CLK).
 836:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_I2CCLK: defines the I2C1 clock source. This clock is derived 
 837:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         from the HSI or System clock.
 838:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
 839:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_I2C1CLK_HSI: I2C1 clock = HSI
 840:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_I2C1CLK_SYSCLK: I2C1 clock = System Clock
ARM GAS  /tmp/ccnQQ0zV.s 			page 33


 841:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 842:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 843:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_I2CCLKConfig(uint32_t RCC_I2CCLK)
 844:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** { 
 1016              		.loc 1 844 1 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 845:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 846:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_I2CCLK(RCC_I2CCLK));
 1021              		.loc 1 846 3 view .LVU221
 847:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 848:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear I2CSW bit */
 849:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 &= ~RCC_CFGR3_I2C1SW;
 1022              		.loc 1 849 3 view .LVU222
 1023              		.loc 1 849 14 is_stmt 0 view .LVU223
 1024 0000 044B     		ldr	r3, .L77
 1025 0002 196B     		ldr	r1, [r3, #48]
 1026 0004 1022     		movs	r2, #16
 1027 0006 9143     		bics	r1, r2
 1028 0008 1963     		str	r1, [r3, #48]
 850:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set I2CSW bits according to RCC_I2CCLK value */
 851:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 |= RCC_I2CCLK;
 1029              		.loc 1 851 3 is_stmt 1 view .LVU224
 1030              		.loc 1 851 14 is_stmt 0 view .LVU225
 1031 000a 1A6B     		ldr	r2, [r3, #48]
 1032 000c 0243     		orrs	r2, r0
 1033 000e 1A63     		str	r2, [r3, #48]
 852:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1034              		.loc 1 852 1 view .LVU226
 1035              		@ sp needed
 1036 0010 7047     		bx	lr
 1037              	.L78:
 1038 0012 C046     		.align	2
 1039              	.L77:
 1040 0014 00100240 		.word	1073876992
 1041              		.cfi_endproc
 1042              	.LFE54:
 1044              		.section	.text.RCC_USARTCLKConfig,"ax",%progbits
 1045              		.align	1
 1046              		.global	RCC_USARTCLKConfig
 1047              		.syntax unified
 1048              		.code	16
 1049              		.thumb_func
 1050              		.fpu softvfp
 1052              	RCC_USARTCLKConfig:
 1053              	.LVL42:
 1054              	.LFB55:
 853:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 854:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 855:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the USART1 clock (USART1CLK).
 856:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_USARTCLK: defines the USART1 clock source. This clock is derived 
 857:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         from the HSI or System clock.
 858:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
 859:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_USART1CLK_PCLK: USART1 clock = APB Clock (PCLK)
 860:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_USART1CLK_SYSCLK: USART1 clock = System Clock
ARM GAS  /tmp/ccnQQ0zV.s 			page 34


 861:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_USART1CLK_LSE: USART1 clock = LSE Clock
 862:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_USART1CLK_HSI: USART1 clock = HSI Clock
 863:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 864:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 865:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_USARTCLKConfig(uint32_t RCC_USARTCLK)
 866:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** { 
 1055              		.loc 1 866 1 is_stmt 1 view -0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              		@ link register save eliminated.
 867:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
 868:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_USARTCLK(RCC_USARTCLK));
 1060              		.loc 1 868 3 view .LVU228
 869:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 870:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Clear USARTSW[1:0] bit */
 871:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 &= ~RCC_CFGR3_USART1SW;
 1061              		.loc 1 871 3 view .LVU229
 1062              		.loc 1 871 14 is_stmt 0 view .LVU230
 1063 0000 044B     		ldr	r3, .L80
 1064 0002 196B     		ldr	r1, [r3, #48]
 1065 0004 0322     		movs	r2, #3
 1066 0006 9143     		bics	r1, r2
 1067 0008 1963     		str	r1, [r3, #48]
 872:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set USARTSW bits according to RCC_USARTCLK value */
 873:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CFGR3 |= RCC_USARTCLK;
 1068              		.loc 1 873 3 is_stmt 1 view .LVU231
 1069              		.loc 1 873 14 is_stmt 0 view .LVU232
 1070 000a 1A6B     		ldr	r2, [r3, #48]
 1071 000c 0243     		orrs	r2, r0
 1072 000e 1A63     		str	r2, [r3, #48]
 874:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1073              		.loc 1 874 1 view .LVU233
 1074              		@ sp needed
 1075 0010 7047     		bx	lr
 1076              	.L81:
 1077 0012 C046     		.align	2
 1078              	.L80:
 1079 0014 00100240 		.word	1073876992
 1080              		.cfi_endproc
 1081              	.LFE55:
 1083              		.global	__aeabi_uidiv
 1084              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1085              		.align	1
 1086              		.global	RCC_GetClocksFreq
 1087              		.syntax unified
 1088              		.code	16
 1089              		.thumb_func
 1090              		.fpu softvfp
 1092              	RCC_GetClocksFreq:
 1093              	.LVL43:
 1094              	.LFB56:
 875:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 876:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
 877:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Returns the frequencies of the System, AHB and APB busses clocks.
 878:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note    The frequency returned by this function is not the real frequency
 879:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           in the chip. It is calculated based on the predefined constant and
ARM GAS  /tmp/ccnQQ0zV.s 			page 35


 880:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           the source selected by RCC_SYSCLKConfig():
 881:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                                              
 882:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     If SYSCLK source is HSI, function returns constant HSI_VALUE(*)
 883:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                                              
 884:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     If SYSCLK source is HSE, function returns constant HSE_VALUE(**)
 885:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                          
 886:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     If SYSCLK source is PLL, function returns constant HSE_VALUE(**) 
 887:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 888:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         
 889:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         (*) HSI_VALUE is a constant defined in stm32f0xx.h file (default value
 890:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             8 MHz) but the real value may vary depending on the variations
 891:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             in voltage and temperature, refer to RCC_AdjustHSICalibrationValue().   
 892:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *    
 893:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         (**) HSE_VALUE is a constant defined in stm32f0xx.h file (default value
 894:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 895:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              frequency of the crystal used. Otherwise, this function may
 896:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              return wrong result.
 897:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                
 898:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         - The result of this function could be not correct when using fractional
 899:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           value for HSE crystal.   
 900:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             
 901:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold 
 902:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         the clocks frequencies. 
 903:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     
 904:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     This function can be used by the user application to compute the 
 905:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           baudrate for the communication peripherals or configure other parameters.
 906:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     Each time SYSCLK, HCLK and/or PCLK clock changes, this function
 907:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           must be called to update the structure's field. Otherwise, any
 908:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           configuration based on this function will be incorrect.
 909:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *    
 910:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
 911:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
 912:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 913:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1095              		.loc 1 913 1 is_stmt 1 view -0
 1096              		.cfi_startproc
 1097              		@ args = 0, pretend = 0, frame = 0
 1098              		@ frame_needed = 0, uses_anonymous_args = 0
 1099              		.loc 1 913 1 is_stmt 0 view .LVU235
 1100 0000 70B5     		push	{r4, r5, r6, lr}
 1101              	.LCFI1:
 1102              		.cfi_def_cfa_offset 16
 1103              		.cfi_offset 4, -16
 1104              		.cfi_offset 5, -12
 1105              		.cfi_offset 6, -8
 1106              		.cfi_offset 14, -4
 1107 0002 0400     		movs	r4, r0
 914:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0, presc = 0;
 1108              		.loc 1 914 3 is_stmt 1 view .LVU236
 1109              	.LVL44:
 915:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 916:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 917:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 1110              		.loc 1 917 3 view .LVU237
 1111              		.loc 1 917 12 is_stmt 0 view .LVU238
 1112 0004 424B     		ldr	r3, .L102
 1113 0006 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccnQQ0zV.s 			page 36


 1114              		.loc 1 917 7 view .LVU239
 1115 0008 0C23     		movs	r3, #12
 1116 000a 1340     		ands	r3, r2
 1117              	.LVL45:
 918:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 919:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   switch (tmp)
 1118              		.loc 1 919 3 is_stmt 1 view .LVU240
 1119 000c 042B     		cmp	r3, #4
 1120 000e 34D0     		beq	.L83
 1121 0010 082B     		cmp	r3, #8
 1122 0012 35D0     		beq	.L84
 1123 0014 002B     		cmp	r3, #0
 1124 0016 02D0     		beq	.L99
 920:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 921:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     case 0x00:  /* HSI used as system clock */
 922:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 923:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 924:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     case 0x04:  /* HSE used as system clock */
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 926:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 927:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     case 0x08:  /* PLL used as system clock */
 928:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 929:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 930:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 932:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       
 933:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       if (pllsource == 0x00)
 934:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       {
 935:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 937:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }
 938:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       else
 939:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       {
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 941:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 943:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }      
 944:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 945:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     default: /* HSI used as system clock */
 946:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1125              		.loc 1 946 7 view .LVU241
 1126              		.loc 1 946 36 is_stmt 0 view .LVU242
 1127 0018 3E4B     		ldr	r3, .L102+4
 1128              	.LVL46:
 1129              		.loc 1 946 36 view .LVU243
 1130 001a 0360     		str	r3, [r0]
 947:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1131              		.loc 1 947 7 is_stmt 1 view .LVU244
 1132 001c 01E0     		b	.L86
 1133              	.LVL47:
 1134              	.L99:
 922:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1135              		.loc 1 922 7 view .LVU245
 922:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1136              		.loc 1 922 36 is_stmt 0 view .LVU246
 1137 001e 3D4B     		ldr	r3, .L102+4
 1138              	.LVL48:
ARM GAS  /tmp/ccnQQ0zV.s 			page 37


 922:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1139              		.loc 1 922 36 view .LVU247
 1140 0020 0360     		str	r3, [r0]
 923:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     case 0x04:  /* HSE used as system clock */
 1141              		.loc 1 923 7 is_stmt 1 view .LVU248
 1142              	.LVL49:
 1143              	.L86:
 948:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 949:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Compute HCLK, PCLK clocks frequencies -----------------------------------*/
 950:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Get HCLK prescaler */
 951:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 1144              		.loc 1 951 3 view .LVU249
 1145              		.loc 1 951 12 is_stmt 0 view .LVU250
 1146 0022 3B4A     		ldr	r2, .L102
 1147 0024 5168     		ldr	r1, [r2, #4]
 1148              	.LVL50:
 952:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = tmp >> 4;
 1149              		.loc 1 952 3 is_stmt 1 view .LVU251
 1150              		.loc 1 952 7 is_stmt 0 view .LVU252
 1151 0026 0909     		lsrs	r1, r1, #4
 1152              	.LVL51:
 1153              		.loc 1 952 7 view .LVU253
 1154 0028 0F23     		movs	r3, #15
 1155 002a 0B40     		ands	r3, r1
 1156              	.LVL52:
 953:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   presc = APBAHBPrescTable[tmp]; 
 1157              		.loc 1 953 3 is_stmt 1 view .LVU254
 1158              		.loc 1 953 27 is_stmt 0 view .LVU255
 1159 002c 3A4D     		ldr	r5, .L102+8
 1160 002e EB5C     		ldrb	r3, [r5, r3]
 1161              	.LVL53:
 1162              		.loc 1 953 27 view .LVU256
 1163 0030 DBB2     		uxtb	r3, r3
 1164              	.LVL54:
 954:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* HCLK clock frequency */
 955:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 1165              		.loc 1 955 3 is_stmt 1 view .LVU257
 1166              		.loc 1 955 42 is_stmt 0 view .LVU258
 1167 0032 2668     		ldr	r6, [r4]
 1168              		.loc 1 955 61 view .LVU259
 1169 0034 3100     		movs	r1, r6
 1170              	.LVL55:
 1171              		.loc 1 955 61 view .LVU260
 1172 0036 D940     		lsrs	r1, r1, r3
 1173 0038 0B00     		movs	r3, r1
 1174              	.LVL56:
 1175              		.loc 1 955 30 view .LVU261
 1176 003a 6160     		str	r1, [r4, #4]
 956:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 957:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Get PCLK prescaler */
 958:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE;
 1177              		.loc 1 958 3 is_stmt 1 view .LVU262
 1178              		.loc 1 958 12 is_stmt 0 view .LVU263
 1179 003c 5068     		ldr	r0, [r2, #4]
 1180              	.LVL57:
 959:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = tmp >> 8;
 1181              		.loc 1 959 3 is_stmt 1 view .LVU264
ARM GAS  /tmp/ccnQQ0zV.s 			page 38


 1182              		.loc 1 959 7 is_stmt 0 view .LVU265
 1183 003e 000A     		lsrs	r0, r0, #8
 1184              	.LVL58:
 1185              		.loc 1 959 7 view .LVU266
 1186 0040 0721     		movs	r1, #7
 1187 0042 0140     		ands	r1, r0
 1188              	.LVL59:
 960:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1189              		.loc 1 960 3 is_stmt 1 view .LVU267
 1190              		.loc 1 960 27 is_stmt 0 view .LVU268
 1191 0044 695C     		ldrb	r1, [r5, r1]
 1192              	.LVL60:
 1193              		.loc 1 960 27 view .LVU269
 1194 0046 C9B2     		uxtb	r1, r1
 1195              	.LVL61:
 961:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* PCLK clock frequency */
 962:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC_Clocks->PCLK_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1196              		.loc 1 962 3 is_stmt 1 view .LVU270
 1197              		.loc 1 962 59 is_stmt 0 view .LVU271
 1198 0048 CB40     		lsrs	r3, r3, r1
 1199              		.loc 1 962 30 view .LVU272
 1200 004a A360     		str	r3, [r4, #8]
 963:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 964:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* ADCCLK clock frequency */
 965:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_ADCSW) != RCC_CFGR3_ADCSW)
 1201              		.loc 1 965 3 is_stmt 1 view .LVU273
 1202              		.loc 1 965 10 is_stmt 0 view .LVU274
 1203 004c 126B     		ldr	r2, [r2, #48]
 1204              		.loc 1 965 5 view .LVU275
 1205 004e D205     		lsls	r2, r2, #23
 1206 0050 33D4     		bmi	.L88
 966:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 967:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* ADC Clock is HSI14 Osc. */
 968:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->ADCCLK_Frequency = HSI14_VALUE;
 1207              		.loc 1 968 5 is_stmt 1 view .LVU276
 1208              		.loc 1 968 34 is_stmt 0 view .LVU277
 1209 0052 324A     		ldr	r2, .L102+12
 1210 0054 E260     		str	r2, [r4, #12]
 1211              	.L89:
 969:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 970:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 971:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 972:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     if((RCC->CFGR & RCC_CFGR_ADCPRE) != RCC_CFGR_ADCPRE)
 973:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     {
 974:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       /* ADC Clock is derived from PCLK/2 */
 975:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK_Frequency >> 1;
 976:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 977:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     else
 978:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     {
 979:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       /* ADC Clock is derived from PCLK/4 */
 980:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK_Frequency >> 2;
 981:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 982:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     
 983:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 984:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 985:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* CECCLK clock frequency */
 986:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_CECSW) != RCC_CFGR3_CECSW)
ARM GAS  /tmp/ccnQQ0zV.s 			page 39


 1212              		.loc 1 986 3 is_stmt 1 view .LVU278
 1213              		.loc 1 986 10 is_stmt 0 view .LVU279
 1214 0056 2E4A     		ldr	r2, .L102
 1215 0058 126B     		ldr	r2, [r2, #48]
 1216              		.loc 1 986 5 view .LVU280
 1217 005a 5206     		lsls	r2, r2, #25
 1218 005c 37D4     		bmi	.L91
 987:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 988:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* CEC Clock is HSI/256 */
 989:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->CECCLK_Frequency = HSI_VALUE / 244;
 1219              		.loc 1 989 5 is_stmt 1 view .LVU281
 1220              		.loc 1 989 34 is_stmt 0 view .LVU282
 1221 005e 304A     		ldr	r2, .L102+16
 1222 0060 2261     		str	r2, [r4, #16]
 1223              	.L92:
 990:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 991:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
 992:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 993:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* CECC Clock is LSE Osc. */
 994:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->CECCLK_Frequency = LSE_VALUE;
 995:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 996:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 997:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* I2C1CLK clock frequency */
 998:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_I2C1SW) != RCC_CFGR3_I2C1SW)
 1224              		.loc 1 998 3 is_stmt 1 view .LVU283
 1225              		.loc 1 998 10 is_stmt 0 view .LVU284
 1226 0062 2B4A     		ldr	r2, .L102
 1227 0064 126B     		ldr	r2, [r2, #48]
 1228              		.loc 1 998 5 view .LVU285
 1229 0066 D206     		lsls	r2, r2, #27
 1230 0068 35D4     		bmi	.L93
 999:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1000:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* I2C1 Clock is HSI Osc. */
1001:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = HSI_VALUE;
 1231              		.loc 1 1001 5 is_stmt 1 view .LVU286
 1232              		.loc 1 1001 35 is_stmt 0 view .LVU287
 1233 006a 2A4A     		ldr	r2, .L102+4
 1234 006c 6261     		str	r2, [r4, #20]
 1235              	.L94:
1002:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1003:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1004:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1005:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* I2C1 Clock is System Clock */
1006:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
1007:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1008:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1009:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* USART1CLK clock frequency */
1010:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == 0x0)
 1236              		.loc 1 1010 3 is_stmt 1 view .LVU288
 1237              		.loc 1 1010 10 is_stmt 0 view .LVU289
 1238 006e 284A     		ldr	r2, .L102
 1239 0070 126B     		ldr	r2, [r2, #48]
 1240              		.loc 1 1010 5 view .LVU290
 1241 0072 9207     		lsls	r2, r2, #30
 1242 0074 31D1     		bne	.L95
1011:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1012:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* USART1 Clock is PCLK */
ARM GAS  /tmp/ccnQQ0zV.s 			page 40


1013:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->PCLK_Frequency;
 1243              		.loc 1 1013 5 is_stmt 1 view .LVU291
 1244              		.loc 1 1013 37 is_stmt 0 view .LVU292
 1245 0076 A361     		str	r3, [r4, #24]
 1246              	.L82:
1014:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_0)
1016:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1017:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* USART1 Clock is System Clock */
1018:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
1019:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_1)
1021:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1022:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* USART1 Clock is LSE Osc. */
1023:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = LSE_VALUE;
1024:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW)
1026:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1027:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* USART1 Clock is HSI Osc. */
1028:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = HSI_VALUE;
1029:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1030:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1031:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1247              		.loc 1 1031 1 view .LVU293
 1248              		@ sp needed
 1249              	.LVL62:
 1250              		.loc 1 1031 1 view .LVU294
 1251 0078 70BD     		pop	{r4, r5, r6, pc}
 1252              	.LVL63:
 1253              	.L83:
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1254              		.loc 1 925 7 is_stmt 1 view .LVU295
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1255              		.loc 1 925 36 is_stmt 0 view .LVU296
 1256 007a 264B     		ldr	r3, .L102+4
 1257              	.LVL64:
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       break;
 1258              		.loc 1 925 36 view .LVU297
 1259 007c 0360     		str	r3, [r0]
 926:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     case 0x08:  /* PLL used as system clock */
 1260              		.loc 1 926 7 is_stmt 1 view .LVU298
 1261 007e D0E7     		b	.L86
 1262              	.LVL65:
 1263              	.L84:
 929:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 1264              		.loc 1 929 7 view .LVU299
 929:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 1265              		.loc 1 929 20 is_stmt 0 view .LVU300
 1266 0080 234B     		ldr	r3, .L102
 1267              	.LVL66:
 929:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 1268              		.loc 1 929 20 view .LVU301
 1269 0082 5868     		ldr	r0, [r3, #4]
 1270              	.LVL67:
 930:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1271              		.loc 1 930 7 is_stmt 1 view .LVU302
 930:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
ARM GAS  /tmp/ccnQQ0zV.s 			page 41


 1272              		.loc 1 930 22 is_stmt 0 view .LVU303
 1273 0084 5B68     		ldr	r3, [r3, #4]
 1274              	.LVL68:
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       
 1275              		.loc 1 931 7 is_stmt 1 view .LVU304
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       
 1276              		.loc 1 931 27 is_stmt 0 view .LVU305
 1277 0086 800C     		lsrs	r0, r0, #18
 1278              	.LVL69:
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       
 1279              		.loc 1 931 27 view .LVU306
 1280 0088 0F25     		movs	r5, #15
 1281 008a 0540     		ands	r5, r0
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       
 1282              		.loc 1 931 15 view .LVU307
 1283 008c 0235     		adds	r5, r5, #2
 1284              	.LVL70:
 933:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       {
 1285              		.loc 1 933 7 is_stmt 1 view .LVU308
 933:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       {
 1286              		.loc 1 933 10 is_stmt 0 view .LVU309
 1287 008e DB03     		lsls	r3, r3, #15
 1288 0090 08D4     		bmi	.L87
 1289              	.LVL71:
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }
 1290              		.loc 1 936 9 is_stmt 1 view .LVU310
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }
 1291              		.loc 1 936 57 is_stmt 0 view .LVU311
 1292 0092 6B01     		lsls	r3, r5, #5
 1293 0094 5B1B     		subs	r3, r3, r5
 1294 0096 9801     		lsls	r0, r3, #6
 1295 0098 C01A     		subs	r0, r0, r3
 1296 009a C000     		lsls	r0, r0, #3
 1297 009c 4519     		adds	r5, r0, r5
 1298              	.LVL72:
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }
 1299              		.loc 1 936 57 view .LVU312
 1300 009e 2D02     		lsls	r5, r5, #8
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }
 1301              		.loc 1 936 38 view .LVU313
 1302 00a0 2560     		str	r5, [r4]
 1303 00a2 BEE7     		b	.L86
 1304              	.LVL73:
 1305              	.L87:
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 1306              		.loc 1 940 9 is_stmt 1 view .LVU314
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 1307              		.loc 1 940 29 is_stmt 0 view .LVU315
 1308 00a4 1A4B     		ldr	r3, .L102
 1309 00a6 DB6A     		ldr	r3, [r3, #44]
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 1310              		.loc 1 940 37 view .LVU316
 1311 00a8 0F21     		movs	r1, #15
 1312 00aa 1940     		ands	r1, r3
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 1313              		.loc 1 940 23 view .LVU317
 1314 00ac 0131     		adds	r1, r1, #1
ARM GAS  /tmp/ccnQQ0zV.s 			page 42


 1315              	.LVL74:
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }      
 1316              		.loc 1 942 9 is_stmt 1 view .LVU318
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }      
 1317              		.loc 1 942 51 is_stmt 0 view .LVU319
 1318 00ae 1948     		ldr	r0, .L102+4
 1319 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 1320              	.LVL75:
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }      
 1321              		.loc 1 942 68 view .LVU320
 1322 00b4 4543     		muls	r5, r0
 1323              	.LVL76:
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****       }      
 1324              		.loc 1 942 38 view .LVU321
 1325 00b6 2560     		str	r5, [r4]
 1326 00b8 B3E7     		b	.L86
 1327              	.LVL77:
 1328              	.L88:
 972:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     {
 1329              		.loc 1 972 5 is_stmt 1 view .LVU322
 972:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     {
 1330              		.loc 1 972 12 is_stmt 0 view .LVU323
 1331 00ba 154A     		ldr	r2, .L102
 1332 00bc 5268     		ldr	r2, [r2, #4]
 972:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     {
 1333              		.loc 1 972 7 view .LVU324
 1334 00be 5204     		lsls	r2, r2, #17
 1335 00c0 02D4     		bmi	.L90
 975:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1336              		.loc 1 975 7 is_stmt 1 view .LVU325
 975:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1337              		.loc 1 975 65 is_stmt 0 view .LVU326
 1338 00c2 5A08     		lsrs	r2, r3, #1
 975:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1339              		.loc 1 975 36 view .LVU327
 1340 00c4 E260     		str	r2, [r4, #12]
 1341 00c6 C6E7     		b	.L89
 1342              	.L90:
 980:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1343              		.loc 1 980 7 is_stmt 1 view .LVU328
 980:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1344              		.loc 1 980 65 is_stmt 0 view .LVU329
 1345 00c8 9A08     		lsrs	r2, r3, #2
 980:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     }
 1346              		.loc 1 980 36 view .LVU330
 1347 00ca E260     		str	r2, [r4, #12]
 1348 00cc C3E7     		b	.L89
 1349              	.L91:
 994:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1350              		.loc 1 994 5 is_stmt 1 view .LVU331
 994:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1351              		.loc 1 994 34 is_stmt 0 view .LVU332
 1352 00ce 8022     		movs	r2, #128
 1353 00d0 1202     		lsls	r2, r2, #8
 1354 00d2 2261     		str	r2, [r4, #16]
 1355 00d4 C5E7     		b	.L92
 1356              	.L93:
ARM GAS  /tmp/ccnQQ0zV.s 			page 43


1006:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1357              		.loc 1 1006 5 is_stmt 1 view .LVU333
1006:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1358              		.loc 1 1006 35 is_stmt 0 view .LVU334
 1359 00d6 6661     		str	r6, [r4, #20]
 1360 00d8 C9E7     		b	.L94
 1361              	.L95:
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1362              		.loc 1 1015 8 is_stmt 1 view .LVU335
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1363              		.loc 1 1015 15 is_stmt 0 view .LVU336
 1364 00da 0D4B     		ldr	r3, .L102
 1365 00dc 1A6B     		ldr	r2, [r3, #48]
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1366              		.loc 1 1015 23 view .LVU337
 1367 00de 0323     		movs	r3, #3
 1368 00e0 1340     		ands	r3, r2
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1369              		.loc 1 1015 10 view .LVU338
 1370 00e2 012B     		cmp	r3, #1
 1371 00e4 0ED0     		beq	.L100
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1372              		.loc 1 1020 8 is_stmt 1 view .LVU339
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1373              		.loc 1 1020 15 is_stmt 0 view .LVU340
 1374 00e6 0A4B     		ldr	r3, .L102
 1375 00e8 1A6B     		ldr	r2, [r3, #48]
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1376              		.loc 1 1020 23 view .LVU341
 1377 00ea 0323     		movs	r3, #3
 1378 00ec 1340     		ands	r3, r2
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1379              		.loc 1 1020 10 view .LVU342
 1380 00ee 022B     		cmp	r3, #2
 1381 00f0 0AD0     		beq	.L101
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1382              		.loc 1 1025 8 is_stmt 1 view .LVU343
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1383              		.loc 1 1025 15 is_stmt 0 view .LVU344
 1384 00f2 074B     		ldr	r3, .L102
 1385 00f4 1A6B     		ldr	r2, [r3, #48]
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1386              		.loc 1 1025 23 view .LVU345
 1387 00f6 0323     		movs	r3, #3
 1388 00f8 1340     		ands	r3, r2
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1389              		.loc 1 1025 10 view .LVU346
 1390 00fa 032B     		cmp	r3, #3
 1391 00fc BCD1     		bne	.L82
1028:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1392              		.loc 1 1028 5 is_stmt 1 view .LVU347
1028:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1393              		.loc 1 1028 37 is_stmt 0 view .LVU348
 1394 00fe 054B     		ldr	r3, .L102+4
 1395 0100 A361     		str	r3, [r4, #24]
 1396              		.loc 1 1031 1 view .LVU349
 1397 0102 B9E7     		b	.L82
ARM GAS  /tmp/ccnQQ0zV.s 			page 44


 1398              	.L100:
1018:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1399              		.loc 1 1018 5 is_stmt 1 view .LVU350
1018:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1400              		.loc 1 1018 37 is_stmt 0 view .LVU351
 1401 0104 A661     		str	r6, [r4, #24]
 1402 0106 B7E7     		b	.L82
 1403              	.L101:
1023:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1404              		.loc 1 1023 5 is_stmt 1 view .LVU352
1023:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1405              		.loc 1 1023 37 is_stmt 0 view .LVU353
 1406 0108 8023     		movs	r3, #128
 1407 010a 1B02     		lsls	r3, r3, #8
 1408 010c A361     		str	r3, [r4, #24]
 1409 010e B3E7     		b	.L82
 1410              	.L103:
 1411              		.align	2
 1412              	.L102:
 1413 0110 00100240 		.word	1073876992
 1414 0114 00127A00 		.word	8000000
 1415 0118 00000000 		.word	.LANCHOR0
 1416 011c 809FD500 		.word	14000000
 1417 0120 12800000 		.word	32786
 1418              		.cfi_endproc
 1419              	.LFE56:
 1421              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1422              		.align	1
 1423              		.global	RCC_RTCCLKConfig
 1424              		.syntax unified
 1425              		.code	16
 1426              		.thumb_func
 1427              		.fpu softvfp
 1429              	RCC_RTCCLKConfig:
 1430              	.LVL78:
 1431              	.LFB57:
1032:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1033:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1034:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1035:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @}
1036:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1037:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1038:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1039:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1040:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *
1041:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @verbatim
1042:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
1043:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              #####Peripheral clocks configuration functions #####
1044:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================  
1045:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1046:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1047:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) The RTC clock which is derived from the LSE, LSI or  HSE_Div32 (HSE
1048:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              divided by 32).
1049:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) After restart from Reset or wakeup from STANDBY, all peripherals are off
1050:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              except internal SRAM, Flash and SWD. Before to start using a peripheral you
1051:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              have to enable its interface clock. You can do this using RCC_AHBPeriphClockCmd(),
1052:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              RCC_APB2PeriphClockCmd() and RCC_APB1PeriphClockCmd() functions.
ARM GAS  /tmp/ccnQQ0zV.s 			page 45


1053:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****          (#) To reset the peripherals configuration (to the default state after device reset)
1054:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() and 
1055:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              RCC_APB1PeriphResetCmd() functions.
1056:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1057:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @endverbatim
1058:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
1059:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1060:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1061:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1062:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1063:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     As the RTC clock configuration bits are in the Backup domain and write
1064:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           access is denied to this domain after reset, you have to enable write
1065:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           access using PWR_BackupAccessCmd(ENABLE) function before to configure
1066:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           the RTC clock source (to be done once after reset).    
1067:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     Once the RTC clock is configured it can't be changed unless the RTC
1068:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           is reset using RCC_BackupResetCmd function, or by a Power On Reset (POR)
1069:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             
1070:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1071:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *   This parameter can be one of the following values:
1072:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1073:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1074:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div32: HSE divided by 32 selected as RTC clock
1075:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *       
1076:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     If the LSE or LSI is used as RTC clock source, the RTC continues to
1077:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           work in STOP and STANDBY modes, and can be used as wakeup source.
1078:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           However, when the HSE clock is used as RTC clock source, the RTC
1079:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           cannot be used in STOP and STANDBY modes.
1080:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             
1081:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note     The maximum input clock frequency for RTC is 2MHz (when using HSE as
1082:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           RTC clock source).
1083:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *                          
1084:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1085:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1086:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1087:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1432              		.loc 1 1087 1 is_stmt 1 view -0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
1088:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1089:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 1437              		.loc 1 1089 3 view .LVU355
1090:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1091:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Select the RTC clock source */
1092:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 1438              		.loc 1 1092 3 view .LVU356
 1439              		.loc 1 1092 13 is_stmt 0 view .LVU357
 1440 0000 024A     		ldr	r2, .L105
 1441 0002 136A     		ldr	r3, [r2, #32]
 1442 0004 0343     		orrs	r3, r0
 1443 0006 1362     		str	r3, [r2, #32]
1093:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1444              		.loc 1 1093 1 view .LVU358
 1445              		@ sp needed
 1446 0008 7047     		bx	lr
 1447              	.L106:
ARM GAS  /tmp/ccnQQ0zV.s 			page 46


 1448 000a C046     		.align	2
 1449              	.L105:
 1450 000c 00100240 		.word	1073876992
 1451              		.cfi_endproc
 1452              	.LFE57:
 1454              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 1455              		.align	1
 1456              		.global	RCC_RTCCLKCmd
 1457              		.syntax unified
 1458              		.code	16
 1459              		.thumb_func
 1460              		.fpu softvfp
 1462              	RCC_RTCCLKCmd:
 1463              	.LVL79:
 1464              	.LFB58:
1094:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1095:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1096:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the RTC clock.
1097:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1098:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1099:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the RTC clock.
1100:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1101:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1102:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1103:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1104:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1465              		.loc 1 1104 1 is_stmt 1 view -0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
1105:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1106:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1470              		.loc 1 1106 3 view .LVU360
1107:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1108:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1471              		.loc 1 1108 3 view .LVU361
 1472              		.loc 1 1108 6 is_stmt 0 view .LVU362
 1473 0000 0028     		cmp	r0, #0
 1474 0002 06D0     		beq	.L108
1109:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1110:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->BDCR |= RCC_BDCR_RTCEN;
 1475              		.loc 1 1110 5 is_stmt 1 view .LVU363
 1476              		.loc 1 1110 15 is_stmt 0 view .LVU364
 1477 0004 064A     		ldr	r2, .L110
 1478 0006 116A     		ldr	r1, [r2, #32]
 1479 0008 8023     		movs	r3, #128
 1480 000a 1B02     		lsls	r3, r3, #8
 1481 000c 0B43     		orrs	r3, r1
 1482 000e 1362     		str	r3, [r2, #32]
 1483              	.L107:
1111:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1112:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1113:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->BDCR &= ~RCC_BDCR_RTCEN;
1115:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1116:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
ARM GAS  /tmp/ccnQQ0zV.s 			page 47


 1484              		.loc 1 1116 1 view .LVU365
 1485              		@ sp needed
 1486 0010 7047     		bx	lr
 1487              	.L108:
1114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1488              		.loc 1 1114 5 is_stmt 1 view .LVU366
1114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1489              		.loc 1 1114 15 is_stmt 0 view .LVU367
 1490 0012 034A     		ldr	r2, .L110
 1491 0014 136A     		ldr	r3, [r2, #32]
 1492 0016 0349     		ldr	r1, .L110+4
 1493 0018 0B40     		ands	r3, r1
 1494 001a 1362     		str	r3, [r2, #32]
 1495              		.loc 1 1116 1 view .LVU368
 1496 001c F8E7     		b	.L107
 1497              	.L111:
 1498 001e C046     		.align	2
 1499              	.L110:
 1500 0020 00100240 		.word	1073876992
 1501 0024 FF7FFFFF 		.word	-32769
 1502              		.cfi_endproc
 1503              	.LFE58:
 1505              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 1506              		.align	1
 1507              		.global	RCC_BackupResetCmd
 1508              		.syntax unified
 1509              		.code	16
 1510              		.thumb_func
 1511              		.fpu softvfp
 1513              	RCC_BackupResetCmd:
 1514              	.LVL80:
 1515              	.LFB59:
1117:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1118:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1119:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1120:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1121:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         and the RTC clock source selection in RCC_BDCR register.
1122:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1123:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1124:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1125:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1126:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1127:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1516              		.loc 1 1127 1 is_stmt 1 view -0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
1128:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1129:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1521              		.loc 1 1129 3 view .LVU370
1130:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1131:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1522              		.loc 1 1131 3 view .LVU371
 1523              		.loc 1 1131 6 is_stmt 0 view .LVU372
 1524 0000 0028     		cmp	r0, #0
 1525 0002 06D0     		beq	.L113
ARM GAS  /tmp/ccnQQ0zV.s 			page 48


1132:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1133:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->BDCR |= RCC_BDCR_BDRST;
 1526              		.loc 1 1133 5 is_stmt 1 view .LVU373
 1527              		.loc 1 1133 15 is_stmt 0 view .LVU374
 1528 0004 064A     		ldr	r2, .L115
 1529 0006 116A     		ldr	r1, [r2, #32]
 1530 0008 8023     		movs	r3, #128
 1531 000a 5B02     		lsls	r3, r3, #9
 1532 000c 0B43     		orrs	r3, r1
 1533 000e 1362     		str	r3, [r2, #32]
 1534              	.L112:
1134:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1135:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1136:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->BDCR &= ~RCC_BDCR_BDRST;
1138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1139:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1535              		.loc 1 1139 1 view .LVU375
 1536              		@ sp needed
 1537 0010 7047     		bx	lr
 1538              	.L113:
1137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1539              		.loc 1 1137 5 is_stmt 1 view .LVU376
1137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1540              		.loc 1 1137 15 is_stmt 0 view .LVU377
 1541 0012 034A     		ldr	r2, .L115
 1542 0014 136A     		ldr	r3, [r2, #32]
 1543 0016 0349     		ldr	r1, .L115+4
 1544 0018 0B40     		ands	r3, r1
 1545 001a 1362     		str	r3, [r2, #32]
 1546              		.loc 1 1139 1 view .LVU378
 1547 001c F8E7     		b	.L112
 1548              	.L116:
 1549 001e C046     		.align	2
 1550              	.L115:
 1551 0020 00100240 		.word	1073876992
 1552 0024 FFFFFEFF 		.word	-65537
 1553              		.cfi_endproc
 1554              	.LFE59:
 1556              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 1557              		.align	1
 1558              		.global	RCC_AHBPeriphClockCmd
 1559              		.syntax unified
 1560              		.code	16
 1561              		.thumb_func
 1562              		.fpu softvfp
 1564              	RCC_AHBPeriphClockCmd:
 1565              	.LVL81:
 1566              	.LFB60:
1140:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1141:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1142:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1143:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1144:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1145:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         using it.    
1146:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1147:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
ARM GAS  /tmp/ccnQQ0zV.s 			page 49


1148:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOA:         GPIOA clock
1149:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOB:         GPIOB clock
1150:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOC:         GPIOC clock
1151:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOD:         GPIOD clock
1152:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOF:         GPIOF clock
1153:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_TS:            TS clock
1154:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_CRC:           CRC clock
1155:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_FLITF: (has effect only when the Flash memory is in power down m
1156:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_SRAM:          SRAM clock
1157:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_DMA1:          DMA1 clock
1158:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1159:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1160:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1161:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1162:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1163:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1567              		.loc 1 1163 1 is_stmt 1 view -0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 0
 1570              		@ frame_needed = 0, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
1164:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1165:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
 1572              		.loc 1 1165 3 view .LVU380
1166:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1573              		.loc 1 1166 3 view .LVU381
1167:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1168:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1574              		.loc 1 1168 3 view .LVU382
 1575              		.loc 1 1168 6 is_stmt 0 view .LVU383
 1576 0000 0029     		cmp	r1, #0
 1577 0002 04D0     		beq	.L118
1169:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1170:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 1578              		.loc 1 1170 5 is_stmt 1 view .LVU384
 1579              		.loc 1 1170 17 is_stmt 0 view .LVU385
 1580 0004 044A     		ldr	r2, .L120
 1581 0006 5369     		ldr	r3, [r2, #20]
 1582 0008 1843     		orrs	r0, r3
 1583              	.LVL82:
 1584              		.loc 1 1170 17 view .LVU386
 1585 000a 5061     		str	r0, [r2, #20]
 1586              	.L117:
1171:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1172:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1173:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
1175:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1176:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1587              		.loc 1 1176 1 view .LVU387
 1588              		@ sp needed
 1589 000c 7047     		bx	lr
 1590              	.LVL83:
 1591              	.L118:
1174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1592              		.loc 1 1174 5 is_stmt 1 view .LVU388
1174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
ARM GAS  /tmp/ccnQQ0zV.s 			page 50


 1593              		.loc 1 1174 17 is_stmt 0 view .LVU389
 1594 000e 024A     		ldr	r2, .L120
 1595 0010 5369     		ldr	r3, [r2, #20]
 1596 0012 8343     		bics	r3, r0
 1597 0014 5361     		str	r3, [r2, #20]
 1598              		.loc 1 1176 1 view .LVU390
 1599 0016 F9E7     		b	.L117
 1600              	.L121:
 1601              		.align	2
 1602              	.L120:
 1603 0018 00100240 		.word	1073876992
 1604              		.cfi_endproc
 1605              	.LFE60:
 1607              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 1608              		.align	1
 1609              		.global	RCC_APB2PeriphClockCmd
 1610              		.syntax unified
 1611              		.code	16
 1612              		.thumb_func
 1613              		.fpu softvfp
 1615              	RCC_APB2PeriphClockCmd:
 1616              	.LVL84:
 1617              	.LFB61:
1177:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1178:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1179:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1180:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1181:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1182:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         using it.
1183:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1185:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_SYSCFG:      SYSCFG clock
1186:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_ADC1:        ADC1 clock
1187:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM1:        TIM1 clock
1188:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_SPI1:        SPI1 clock
1189:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_USART1:      USART1 clock
1190:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM15:       TIM15 clock
1191:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM16:       TIM16 clock
1192:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM17:       TIM17 clock
1193:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_DBGMCU:      DBGMCU clock
1194:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1195:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1196:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1197:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1198:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1199:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1618              		.loc 1 1199 1 is_stmt 1 view -0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 0, uses_anonymous_args = 0
 1622              		@ link register save eliminated.
1200:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1201:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 1623              		.loc 1 1201 3 view .LVU392
1202:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1624              		.loc 1 1202 3 view .LVU393
1203:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
ARM GAS  /tmp/ccnQQ0zV.s 			page 51


1204:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1625              		.loc 1 1204 3 view .LVU394
 1626              		.loc 1 1204 6 is_stmt 0 view .LVU395
 1627 0000 0029     		cmp	r1, #0
 1628 0002 04D0     		beq	.L123
1205:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1206:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 1629              		.loc 1 1206 5 is_stmt 1 view .LVU396
 1630              		.loc 1 1206 18 is_stmt 0 view .LVU397
 1631 0004 044A     		ldr	r2, .L125
 1632 0006 9369     		ldr	r3, [r2, #24]
 1633 0008 1843     		orrs	r0, r3
 1634              	.LVL85:
 1635              		.loc 1 1206 18 view .LVU398
 1636 000a 9061     		str	r0, [r2, #24]
 1637              	.L122:
1207:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1208:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1209:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1210:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
1211:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1212:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1638              		.loc 1 1212 1 view .LVU399
 1639              		@ sp needed
 1640 000c 7047     		bx	lr
 1641              	.LVL86:
 1642              	.L123:
1210:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1643              		.loc 1 1210 5 is_stmt 1 view .LVU400
1210:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1644              		.loc 1 1210 18 is_stmt 0 view .LVU401
 1645 000e 024A     		ldr	r2, .L125
 1646 0010 9369     		ldr	r3, [r2, #24]
 1647 0012 8343     		bics	r3, r0
 1648 0014 9361     		str	r3, [r2, #24]
 1649              		.loc 1 1212 1 view .LVU402
 1650 0016 F9E7     		b	.L122
 1651              	.L126:
 1652              		.align	2
 1653              	.L125:
 1654 0018 00100240 		.word	1073876992
 1655              		.cfi_endproc
 1656              	.LFE61:
 1658              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 1659              		.align	1
 1660              		.global	RCC_APB1PeriphClockCmd
 1661              		.syntax unified
 1662              		.code	16
 1663              		.thumb_func
 1664              		.fpu softvfp
 1666              	RCC_APB1PeriphClockCmd:
 1667              	.LVL87:
 1668              	.LFB62:
1213:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1214:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1215:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1216:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
ARM GAS  /tmp/ccnQQ0zV.s 			page 52


1217:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1218:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         using it.
1219:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1220:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1221:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM2:      TIM2 clock
1222:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM3:      TIM3 clock
1223:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM6:      TIM6 clock
1224:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM14:     TIM14 clock
1225:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_WWDG:      WWDG clock
1226:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_SPI2:      SPI2 clock
1227:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_USART2:    USART2 clock
1228:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_I2C1:      I2C1 clock
1229:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_I2C2:      I2C2 clock
1230:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_PWR:       PWR clock
1231:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_DAC:       DAC clock
1232:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_CEC:       CEC clock                               
1233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1234:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1236:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1237:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1238:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1669              		.loc 1 1238 1 is_stmt 1 view -0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 1673              		@ link register save eliminated.
1239:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1240:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 1674              		.loc 1 1240 3 view .LVU404
1241:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1675              		.loc 1 1241 3 view .LVU405
1242:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1243:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1676              		.loc 1 1243 3 view .LVU406
 1677              		.loc 1 1243 6 is_stmt 0 view .LVU407
 1678 0000 0029     		cmp	r1, #0
 1679 0002 04D0     		beq	.L128
1244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1245:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 1680              		.loc 1 1245 5 is_stmt 1 view .LVU408
 1681              		.loc 1 1245 18 is_stmt 0 view .LVU409
 1682 0004 044A     		ldr	r2, .L130
 1683 0006 D369     		ldr	r3, [r2, #28]
 1684 0008 1843     		orrs	r0, r3
 1685              	.LVL88:
 1686              		.loc 1 1245 18 view .LVU410
 1687 000a D061     		str	r0, [r2, #28]
 1688              	.L127:
1246:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1247:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1248:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1249:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
1250:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1251:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1689              		.loc 1 1251 1 view .LVU411
 1690              		@ sp needed
ARM GAS  /tmp/ccnQQ0zV.s 			page 53


 1691 000c 7047     		bx	lr
 1692              	.LVL89:
 1693              	.L128:
1249:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1694              		.loc 1 1249 5 is_stmt 1 view .LVU412
1249:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1695              		.loc 1 1249 18 is_stmt 0 view .LVU413
 1696 000e 024A     		ldr	r2, .L130
 1697 0010 D369     		ldr	r3, [r2, #28]
 1698 0012 8343     		bics	r3, r0
 1699 0014 D361     		str	r3, [r2, #28]
 1700              		.loc 1 1251 1 view .LVU414
 1701 0016 F9E7     		b	.L127
 1702              	.L131:
 1703              		.align	2
 1704              	.L130:
 1705 0018 00100240 		.word	1073876992
 1706              		.cfi_endproc
 1707              	.LFE62:
 1709              		.section	.text.RCC_AHBPeriphResetCmd,"ax",%progbits
 1710              		.align	1
 1711              		.global	RCC_AHBPeriphResetCmd
 1712              		.syntax unified
 1713              		.code	16
 1714              		.thumb_func
 1715              		.fpu softvfp
 1717              	RCC_AHBPeriphResetCmd:
 1718              	.LVL90:
 1719              	.LFB63:
1252:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1253:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1254:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1255:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1256:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1257:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOA:         GPIOA clock
1258:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOB:         GPIOB clock
1259:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOC:         GPIOC clock
1260:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOD:         GPIOD clock
1261:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_GPIOF:         GPIOF clock
1262:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_AHBPeriph_TS:            TS clock
1263:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1264:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1265:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1266:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1267:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1268:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1720              		.loc 1 1268 1 is_stmt 1 view -0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 0
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724              		@ link register save eliminated.
1269:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1270:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_AHB_RST_PERIPH(RCC_AHBPeriph));
 1725              		.loc 1 1270 3 view .LVU416
1271:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1726              		.loc 1 1271 3 view .LVU417
1272:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
ARM GAS  /tmp/ccnQQ0zV.s 			page 54


1273:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1727              		.loc 1 1273 3 view .LVU418
 1728              		.loc 1 1273 6 is_stmt 0 view .LVU419
 1729 0000 0029     		cmp	r1, #0
 1730 0002 04D0     		beq	.L133
1274:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1275:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
 1731              		.loc 1 1275 5 is_stmt 1 view .LVU420
 1732              		.loc 1 1275 18 is_stmt 0 view .LVU421
 1733 0004 044A     		ldr	r2, .L135
 1734 0006 936A     		ldr	r3, [r2, #40]
 1735 0008 1843     		orrs	r0, r3
 1736              	.LVL91:
 1737              		.loc 1 1275 18 view .LVU422
 1738 000a 9062     		str	r0, [r2, #40]
 1739              	.L132:
1276:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1277:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1278:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1279:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1280:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1281:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1740              		.loc 1 1281 1 view .LVU423
 1741              		@ sp needed
 1742 000c 7047     		bx	lr
 1743              	.LVL92:
 1744              	.L133:
1279:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1745              		.loc 1 1279 5 is_stmt 1 view .LVU424
1279:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1746              		.loc 1 1279 18 is_stmt 0 view .LVU425
 1747 000e 024A     		ldr	r2, .L135
 1748 0010 936A     		ldr	r3, [r2, #40]
 1749 0012 8343     		bics	r3, r0
 1750 0014 9362     		str	r3, [r2, #40]
 1751              		.loc 1 1281 1 view .LVU426
 1752 0016 F9E7     		b	.L132
 1753              	.L136:
 1754              		.align	2
 1755              	.L135:
 1756 0018 00100240 		.word	1073876992
 1757              		.cfi_endproc
 1758              	.LFE63:
 1760              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 1761              		.align	1
 1762              		.global	RCC_APB2PeriphResetCmd
 1763              		.syntax unified
 1764              		.code	16
 1765              		.thumb_func
 1766              		.fpu softvfp
 1768              	RCC_APB2PeriphResetCmd:
 1769              	.LVL93:
 1770              	.LFB64:
1282:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1283:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1284:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1285:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
ARM GAS  /tmp/ccnQQ0zV.s 			page 55


1286:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1287:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_SYSCFG:      SYSCFG clock
1288:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_ADC1:        ADC1 clock
1289:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM1:        TIM1 clock
1290:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_SPI1:        SPI1 clock
1291:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_USART1:      USART1 clock
1292:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM15:       TIM15 clock
1293:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM16:       TIM16 clock
1294:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_TIM17:       TIM17 clock
1295:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_APB2Periph_DBGMCU:      DBGMCU clock
1296:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1297:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1298:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1299:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1300:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1301:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1771              		.loc 1 1301 1 is_stmt 1 view -0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
1302:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1303:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 1776              		.loc 1 1303 3 view .LVU428
1304:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1777              		.loc 1 1304 3 view .LVU429
1305:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1306:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1778              		.loc 1 1306 3 view .LVU430
 1779              		.loc 1 1306 6 is_stmt 0 view .LVU431
 1780 0000 0029     		cmp	r1, #0
 1781 0002 04D0     		beq	.L138
1307:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1308:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 1782              		.loc 1 1308 5 is_stmt 1 view .LVU432
 1783              		.loc 1 1308 19 is_stmt 0 view .LVU433
 1784 0004 044A     		ldr	r2, .L140
 1785 0006 D368     		ldr	r3, [r2, #12]
 1786 0008 1843     		orrs	r0, r3
 1787              	.LVL94:
 1788              		.loc 1 1308 19 view .LVU434
 1789 000a D060     		str	r0, [r2, #12]
 1790              	.L137:
1309:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1310:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1311:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1312:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
1313:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1314:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1791              		.loc 1 1314 1 view .LVU435
 1792              		@ sp needed
 1793 000c 7047     		bx	lr
 1794              	.LVL95:
 1795              	.L138:
1312:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1796              		.loc 1 1312 5 is_stmt 1 view .LVU436
1312:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
ARM GAS  /tmp/ccnQQ0zV.s 			page 56


 1797              		.loc 1 1312 19 is_stmt 0 view .LVU437
 1798 000e 024A     		ldr	r2, .L140
 1799 0010 D368     		ldr	r3, [r2, #12]
 1800 0012 8343     		bics	r3, r0
 1801 0014 D360     		str	r3, [r2, #12]
 1802              		.loc 1 1314 1 view .LVU438
 1803 0016 F9E7     		b	.L137
 1804              	.L141:
 1805              		.align	2
 1806              	.L140:
 1807 0018 00100240 		.word	1073876992
 1808              		.cfi_endproc
 1809              	.LFE64:
 1811              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 1812              		.align	1
 1813              		.global	RCC_APB1PeriphResetCmd
 1814              		.syntax unified
 1815              		.code	16
 1816              		.thumb_func
 1817              		.fpu softvfp
 1819              	RCC_APB1PeriphResetCmd:
 1820              	.LVL96:
 1821              	.LFB65:
1315:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1316:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1317:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1318:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1319:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1320:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM2:      TIM2 clock
1321:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM3:      TIM3 clock
1322:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM6:      TIM6 clock
1323:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_TIM14:     TIM14 clock
1324:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_WWDG:      WWDG clock
1325:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_SPI2:      SPI2 clock
1326:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_USART2:    USART2 clock
1327:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_I2C1:      I2C1 clock
1328:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_I2C2:      I2C2 clock
1329:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_PWR:       PWR clock
1330:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_DAC:       DAC clock
1331:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *           @arg RCC_APB1Periph_CEC:       CEC clock
1332:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1333:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1334:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1335:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1336:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1337:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1822              		.loc 1 1337 1 is_stmt 1 view -0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
1338:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1339:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 1827              		.loc 1 1339 3 view .LVU440
1340:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1828              		.loc 1 1340 3 view .LVU441
1341:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
ARM GAS  /tmp/ccnQQ0zV.s 			page 57


1342:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1829              		.loc 1 1342 3 view .LVU442
 1830              		.loc 1 1342 6 is_stmt 0 view .LVU443
 1831 0000 0029     		cmp	r1, #0
 1832 0002 04D0     		beq	.L143
1343:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1344:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 1833              		.loc 1 1344 5 is_stmt 1 view .LVU444
 1834              		.loc 1 1344 19 is_stmt 0 view .LVU445
 1835 0004 044A     		ldr	r2, .L145
 1836 0006 1369     		ldr	r3, [r2, #16]
 1837 0008 1843     		orrs	r0, r3
 1838              	.LVL97:
 1839              		.loc 1 1344 19 view .LVU446
 1840 000a 1061     		str	r0, [r2, #16]
 1841              	.L142:
1345:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1346:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1347:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1348:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
1349:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1350:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1842              		.loc 1 1350 1 view .LVU447
 1843              		@ sp needed
 1844 000c 7047     		bx	lr
 1845              	.LVL98:
 1846              	.L143:
1348:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1847              		.loc 1 1348 5 is_stmt 1 view .LVU448
1348:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1848              		.loc 1 1348 19 is_stmt 0 view .LVU449
 1849 000e 024A     		ldr	r2, .L145
 1850 0010 1369     		ldr	r3, [r2, #16]
 1851 0012 8343     		bics	r3, r0
 1852 0014 1361     		str	r3, [r2, #16]
 1853              		.loc 1 1350 1 view .LVU450
 1854 0016 F9E7     		b	.L142
 1855              	.L146:
 1856              		.align	2
 1857              	.L145:
 1858 0018 00100240 		.word	1073876992
 1859              		.cfi_endproc
 1860              	.LFE65:
 1862              		.section	.text.RCC_ITConfig,"ax",%progbits
 1863              		.align	1
 1864              		.global	RCC_ITConfig
 1865              		.syntax unified
 1866              		.code	16
 1867              		.thumb_func
 1868              		.fpu softvfp
 1870              	RCC_ITConfig:
 1871              	.LVL99:
 1872              	.LFB66:
1351:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1352:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1353:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @}
1354:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
ARM GAS  /tmp/ccnQQ0zV.s 			page 58


1355:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1356:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
1357:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *  @brief   Interrupts and flags management functions 
1358:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  *
1359:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @verbatim
1360:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
1361:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****              ##### Interrupts and flags management functions #####
1362:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****  ===============================================================================
1363:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** @endverbatim
1364:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @{
1365:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1366:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1367:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1368:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
1369:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @note   The CSS interrupt doesn't have an enable bit; once the CSS is enabled
1370:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         and if the HSE clock fails, the CSS interrupt occurs and an NMI is
1371:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         automatically generated. The NMI will be executed indefinitely, and 
1372:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         since NMI has higher priority than any other IRQ (and main program)
1373:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         the application will be stacked in the NMI ISR unless the CSS interrupt
1374:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         pending bit is cleared.
1375:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
1376:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
1377:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_LSIRDY: LSI ready interrupt
1378:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_LSERDY: LSE ready interrupt
1379:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_HSIRDY: HSI ready interrupt
1380:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_HSERDY: HSE ready interrupt
1381:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_PLLRDY: PLL ready interrupt
1382:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *              @arg RCC_IT_HSI14RDY: HSI14 ready interrupt
1383:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
1384:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1385:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1386:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1387:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
1388:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1873              		.loc 1 1388 1 is_stmt 1 view -0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              		@ link register save eliminated.
1389:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1390:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 1878              		.loc 1 1390 3 view .LVU452
1391:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1879              		.loc 1 1391 3 view .LVU453
1392:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1393:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (NewState != DISABLE)
 1880              		.loc 1 1393 3 view .LVU454
 1881              		.loc 1 1393 6 is_stmt 0 view .LVU455
 1882 0000 0029     		cmp	r1, #0
 1883 0002 04D0     		beq	.L148
1394:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1395:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to enable the selected interrupts */
1396:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE1_ADDRESS |= RCC_IT;
 1884              		.loc 1 1396 5 is_stmt 1 view .LVU456
 1885              		.loc 1 1396 41 is_stmt 0 view .LVU457
 1886 0004 044A     		ldr	r2, .L150
 1887 0006 1378     		ldrb	r3, [r2]
ARM GAS  /tmp/ccnQQ0zV.s 			page 59


 1888 0008 1843     		orrs	r0, r3
 1889              	.LVL100:
 1890              		.loc 1 1396 41 view .LVU458
 1891 000a 1070     		strb	r0, [r2]
 1892              	.L147:
1397:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1398:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1399:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1400:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to disable the selected interrupts */
1401:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     *(__IO uint8_t *) CIR_BYTE1_ADDRESS &= (uint8_t)~RCC_IT;
1402:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1403:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1893              		.loc 1 1403 1 view .LVU459
 1894              		@ sp needed
 1895 000c 7047     		bx	lr
 1896              	.LVL101:
 1897              	.L148:
1401:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1898              		.loc 1 1401 5 is_stmt 1 view .LVU460
1401:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1899              		.loc 1 1401 41 is_stmt 0 view .LVU461
 1900 000e 024A     		ldr	r2, .L150
 1901 0010 1378     		ldrb	r3, [r2]
 1902 0012 8343     		bics	r3, r0
 1903 0014 1370     		strb	r3, [r2]
 1904              		.loc 1 1403 1 view .LVU462
 1905 0016 F9E7     		b	.L147
 1906              	.L151:
 1907              		.align	2
 1908              	.L150:
 1909 0018 09100240 		.word	1073877001
 1910              		.cfi_endproc
 1911              	.LFE66:
 1913              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 1914              		.align	1
 1915              		.global	RCC_GetFlagStatus
 1916              		.syntax unified
 1917              		.code	16
 1918              		.thumb_func
 1919              		.fpu softvfp
 1921              	RCC_GetFlagStatus:
 1922              	.LVL102:
 1923              	.LFB67:
1404:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1405:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1406:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1407:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1408:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
1409:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready  
1410:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1411:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_PLLRDY: PLL clock ready
1412:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1413:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1414:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_OBLRST: Option Byte Loader (OBL) reset 
1415:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_PINRST: Pin reset
1416:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_V18PWRRSTF:  V1.8 power domain reset  
1417:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_PORRST: POR/PDR reset
ARM GAS  /tmp/ccnQQ0zV.s 			page 60


1418:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_SFTRST: Software reset
1419:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1420:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1421:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_LPWRRST: Low Power reset
1422:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_FLAG_HSI14RDY: HSI14 oscillator clock ready  
1423:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1424:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1425:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1426:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 1924              		.loc 1 1426 1 is_stmt 1 view -0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              		@ link register save eliminated.
1427:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t tmp = 0;
 1929              		.loc 1 1427 3 view .LVU464
1428:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   uint32_t statusreg = 0;
 1930              		.loc 1 1428 3 view .LVU465
1429:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   FlagStatus bitstatus = RESET;
 1931              		.loc 1 1429 3 view .LVU466
1430:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1431:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1432:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
 1932              		.loc 1 1432 3 view .LVU467
1433:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1434:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Get the RCC register index */
1435:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = RCC_FLAG >> 5;
 1933              		.loc 1 1435 3 view .LVU468
 1934              		.loc 1 1435 18 is_stmt 0 view .LVU469
 1935 0000 4309     		lsrs	r3, r0, #5
 1936              	.LVL103:
1436:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1437:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if (tmp == 0)               /* The flag to check is in CR register */
 1937              		.loc 1 1437 3 is_stmt 1 view .LVU470
 1938              		.loc 1 1437 6 is_stmt 0 view .LVU471
 1939 0002 08D1     		bne	.L153
1438:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1439:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     statusreg = RCC->CR;
 1940              		.loc 1 1439 5 is_stmt 1 view .LVU472
 1941              		.loc 1 1439 15 is_stmt 0 view .LVU473
 1942 0004 0B4B     		ldr	r3, .L161
 1943              	.LVL104:
 1944              		.loc 1 1439 15 view .LVU474
 1945 0006 1A68     		ldr	r2, [r3]
 1946              	.LVL105:
 1947              	.L154:
1440:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1441:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else if (tmp == 1)          /* The flag to check is in BDCR register */
1442:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     statusreg = RCC->BDCR;
1444:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1445:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else if (tmp == 2)          /* The flag to check is in CSR register */
1446:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     statusreg = RCC->CSR;
1448:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1449:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else                        /* The flag to check is in CR2 register */
1450:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
ARM GAS  /tmp/ccnQQ0zV.s 			page 61


1451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     statusreg = RCC->CR2;
1452:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }    
1453:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1454:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Get the flag position */
1455:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 1948              		.loc 1 1455 3 is_stmt 1 view .LVU475
 1949              		.loc 1 1455 7 is_stmt 0 view .LVU476
 1950 0008 1F23     		movs	r3, #31
 1951 000a 1840     		ands	r0, r3
 1952              	.LVL106:
1456:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1457:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1953              		.loc 1 1457 3 is_stmt 1 view .LVU477
 1954              		.loc 1 1457 42 is_stmt 0 view .LVU478
 1955 000c C240     		lsrs	r2, r2, r0
 1956              	.LVL107:
 1957              		.loc 1 1457 6 view .LVU479
 1958 000e D307     		lsls	r3, r2, #31
 1959 0010 0ED5     		bpl	.L158
1458:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1459:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     bitstatus = SET;
 1960              		.loc 1 1459 15 view .LVU480
 1961 0012 0120     		movs	r0, #1
 1962              	.LVL108:
 1963              	.L157:
1460:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1461:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1462:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1463:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     bitstatus = RESET;
1464:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1465:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Return the flag status */
1466:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   return bitstatus;
 1964              		.loc 1 1466 3 is_stmt 1 view .LVU481
1467:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 1965              		.loc 1 1467 1 is_stmt 0 view .LVU482
 1966              		@ sp needed
 1967 0014 7047     		bx	lr
 1968              	.LVL109:
 1969              	.L153:
1441:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1970              		.loc 1 1441 8 is_stmt 1 view .LVU483
1441:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1971              		.loc 1 1441 11 is_stmt 0 view .LVU484
 1972 0016 012B     		cmp	r3, #1
 1973 0018 04D0     		beq	.L159
1445:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1974              		.loc 1 1445 8 is_stmt 1 view .LVU485
1445:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 1975              		.loc 1 1445 11 is_stmt 0 view .LVU486
 1976 001a 022B     		cmp	r3, #2
 1977 001c 05D0     		beq	.L160
1451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }    
 1978              		.loc 1 1451 5 is_stmt 1 view .LVU487
1451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }    
 1979              		.loc 1 1451 15 is_stmt 0 view .LVU488
 1980 001e 054B     		ldr	r3, .L161
 1981              	.LVL110:
ARM GAS  /tmp/ccnQQ0zV.s 			page 62


1451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }    
 1982              		.loc 1 1451 15 view .LVU489
 1983 0020 5A6B     		ldr	r2, [r3, #52]
 1984              	.LVL111:
1451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }    
 1985              		.loc 1 1451 15 view .LVU490
 1986 0022 F1E7     		b	.L154
 1987              	.LVL112:
 1988              	.L159:
1443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1989              		.loc 1 1443 5 is_stmt 1 view .LVU491
1443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1990              		.loc 1 1443 15 is_stmt 0 view .LVU492
 1991 0024 034B     		ldr	r3, .L161
 1992              	.LVL113:
1443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1993              		.loc 1 1443 15 view .LVU493
 1994 0026 1A6A     		ldr	r2, [r3, #32]
 1995              	.LVL114:
1443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 1996              		.loc 1 1443 15 view .LVU494
 1997 0028 EEE7     		b	.L154
 1998              	.LVL115:
 1999              	.L160:
1447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2000              		.loc 1 1447 5 is_stmt 1 view .LVU495
1447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2001              		.loc 1 1447 15 is_stmt 0 view .LVU496
 2002 002a 024B     		ldr	r3, .L161
 2003              	.LVL116:
1447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2004              		.loc 1 1447 15 view .LVU497
 2005 002c 5A6A     		ldr	r2, [r3, #36]
 2006              	.LVL117:
1447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2007              		.loc 1 1447 15 view .LVU498
 2008 002e EBE7     		b	.L154
 2009              	.LVL118:
 2010              	.L158:
1463:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2011              		.loc 1 1463 15 view .LVU499
 2012 0030 0020     		movs	r0, #0
 2013              	.LVL119:
1463:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2014              		.loc 1 1463 15 view .LVU500
 2015 0032 EFE7     		b	.L157
 2016              	.L162:
 2017              		.align	2
 2018              	.L161:
 2019 0034 00100240 		.word	1073876992
 2020              		.cfi_endproc
 2021              	.LFE67:
 2023              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 2024              		.align	1
 2025              		.global	RCC_WaitForHSEStartUp
 2026              		.syntax unified
 2027              		.code	16
ARM GAS  /tmp/ccnQQ0zV.s 			page 63


 2028              		.thumb_func
 2029              		.fpu softvfp
 2031              	RCC_WaitForHSEStartUp:
 2032              	.LFB34:
 223:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 2033              		.loc 1 223 1 is_stmt 1 view -0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 8
 2036              		@ frame_needed = 0, uses_anonymous_args = 0
 2037 0000 00B5     		push	{lr}
 2038              	.LCFI2:
 2039              		.cfi_def_cfa_offset 4
 2040              		.cfi_offset 14, -4
 2041 0002 83B0     		sub	sp, sp, #12
 2042              	.LCFI3:
 2043              		.cfi_def_cfa_offset 16
 224:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ErrorStatus status = ERROR;
 2044              		.loc 1 224 3 view .LVU502
 224:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ErrorStatus status = ERROR;
 2045              		.loc 1 224 17 is_stmt 0 view .LVU503
 2046 0004 0023     		movs	r3, #0
 2047 0006 0193     		str	r3, [sp, #4]
 225:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   FlagStatus HSEStatus = RESET;
 2048              		.loc 1 225 3 is_stmt 1 view .LVU504
 2049              	.LVL120:
 226:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 2050              		.loc 1 226 3 view .LVU505
 2051              	.L165:
 229:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 2052              		.loc 1 229 3 discriminator 2 view .LVU506
 231:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     StartUpCounter++;  
 2053              		.loc 1 231 5 discriminator 2 view .LVU507
 231:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     StartUpCounter++;  
 2054              		.loc 1 231 17 is_stmt 0 discriminator 2 view .LVU508
 2055 0008 1120     		movs	r0, #17
 2056 000a FFF7FEFF 		bl	RCC_GetFlagStatus
 2057              	.LVL121:
 232:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 2058              		.loc 1 232 5 is_stmt 1 discriminator 2 view .LVU509
 232:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 2059              		.loc 1 232 19 is_stmt 0 discriminator 2 view .LVU510
 2060 000e 019B     		ldr	r3, [sp, #4]
 2061 0010 0133     		adds	r3, r3, #1
 2062 0012 0193     		str	r3, [sp, #4]
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 2063              		.loc 1 233 10 is_stmt 1 discriminator 2 view .LVU511
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 2064              		.loc 1 233 27 is_stmt 0 discriminator 2 view .LVU512
 2065 0014 019A     		ldr	r2, [sp, #4]
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 2066              		.loc 1 233 3 discriminator 2 view .LVU513
 2067 0016 A023     		movs	r3, #160
 2068 0018 DB00     		lsls	r3, r3, #3
 2069 001a 9A42     		cmp	r2, r3
 2070 001c 01D0     		beq	.L164
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
 2071              		.loc 1 233 51 discriminator 1 view .LVU514
ARM GAS  /tmp/ccnQQ0zV.s 			page 64


 2072 001e 0028     		cmp	r0, #0
 2073 0020 F2D0     		beq	.L165
 2074              	.L164:
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 2075              		.loc 1 235 3 is_stmt 1 view .LVU515
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 2076              		.loc 1 235 7 is_stmt 0 view .LVU516
 2077 0022 1120     		movs	r0, #17
 2078              	.LVL122:
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 2079              		.loc 1 235 7 view .LVU517
 2080 0024 FFF7FEFF 		bl	RCC_GetFlagStatus
 2081              	.LVL123:
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
 2082              		.loc 1 235 6 view .LVU518
 2083 0028 0028     		cmp	r0, #0
 2084 002a 00D0     		beq	.L166
 237:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2085              		.loc 1 237 12 view .LVU519
 2086 002c 0120     		movs	r0, #1
 2087              	.L166:
 2088              	.LVL124:
 243:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 2089              		.loc 1 243 3 is_stmt 1 view .LVU520
 244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
 2090              		.loc 1 244 1 is_stmt 0 view .LVU521
 2091 002e 03B0     		add	sp, sp, #12
 2092              		@ sp needed
 2093 0030 00BD     		pop	{pc}
 2094              		.cfi_endproc
 2095              	.LFE34:
 2097              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2098              		.align	1
 2099              		.global	RCC_ClearFlag
 2100              		.syntax unified
 2101              		.code	16
 2102              		.thumb_func
 2103              		.fpu softvfp
 2105              	RCC_ClearFlag:
 2106              	.LFB68:
1468:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1469:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1470:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Clears the RCC reset flags.
1471:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         The reset flags are: RCC_FLAG_OBLRST, RCC_FLAG_PINRST, RCC_FLAG_V18PWRRSTF,
1472:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         RCC_FLAG_PORRST, RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST,
1473:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         RCC_FLAG_LPWRRST.
1474:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  None
1475:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1476:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1477:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_ClearFlag(void)
1478:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 2107              		.loc 1 1478 1 is_stmt 1 view -0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 0
 2110              		@ frame_needed = 0, uses_anonymous_args = 0
 2111              		@ link register save eliminated.
1479:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Set RMVF bit to clear the reset flags */
ARM GAS  /tmp/ccnQQ0zV.s 			page 65


1480:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2112              		.loc 1 1480 3 view .LVU523
 2113              		.loc 1 1480 12 is_stmt 0 view .LVU524
 2114 0000 034A     		ldr	r2, .L168
 2115 0002 516A     		ldr	r1, [r2, #36]
 2116 0004 8023     		movs	r3, #128
 2117 0006 5B04     		lsls	r3, r3, #17
 2118 0008 0B43     		orrs	r3, r1
 2119 000a 5362     		str	r3, [r2, #36]
1481:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 2120              		.loc 1 1481 1 view .LVU525
 2121              		@ sp needed
 2122 000c 7047     		bx	lr
 2123              	.L169:
 2124 000e C046     		.align	2
 2125              	.L168:
 2126 0010 00100240 		.word	1073876992
 2127              		.cfi_endproc
 2128              	.LFE68:
 2130              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2131              		.align	1
 2132              		.global	RCC_GetITStatus
 2133              		.syntax unified
 2134              		.code	16
 2135              		.thumb_func
 2136              		.fpu softvfp
 2138              	RCC_GetITStatus:
 2139              	.LVL125:
 2140              	.LFB69:
1482:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1483:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1484:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1485:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1486:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be one of the following values:
1487:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_LSIRDY: LSI ready interrupt
1488:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_LSERDY: LSE ready interrupt
1489:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSIRDY: HSI ready interrupt
1490:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSERDY: HSE ready interrupt
1491:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_PLLRDY: PLL ready interrupt
1492:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSI14RDY: HSI14 ready interrupt 
1493:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_CSS: Clock Security System interrupt
1494:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1495:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1496:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1497:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 2141              		.loc 1 1497 1 is_stmt 1 view -0
 2142              		.cfi_startproc
 2143              		@ args = 0, pretend = 0, frame = 0
 2144              		@ frame_needed = 0, uses_anonymous_args = 0
 2145              		@ link register save eliminated.
1498:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   ITStatus bitstatus = RESET;
 2146              		.loc 1 1498 3 view .LVU527
1499:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1500:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1501:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
 2147              		.loc 1 1501 3 view .LVU528
1502:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
ARM GAS  /tmp/ccnQQ0zV.s 			page 66


1503:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the status of the specified RCC interrupt */
1504:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2148              		.loc 1 1504 3 view .LVU529
 2149              		.loc 1 1504 11 is_stmt 0 view .LVU530
 2150 0000 034B     		ldr	r3, .L173
 2151 0002 9B68     		ldr	r3, [r3, #8]
 2152              		.loc 1 1504 6 view .LVU531
 2153 0004 0342     		tst	r3, r0
 2154 0006 01D0     		beq	.L172
1505:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1506:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     bitstatus = SET;
 2155              		.loc 1 1506 15 view .LVU532
 2156 0008 0120     		movs	r0, #1
 2157              	.LVL126:
 2158              	.L171:
1507:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1508:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   else
1509:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   {
1510:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****     bitstatus = RESET;
1511:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
1512:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Return the RCC_IT status */
1513:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   return  bitstatus;
 2159              		.loc 1 1513 3 is_stmt 1 view .LVU533
1514:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 2160              		.loc 1 1514 1 is_stmt 0 view .LVU534
 2161              		@ sp needed
 2162 000a 7047     		bx	lr
 2163              	.LVL127:
 2164              	.L172:
1510:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2165              		.loc 1 1510 15 view .LVU535
 2166 000c 0020     		movs	r0, #0
 2167              	.LVL128:
1510:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   }
 2168              		.loc 1 1510 15 view .LVU536
 2169 000e FCE7     		b	.L171
 2170              	.L174:
 2171              		.align	2
 2172              	.L173:
 2173 0010 00100240 		.word	1073876992
 2174              		.cfi_endproc
 2175              	.LFE69:
 2177              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2178              		.align	1
 2179              		.global	RCC_ClearITPendingBit
 2180              		.syntax unified
 2181              		.code	16
 2182              		.thumb_func
 2183              		.fpu softvfp
 2185              	RCC_ClearITPendingBit:
 2186              	.LVL129:
 2187              	.LFB70:
1515:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** 
1516:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** /**
1517:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1518:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1519:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *         This parameter can be any combination of the following values:
ARM GAS  /tmp/ccnQQ0zV.s 			page 67


1520:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_LSIRDY: LSI ready interrupt
1521:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_LSERDY: LSE ready interrupt
1522:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSIRDY: HSI ready interrupt
1523:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSERDY: HSE ready interrupt
1524:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_PLLRDY: PLL ready interrupt
1525:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_HSI14RDY: HSI14 ready interrupt  
1526:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *             @arg RCC_IT_CSS: Clock Security System interrupt
1527:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   * @retval None
1528:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   */
1529:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1530:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** {
 2188              		.loc 1 1530 1 is_stmt 1 view -0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              		@ link register save eliminated.
1531:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Check the parameters */
1532:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
 2193              		.loc 1 1532 3 view .LVU538
1533:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   
1534:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1535:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****      pending bits */
1536:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c ****   *(__IO uint8_t *) CIR_BYTE2_ADDRESS = RCC_IT;
 2194              		.loc 1 1536 3 view .LVU539
 2195              		.loc 1 1536 39 is_stmt 0 view .LVU540
 2196 0000 014B     		ldr	r3, .L176
 2197 0002 1870     		strb	r0, [r3]
1537:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_rcc.c **** }
 2198              		.loc 1 1537 1 view .LVU541
 2199              		@ sp needed
 2200 0004 7047     		bx	lr
 2201              	.L177:
 2202 0006 C046     		.align	2
 2203              	.L176:
 2204 0008 0A100240 		.word	1073877002
 2205              		.cfi_endproc
 2206              	.LFE70:
 2208              		.section	.data.APBAHBPrescTable,"aw"
 2209              		.align	2
 2210              		.set	.LANCHOR0,. + 0
 2213              	APBAHBPrescTable:
 2214 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 2214      01020304 
 2214      01020304 
 2214      06
 2215 000d 070809   		.ascii	"\007\010\011"
 2216              		.text
 2217              	.Letext0:
 2218              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2219              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2220              		.file 4 "./Libraries/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
 2221              		.file 5 "./Libraries/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_rcc.h"
 2222              		.file 6 "./Libraries/CMSIS/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  /tmp/ccnQQ0zV.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_rcc.c
     /tmp/ccnQQ0zV.s:16     .text.RCC_DeInit:0000000000000000 $t
     /tmp/ccnQQ0zV.s:24     .text.RCC_DeInit:0000000000000000 RCC_DeInit
     /tmp/ccnQQ0zV.s:90     .text.RCC_DeInit:0000000000000048 $d
     /tmp/ccnQQ0zV.s:100    .text.RCC_HSEConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:107    .text.RCC_HSEConfig:0000000000000000 RCC_HSEConfig
     /tmp/ccnQQ0zV.s:130    .text.RCC_HSEConfig:000000000000000c $d
     /tmp/ccnQQ0zV.s:135    .text.RCC_AdjustHSICalibrationValue:0000000000000000 $t
     /tmp/ccnQQ0zV.s:142    .text.RCC_AdjustHSICalibrationValue:0000000000000000 RCC_AdjustHSICalibrationValue
     /tmp/ccnQQ0zV.s:178    .text.RCC_AdjustHSICalibrationValue:0000000000000010 $d
     /tmp/ccnQQ0zV.s:183    .text.RCC_HSICmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:190    .text.RCC_HSICmd:0000000000000000 RCC_HSICmd
     /tmp/ccnQQ0zV.s:227    .text.RCC_HSICmd:000000000000001c $d
     /tmp/ccnQQ0zV.s:232    .text.RCC_AdjustHSI14CalibrationValue:0000000000000000 $t
     /tmp/ccnQQ0zV.s:239    .text.RCC_AdjustHSI14CalibrationValue:0000000000000000 RCC_AdjustHSI14CalibrationValue
     /tmp/ccnQQ0zV.s:275    .text.RCC_AdjustHSI14CalibrationValue:0000000000000010 $d
     /tmp/ccnQQ0zV.s:280    .text.RCC_HSI14Cmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:287    .text.RCC_HSI14Cmd:0000000000000000 RCC_HSI14Cmd
     /tmp/ccnQQ0zV.s:324    .text.RCC_HSI14Cmd:000000000000001c $d
     /tmp/ccnQQ0zV.s:329    .text.RCC_HSI14ADCRequestCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:336    .text.RCC_HSI14ADCRequestCmd:0000000000000000 RCC_HSI14ADCRequestCmd
     /tmp/ccnQQ0zV.s:373    .text.RCC_HSI14ADCRequestCmd:000000000000001c $d
     /tmp/ccnQQ0zV.s:378    .text.RCC_LSEConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:385    .text.RCC_LSEConfig:0000000000000000 RCC_LSEConfig
     /tmp/ccnQQ0zV.s:418    .text.RCC_LSEConfig:000000000000001c $d
     /tmp/ccnQQ0zV.s:423    .text.RCC_LSEDriveConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:430    .text.RCC_LSEDriveConfig:0000000000000000 RCC_LSEDriveConfig
     /tmp/ccnQQ0zV.s:457    .text.RCC_LSEDriveConfig:0000000000000014 $d
     /tmp/ccnQQ0zV.s:462    .text.RCC_LSICmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:469    .text.RCC_LSICmd:0000000000000000 RCC_LSICmd
     /tmp/ccnQQ0zV.s:506    .text.RCC_LSICmd:000000000000001c $d
     /tmp/ccnQQ0zV.s:511    .text.RCC_PLLConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:518    .text.RCC_PLLConfig:0000000000000000 RCC_PLLConfig
     /tmp/ccnQQ0zV.s:555    .text.RCC_PLLConfig:0000000000000018 $d
     /tmp/ccnQQ0zV.s:561    .text.RCC_PLLCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:568    .text.RCC_PLLCmd:0000000000000000 RCC_PLLCmd
     /tmp/ccnQQ0zV.s:606    .text.RCC_PLLCmd:0000000000000020 $d
     /tmp/ccnQQ0zV.s:612    .text.RCC_PREDIV1Config:0000000000000000 $t
     /tmp/ccnQQ0zV.s:619    .text.RCC_PREDIV1Config:0000000000000000 RCC_PREDIV1Config
     /tmp/ccnQQ0zV.s:652    .text.RCC_PREDIV1Config:0000000000000010 $d
     /tmp/ccnQQ0zV.s:657    .text.RCC_ClockSecuritySystemCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:664    .text.RCC_ClockSecuritySystemCmd:0000000000000000 RCC_ClockSecuritySystemCmd
     /tmp/ccnQQ0zV.s:702    .text.RCC_ClockSecuritySystemCmd:0000000000000020 $d
     /tmp/ccnQQ0zV.s:708    .text.RCC_MCOConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:715    .text.RCC_MCOConfig:0000000000000000 RCC_MCOConfig
     /tmp/ccnQQ0zV.s:734    .text.RCC_MCOConfig:0000000000000008 $d
     /tmp/ccnQQ0zV.s:739    .text.RCC_SYSCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:746    .text.RCC_SYSCLKConfig:0000000000000000 RCC_SYSCLKConfig
     /tmp/ccnQQ0zV.s:779    .text.RCC_SYSCLKConfig:0000000000000010 $d
     /tmp/ccnQQ0zV.s:784    .text.RCC_GetSYSCLKSource:0000000000000000 $t
     /tmp/ccnQQ0zV.s:791    .text.RCC_GetSYSCLKSource:0000000000000000 RCC_GetSYSCLKSource
     /tmp/ccnQQ0zV.s:811    .text.RCC_GetSYSCLKSource:000000000000000c $d
     /tmp/ccnQQ0zV.s:816    .text.RCC_HCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:823    .text.RCC_HCLKConfig:0000000000000000 RCC_HCLKConfig
     /tmp/ccnQQ0zV.s:856    .text.RCC_HCLKConfig:0000000000000010 $d
     /tmp/ccnQQ0zV.s:861    .text.RCC_PCLKConfig:0000000000000000 $t
ARM GAS  /tmp/ccnQQ0zV.s 			page 69


     /tmp/ccnQQ0zV.s:868    .text.RCC_PCLKConfig:0000000000000000 RCC_PCLKConfig
     /tmp/ccnQQ0zV.s:901    .text.RCC_PCLKConfig:0000000000000010 $d
     /tmp/ccnQQ0zV.s:907    .text.RCC_ADCCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:914    .text.RCC_ADCCLKConfig:0000000000000000 RCC_ADCCLKConfig
     /tmp/ccnQQ0zV.s:960    .text.RCC_ADCCLKConfig:0000000000000028 $d
     /tmp/ccnQQ0zV.s:967    .text.RCC_CECCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:974    .text.RCC_CECCLKConfig:0000000000000000 RCC_CECCLKConfig
     /tmp/ccnQQ0zV.s:1001   .text.RCC_CECCLKConfig:0000000000000014 $d
     /tmp/ccnQQ0zV.s:1006   .text.RCC_I2CCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1013   .text.RCC_I2CCLKConfig:0000000000000000 RCC_I2CCLKConfig
     /tmp/ccnQQ0zV.s:1040   .text.RCC_I2CCLKConfig:0000000000000014 $d
     /tmp/ccnQQ0zV.s:1045   .text.RCC_USARTCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1052   .text.RCC_USARTCLKConfig:0000000000000000 RCC_USARTCLKConfig
     /tmp/ccnQQ0zV.s:1079   .text.RCC_USARTCLKConfig:0000000000000014 $d
     /tmp/ccnQQ0zV.s:1085   .text.RCC_GetClocksFreq:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1092   .text.RCC_GetClocksFreq:0000000000000000 RCC_GetClocksFreq
     /tmp/ccnQQ0zV.s:1413   .text.RCC_GetClocksFreq:0000000000000110 $d
     /tmp/ccnQQ0zV.s:1422   .text.RCC_RTCCLKConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1429   .text.RCC_RTCCLKConfig:0000000000000000 RCC_RTCCLKConfig
     /tmp/ccnQQ0zV.s:1450   .text.RCC_RTCCLKConfig:000000000000000c $d
     /tmp/ccnQQ0zV.s:1455   .text.RCC_RTCCLKCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1462   .text.RCC_RTCCLKCmd:0000000000000000 RCC_RTCCLKCmd
     /tmp/ccnQQ0zV.s:1500   .text.RCC_RTCCLKCmd:0000000000000020 $d
     /tmp/ccnQQ0zV.s:1506   .text.RCC_BackupResetCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1513   .text.RCC_BackupResetCmd:0000000000000000 RCC_BackupResetCmd
     /tmp/ccnQQ0zV.s:1551   .text.RCC_BackupResetCmd:0000000000000020 $d
     /tmp/ccnQQ0zV.s:1557   .text.RCC_AHBPeriphClockCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1564   .text.RCC_AHBPeriphClockCmd:0000000000000000 RCC_AHBPeriphClockCmd
     /tmp/ccnQQ0zV.s:1603   .text.RCC_AHBPeriphClockCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1608   .text.RCC_APB2PeriphClockCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1615   .text.RCC_APB2PeriphClockCmd:0000000000000000 RCC_APB2PeriphClockCmd
     /tmp/ccnQQ0zV.s:1654   .text.RCC_APB2PeriphClockCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1659   .text.RCC_APB1PeriphClockCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1666   .text.RCC_APB1PeriphClockCmd:0000000000000000 RCC_APB1PeriphClockCmd
     /tmp/ccnQQ0zV.s:1705   .text.RCC_APB1PeriphClockCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1710   .text.RCC_AHBPeriphResetCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1717   .text.RCC_AHBPeriphResetCmd:0000000000000000 RCC_AHBPeriphResetCmd
     /tmp/ccnQQ0zV.s:1756   .text.RCC_AHBPeriphResetCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1761   .text.RCC_APB2PeriphResetCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1768   .text.RCC_APB2PeriphResetCmd:0000000000000000 RCC_APB2PeriphResetCmd
     /tmp/ccnQQ0zV.s:1807   .text.RCC_APB2PeriphResetCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1812   .text.RCC_APB1PeriphResetCmd:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1819   .text.RCC_APB1PeriphResetCmd:0000000000000000 RCC_APB1PeriphResetCmd
     /tmp/ccnQQ0zV.s:1858   .text.RCC_APB1PeriphResetCmd:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1863   .text.RCC_ITConfig:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1870   .text.RCC_ITConfig:0000000000000000 RCC_ITConfig
     /tmp/ccnQQ0zV.s:1909   .text.RCC_ITConfig:0000000000000018 $d
     /tmp/ccnQQ0zV.s:1914   .text.RCC_GetFlagStatus:0000000000000000 $t
     /tmp/ccnQQ0zV.s:1921   .text.RCC_GetFlagStatus:0000000000000000 RCC_GetFlagStatus
     /tmp/ccnQQ0zV.s:2019   .text.RCC_GetFlagStatus:0000000000000034 $d
     /tmp/ccnQQ0zV.s:2024   .text.RCC_WaitForHSEStartUp:0000000000000000 $t
     /tmp/ccnQQ0zV.s:2031   .text.RCC_WaitForHSEStartUp:0000000000000000 RCC_WaitForHSEStartUp
     /tmp/ccnQQ0zV.s:2098   .text.RCC_ClearFlag:0000000000000000 $t
     /tmp/ccnQQ0zV.s:2105   .text.RCC_ClearFlag:0000000000000000 RCC_ClearFlag
     /tmp/ccnQQ0zV.s:2126   .text.RCC_ClearFlag:0000000000000010 $d
     /tmp/ccnQQ0zV.s:2131   .text.RCC_GetITStatus:0000000000000000 $t
     /tmp/ccnQQ0zV.s:2138   .text.RCC_GetITStatus:0000000000000000 RCC_GetITStatus
ARM GAS  /tmp/ccnQQ0zV.s 			page 70


     /tmp/ccnQQ0zV.s:2173   .text.RCC_GetITStatus:0000000000000010 $d
     /tmp/ccnQQ0zV.s:2178   .text.RCC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccnQQ0zV.s:2185   .text.RCC_ClearITPendingBit:0000000000000000 RCC_ClearITPendingBit
     /tmp/ccnQQ0zV.s:2204   .text.RCC_ClearITPendingBit:0000000000000008 $d
     /tmp/ccnQQ0zV.s:2209   .data.APBAHBPrescTable:0000000000000000 $d
     /tmp/ccnQQ0zV.s:2213   .data.APBAHBPrescTable:0000000000000000 APBAHBPrescTable

UNDEFINED SYMBOLS
__aeabi_uidiv
