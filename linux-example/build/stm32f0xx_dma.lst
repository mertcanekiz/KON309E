ARM GAS  /tmp/ccrBOfyB.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_dma.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.DMA_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	DMA_DeInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	DMA_DeInit:
  25              	.LVL0:
  26              	.LFB40:
  27              		.file 1 "Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c"
   1:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
   2:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @file    stm32f0xx_dma.c
   4:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @version V1.0.0
   6:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @date    23-March-2012
   7:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *          functionalities of the Direct Memory Access controller (DMA):
   9:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *           + Initialization and Configuration
  10:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *           + Data Counter
  11:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *           + Interrupts and flags management
  12:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  13:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *  @verbatim
  14:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ==============================================================================
  15:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****                       ##### How to use this driver #####
  16:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ==============================================================================
  17:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..]
  18:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Enable The DMA controller clock using 
  19:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE) function for DMA1.
  20:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Enable and configure the peripheral to be connected to the DMA channel
  21:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****        (except for internal SRAM / FLASH memories: no initialization is necessary).
  22:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) For a given Channel, program the Source and Destination addresses, 
  23:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         the transfer Direction, the Buffer Size, the Peripheral and Memory 
  24:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         Incrementation mode and Data Size, the Circular or Normal mode, 
  25:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         the channel transfer Priority and the Memory-to-Memory transfer 
  26:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         mode (if needed) using the DMA_Init() function.
  27:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Enable the NVIC and the corresponding interrupt(s) using the function 
  28:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         DMA_ITConfig() if you need to use DMA interrupts.
  29:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Enable the DMA channel using the DMA_Cmd() function.
  30:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Activate the needed channel Request using PPP_DMACmd() function for 
  31:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         any PPP peripheral except internal SRAM and FLASH (ie. SPI, USART ...) 
ARM GAS  /tmp/ccrBOfyB.s 			page 2


  32:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         The function allowing this operation is provided in each PPP peripheral 
  33:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         driver (ie. SPI_DMACmd for SPI peripheral).
  34:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) Optionally, you can configure the number of data to be transferred
  35:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         when the channel is disabled (ie. after each Transfer Complete event
  36:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         or when a Transfer Error occurs) using the function DMA_SetCurrDataCounter().
  37:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         And you can get the number of remaining data to be transferred using 
  38:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         the function DMA_GetCurrDataCounter() at run time (when the DMA channel is
  39:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         enabled and running).
  40:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (#) To control DMA events you can use one of the following two methods:
  41:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (##) Check on DMA channel flags using the function DMA_GetFlagStatus().
  42:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (##) Use DMA interrupts through the function DMA_ITConfig() at initialization
  43:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              phase and DMA_GetITStatus() function into interrupt routines in
  44:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              communication phase.
  45:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              After checking on a flag you should clear it using DMA_ClearFlag()
  46:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              function. And after checking on an interrupt event you should 
  47:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              clear it using DMA_ClearITPendingBit() function.
  48:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     @endverbatim
  49:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  50:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ******************************************************************************
  51:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @attention
  52:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  53:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  54:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  55:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  56:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * You may not use this file except in compliance with the License.
  57:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * You may obtain a copy of the License at:
  58:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  59:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  60:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  61:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * Unless required by applicable law or agreed to in writing, software 
  62:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  63:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  64:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * See the License for the specific language governing permissions and
  65:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * limitations under the License.
  66:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
  67:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ******************************************************************************
  68:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
  69:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  70:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Includes ------------------------------------------------------------------*/
  71:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #include "stm32f0xx_dma.h"
  72:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  73:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  74:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
  75:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
  76:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  77:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @defgroup DMA 
  78:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief DMA driver modules
  79:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
  80:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
  81:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  82:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define CCR_CLEAR_MASK   ((uint32_t)0xFFFF800F) /* DMA Channel config registers Masks */
  85:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  86:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* DMA1 Channelx interrupt pending bit masks */
  87:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define DMA1_CHANNEL1_IT_MASK    ((uint32_t)(DMA_ISR_GIF1 | DMA_ISR_TCIF1 | DMA_ISR_HTIF1 | DMA_ISR
  88:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define DMA1_CHANNEL2_IT_MASK    ((uint32_t)(DMA_ISR_GIF2 | DMA_ISR_TCIF2 | DMA_ISR_HTIF2 | DMA_ISR
ARM GAS  /tmp/ccrBOfyB.s 			page 3


  89:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define DMA1_CHANNEL3_IT_MASK    ((uint32_t)(DMA_ISR_GIF3 | DMA_ISR_TCIF3 | DMA_ISR_HTIF3 | DMA_ISR
  90:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define DMA1_CHANNEL4_IT_MASK    ((uint32_t)(DMA_ISR_GIF4 | DMA_ISR_TCIF4 | DMA_ISR_HTIF4 | DMA_ISR
  91:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** #define DMA1_CHANNEL5_IT_MASK    ((uint32_t)(DMA_ISR_GIF5 | DMA_ISR_TCIF5 | DMA_ISR_HTIF5 | DMA_ISR
  92:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  93:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private macro -------------------------------------------------------------*/
  94:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private variables ---------------------------------------------------------*/
  95:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private function prototypes -----------------------------------------------*/
  96:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /* Private functions ---------------------------------------------------------*/
  97:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
  98:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @defgroup DMA_Private_Functions 
  99:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
 100:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 101:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 102:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @defgroup DMA_Group1 Initialization and Configuration functions
 103:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *  @brief   Initialization and Configuration functions
 104:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *
 105:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @verbatim   
 106:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 107:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             ##### Initialization and Configuration functions #####
 108:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 109:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] This subsection provides functions allowing to initialize the DMA channel 
 110:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          source and destination addresses, incrementation and data sizes, transfer 
 111:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          direction, buffer size, circular/normal mode selection, memory-to-memory 
 112:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          mode selection and channel priority value.
 113:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] The DMA_Init() function follows the DMA configuration procedures as described 
 114:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          in reference manual (RM0091).
 115:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @endverbatim
 116:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
 117:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 118:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     
 119:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 120:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Deinitializes the DMAy Channelx registers to their default reset
 121:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         values.
 122:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and 
 123:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         x can be 1 to 5 for DMA1 to select the DMA Channel.
 124:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 125:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 126:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_DeInit(DMA_Channel_TypeDef* DMAy_Channelx)
 127:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
  28              		.loc 1 127 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 128:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 129:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
  33              		.loc 1 129 3 view .LVU1
 130:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 131:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Disable the selected DMAy Channelx */
 132:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR_EN);
  34              		.loc 1 132 3 view .LVU2
  35              		.loc 1 132 22 is_stmt 0 view .LVU3
  36 0000 0368     		ldr	r3, [r0]
  37 0002 1C4A     		ldr	r2, .L11
  38 0004 1340     		ands	r3, r2
  39 0006 0360     		str	r3, [r0]
 133:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
ARM GAS  /tmp/ccrBOfyB.s 			page 4


 134:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Reset DMAy Channelx control register */
 135:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CCR  = 0;
  40              		.loc 1 135 3 is_stmt 1 view .LVU4
  41              		.loc 1 135 23 is_stmt 0 view .LVU5
  42 0008 0023     		movs	r3, #0
  43 000a 0360     		str	r3, [r0]
 136:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 137:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Reset DMAy Channelx remaining bytes register */
 138:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CNDTR = 0;
  44              		.loc 1 138 3 is_stmt 1 view .LVU6
  45              		.loc 1 138 24 is_stmt 0 view .LVU7
  46 000c 4360     		str	r3, [r0, #4]
 139:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 140:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Reset DMAy Channelx peripheral address register */
 141:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CPAR  = 0;
  47              		.loc 1 141 3 is_stmt 1 view .LVU8
  48              		.loc 1 141 24 is_stmt 0 view .LVU9
  49 000e 8360     		str	r3, [r0, #8]
 142:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 143:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Reset DMAy Channelx memory address register */
 144:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CMAR = 0;
  50              		.loc 1 144 3 is_stmt 1 view .LVU10
  51              		.loc 1 144 23 is_stmt 0 view .LVU11
  52 0010 C360     		str	r3, [r0, #12]
 145:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 146:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   if (DMAy_Channelx == DMA1_Channel1)
  53              		.loc 1 146 3 is_stmt 1 view .LVU12
  54              		.loc 1 146 6 is_stmt 0 view .LVU13
  55 0012 194B     		ldr	r3, .L11+4
  56 0014 9842     		cmp	r0, r3
  57 0016 12D0     		beq	.L7
 147:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 148:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel1 */
 149:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMA1->IFCR |= DMA1_CHANNEL1_IT_MASK;
 150:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 151:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else if (DMAy_Channelx == DMA1_Channel2)
  58              		.loc 1 151 8 is_stmt 1 view .LVU14
  59              		.loc 1 151 11 is_stmt 0 view .LVU15
  60 0018 184B     		ldr	r3, .L11+8
  61 001a 9842     		cmp	r0, r3
  62 001c 15D0     		beq	.L8
 152:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 153:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel2 */
 154:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMA1->IFCR |= DMA1_CHANNEL2_IT_MASK;
 155:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 156:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else if (DMAy_Channelx == DMA1_Channel3)
  63              		.loc 1 156 8 is_stmt 1 view .LVU16
  64              		.loc 1 156 11 is_stmt 0 view .LVU17
  65 001e 184B     		ldr	r3, .L11+12
  66 0020 9842     		cmp	r0, r3
  67 0022 18D0     		beq	.L9
 157:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 158:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel3 */
 159:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMA1->IFCR |= DMA1_CHANNEL3_IT_MASK;
 160:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 161:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else if (DMAy_Channelx == DMA1_Channel4)
  68              		.loc 1 161 8 is_stmt 1 view .LVU18
ARM GAS  /tmp/ccrBOfyB.s 			page 5


  69              		.loc 1 161 11 is_stmt 0 view .LVU19
  70 0024 174B     		ldr	r3, .L11+16
  71 0026 9842     		cmp	r0, r3
  72 0028 1CD0     		beq	.L10
 162:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 163:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Reset interrupt pending bits for DMA1 Channel4 */
 164:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMA1->IFCR |= DMA1_CHANNEL4_IT_MASK;
 165:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 166:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else
 167:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 168:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     if (DMAy_Channelx == DMA1_Channel5) 
  73              		.loc 1 168 5 is_stmt 1 view .LVU20
  74              		.loc 1 168 8 is_stmt 0 view .LVU21
  75 002a 174B     		ldr	r3, .L11+20
  76 002c 9842     		cmp	r0, r3
  77 002e 0BD1     		bne	.L1
 169:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     {
 170:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****       /* Reset interrupt pending bits for DMA1 Channel5 */
 171:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****       DMA1->IFCR |= DMA1_CHANNEL5_IT_MASK;
  78              		.loc 1 171 7 is_stmt 1 view .LVU22
  79              		.loc 1 171 18 is_stmt 0 view .LVU23
  80 0030 164A     		ldr	r2, .L11+24
  81 0032 5168     		ldr	r1, [r2, #4]
  82 0034 F023     		movs	r3, #240
  83 0036 1B03     		lsls	r3, r3, #12
  84 0038 0B43     		orrs	r3, r1
  85 003a 5360     		str	r3, [r2, #4]
 172:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     }
 173:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 174:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
  86              		.loc 1 174 1 view .LVU24
  87 003c 04E0     		b	.L1
  88              	.L7:
 149:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
  89              		.loc 1 149 5 is_stmt 1 view .LVU25
 149:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
  90              		.loc 1 149 16 is_stmt 0 view .LVU26
  91 003e 134A     		ldr	r2, .L11+24
  92 0040 5368     		ldr	r3, [r2, #4]
  93 0042 0F21     		movs	r1, #15
  94 0044 0B43     		orrs	r3, r1
  95 0046 5360     		str	r3, [r2, #4]
  96              	.L1:
  97              		.loc 1 174 1 view .LVU27
  98              		@ sp needed
  99 0048 7047     		bx	lr
 100              	.L8:
 154:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 101              		.loc 1 154 5 is_stmt 1 view .LVU28
 154:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 102              		.loc 1 154 16 is_stmt 0 view .LVU29
 103 004a 104A     		ldr	r2, .L11+24
 104 004c 5368     		ldr	r3, [r2, #4]
 105 004e F021     		movs	r1, #240
 106 0050 0B43     		orrs	r3, r1
 107 0052 5360     		str	r3, [r2, #4]
 108 0054 F8E7     		b	.L1
ARM GAS  /tmp/ccrBOfyB.s 			page 6


 109              	.L9:
 159:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 110              		.loc 1 159 5 is_stmt 1 view .LVU30
 159:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 111              		.loc 1 159 16 is_stmt 0 view .LVU31
 112 0056 0D4A     		ldr	r2, .L11+24
 113 0058 5168     		ldr	r1, [r2, #4]
 114 005a F023     		movs	r3, #240
 115 005c 1B01     		lsls	r3, r3, #4
 116 005e 0B43     		orrs	r3, r1
 117 0060 5360     		str	r3, [r2, #4]
 118 0062 F1E7     		b	.L1
 119              	.L10:
 164:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 120              		.loc 1 164 5 is_stmt 1 view .LVU32
 164:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 121              		.loc 1 164 16 is_stmt 0 view .LVU33
 122 0064 094A     		ldr	r2, .L11+24
 123 0066 5168     		ldr	r1, [r2, #4]
 124 0068 F023     		movs	r3, #240
 125 006a 1B02     		lsls	r3, r3, #8
 126 006c 0B43     		orrs	r3, r1
 127 006e 5360     		str	r3, [r2, #4]
 128 0070 EAE7     		b	.L1
 129              	.L12:
 130 0072 C046     		.align	2
 131              	.L11:
 132 0074 FEFF0000 		.word	65534
 133 0078 08000240 		.word	1073872904
 134 007c 1C000240 		.word	1073872924
 135 0080 30000240 		.word	1073872944
 136 0084 44000240 		.word	1073872964
 137 0088 58000240 		.word	1073872984
 138 008c 00000240 		.word	1073872896
 139              		.cfi_endproc
 140              	.LFE40:
 142              		.section	.text.DMA_Init,"ax",%progbits
 143              		.align	1
 144              		.global	DMA_Init
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 148              		.fpu softvfp
 150              	DMA_Init:
 151              	.LVL1:
 152              	.LFB41:
 175:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 176:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 177:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Initializes the DMAy Channelx according to the specified parameters 
 178:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         in the DMA_InitStruct.
 179:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and x can be 1 to 5
 180:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         for DMA1 to select the DMA Channel.
 181:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure that contains
 182:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         the configuration information for the specified DMA Channel.
 183:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 184:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 185:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_Init(DMA_Channel_TypeDef* DMAy_Channelx, DMA_InitTypeDef* DMA_InitStruct)
ARM GAS  /tmp/ccrBOfyB.s 			page 7


 186:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 153              		.loc 1 186 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		.loc 1 186 1 is_stmt 0 view .LVU35
 158 0000 10B5     		push	{r4, lr}
 159              	.LCFI0:
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 187:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   uint32_t tmpreg = 0;
 163              		.loc 1 187 3 is_stmt 1 view .LVU36
 164              	.LVL2:
 188:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 189:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 190:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 165              		.loc 1 190 3 view .LVU37
 191:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_DIR(DMA_InitStruct->DMA_DIR));
 166              		.loc 1 191 3 view .LVU38
 192:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DMA_InitStruct->DMA_BufferSize));
 167              		.loc 1 192 3 view .LVU39
 193:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(DMA_InitStruct->DMA_PeripheralInc));
 168              		.loc 1 193 3 view .LVU40
 194:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(DMA_InitStruct->DMA_MemoryInc));
 169              		.loc 1 194 3 view .LVU41
 195:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(DMA_InitStruct->DMA_PeripheralDataSize));
 170              		.loc 1 195 3 view .LVU42
 196:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(DMA_InitStruct->DMA_MemoryDataSize));
 171              		.loc 1 196 3 view .LVU43
 197:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_MODE(DMA_InitStruct->DMA_Mode));
 172              		.loc 1 197 3 view .LVU44
 198:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_PRIORITY(DMA_InitStruct->DMA_Priority));
 173              		.loc 1 198 3 view .LVU45
 199:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_M2M_STATE(DMA_InitStruct->DMA_M2M));
 174              		.loc 1 199 3 view .LVU46
 200:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 201:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*--------------------------- DMAy Channelx CCR Configuration ----------------*/
 202:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Get the DMAy_Channelx CCR value */
 203:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   tmpreg = DMAy_Channelx->CCR;
 175              		.loc 1 203 3 view .LVU47
 176              		.loc 1 203 10 is_stmt 0 view .LVU48
 177 0002 0368     		ldr	r3, [r0]
 178              	.LVL3:
 204:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 205:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Clear MEM2MEM, PL, MSIZE, PSIZE, MINC, PINC, CIRC and DIR bits */
 206:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   tmpreg &= CCR_CLEAR_MASK;
 179              		.loc 1 206 3 is_stmt 1 view .LVU49
 180              		.loc 1 206 10 is_stmt 0 view .LVU50
 181 0004 0C4A     		ldr	r2, .L14
 182 0006 1A40     		ands	r2, r3
 183              	.LVL4:
 207:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 208:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Configure DMAy Channelx: data transfer, data size, priority level and mode */
 209:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set DIR bit according to DMA_DIR value */
 210:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set CIRC bit according to DMA_Mode value */
 211:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set PINC bit according to DMA_PeripheralInc value */
ARM GAS  /tmp/ccrBOfyB.s 			page 8


 212:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set MINC bit according to DMA_MemoryInc value */
 213:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set PSIZE bits according to DMA_PeripheralDataSize value */
 214:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set MSIZE bits according to DMA_MemoryDataSize value */
 215:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set PL bits according to DMA_Priority value */
 216:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Set the MEM2MEM bit according to DMA_M2M value */
 217:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   tmpreg |= DMA_InitStruct->DMA_DIR | DMA_InitStruct->DMA_Mode |
 184              		.loc 1 217 3 is_stmt 1 view .LVU51
 185              		.loc 1 217 37 is_stmt 0 view .LVU52
 186 0008 8B68     		ldr	r3, [r1, #8]
 187 000a 0C6A     		ldr	r4, [r1, #32]
 188 000c 2343     		orrs	r3, r4
 189              		.loc 1 217 64 view .LVU53
 190 000e 0C69     		ldr	r4, [r1, #16]
 191 0010 2343     		orrs	r3, r4
 218:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 192              		.loc 1 218 47 view .LVU54
 193 0012 4C69     		ldr	r4, [r1, #20]
 194 0014 2343     		orrs	r3, r4
 195              		.loc 1 218 79 view .LVU55
 196 0016 8C69     		ldr	r4, [r1, #24]
 197 0018 2343     		orrs	r3, r4
 219:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             DMA_InitStruct->DMA_PeripheralDataSize | DMA_InitStruct->DMA_MemoryDataSize |
 198              		.loc 1 219 52 view .LVU56
 199 001a CC69     		ldr	r4, [r1, #28]
 200 001c 2343     		orrs	r3, r4
 201              		.loc 1 219 89 view .LVU57
 202 001e 4C6A     		ldr	r4, [r1, #36]
 203 0020 2343     		orrs	r3, r4
 220:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             DMA_InitStruct->DMA_Priority | DMA_InitStruct->DMA_M2M;
 204              		.loc 1 220 42 view .LVU58
 205 0022 8C6A     		ldr	r4, [r1, #40]
 206 0024 2343     		orrs	r3, r4
 217:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             DMA_InitStruct->DMA_PeripheralInc | DMA_InitStruct->DMA_MemoryInc |
 207              		.loc 1 217 10 view .LVU59
 208 0026 1343     		orrs	r3, r2
 209              	.LVL5:
 221:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 222:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Write to DMAy Channelx CCR */
 223:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CCR = tmpreg;
 210              		.loc 1 223 3 is_stmt 1 view .LVU60
 211              		.loc 1 223 22 is_stmt 0 view .LVU61
 212 0028 0360     		str	r3, [r0]
 224:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 225:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration --------------*/
 226:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Write to DMAy Channelx CNDTR */
 227:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CNDTR = DMA_InitStruct->DMA_BufferSize;
 213              		.loc 1 227 3 is_stmt 1 view .LVU62
 214              		.loc 1 227 24 is_stmt 0 view .LVU63
 215 002a CB68     		ldr	r3, [r1, #12]
 216              	.LVL6:
 217              		.loc 1 227 24 view .LVU64
 218 002c 4360     		str	r3, [r0, #4]
 219              	.LVL7:
 228:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 229:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*--------------------------- DMAy Channelx CPAR Configuration ---------------*/
 230:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Write to DMAy Channelx CPAR */
 231:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CPAR = DMA_InitStruct->DMA_PeripheralBaseAddr;
ARM GAS  /tmp/ccrBOfyB.s 			page 9


 220              		.loc 1 231 3 is_stmt 1 view .LVU65
 221              		.loc 1 231 23 is_stmt 0 view .LVU66
 222 002e 0B68     		ldr	r3, [r1]
 223 0030 8360     		str	r3, [r0, #8]
 232:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 233:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*--------------------------- DMAy Channelx CMAR Configuration ---------------*/
 234:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Write to DMAy Channelx CMAR */
 235:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CMAR = DMA_InitStruct->DMA_MemoryBaseAddr;
 224              		.loc 1 235 3 is_stmt 1 view .LVU67
 225              		.loc 1 235 39 is_stmt 0 view .LVU68
 226 0032 4B68     		ldr	r3, [r1, #4]
 227              		.loc 1 235 23 view .LVU69
 228 0034 C360     		str	r3, [r0, #12]
 236:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 229              		.loc 1 236 1 view .LVU70
 230              		@ sp needed
 231 0036 10BD     		pop	{r4, pc}
 232              	.L15:
 233              		.align	2
 234              	.L14:
 235 0038 0F80FFFF 		.word	-32753
 236              		.cfi_endproc
 237              	.LFE41:
 239              		.section	.text.DMA_StructInit,"ax",%progbits
 240              		.align	1
 241              		.global	DMA_StructInit
 242              		.syntax unified
 243              		.code	16
 244              		.thumb_func
 245              		.fpu softvfp
 247              	DMA_StructInit:
 248              	.LVL8:
 249              	.LFB42:
 237:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 238:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 239:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Fills each DMA_InitStruct member with its default value.
 240:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_InitStruct: pointer to a DMA_InitTypeDef structure which will
 241:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         be initialized.
 242:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 243:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 244:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_StructInit(DMA_InitTypeDef* DMA_InitStruct)
 245:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 250              		.loc 1 245 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 246:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*-------------- Reset DMA init structure parameters values ------------------*/
 247:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_PeripheralBaseAddr member */
 248:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_PeripheralBaseAddr = 0;
 255              		.loc 1 248 3 view .LVU72
 256              		.loc 1 248 42 is_stmt 0 view .LVU73
 257 0000 0023     		movs	r3, #0
 258 0002 0360     		str	r3, [r0]
 249:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_MemoryBaseAddr member */
 250:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_MemoryBaseAddr = 0;
 259              		.loc 1 250 3 is_stmt 1 view .LVU74
ARM GAS  /tmp/ccrBOfyB.s 			page 10


 260              		.loc 1 250 38 is_stmt 0 view .LVU75
 261 0004 4360     		str	r3, [r0, #4]
 251:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_DIR member */
 252:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_DIR = DMA_DIR_PeripheralSRC;
 262              		.loc 1 252 3 is_stmt 1 view .LVU76
 263              		.loc 1 252 27 is_stmt 0 view .LVU77
 264 0006 8360     		str	r3, [r0, #8]
 253:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_BufferSize member */
 254:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_BufferSize = 0;
 265              		.loc 1 254 3 is_stmt 1 view .LVU78
 266              		.loc 1 254 34 is_stmt 0 view .LVU79
 267 0008 C360     		str	r3, [r0, #12]
 255:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_PeripheralInc member */
 256:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 268              		.loc 1 256 3 is_stmt 1 view .LVU80
 269              		.loc 1 256 37 is_stmt 0 view .LVU81
 270 000a 0361     		str	r3, [r0, #16]
 257:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_MemoryInc member */
 258:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_MemoryInc = DMA_MemoryInc_Disable;
 271              		.loc 1 258 3 is_stmt 1 view .LVU82
 272              		.loc 1 258 33 is_stmt 0 view .LVU83
 273 000c 4361     		str	r3, [r0, #20]
 259:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_PeripheralDataSize member */
 260:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 274              		.loc 1 260 3 is_stmt 1 view .LVU84
 275              		.loc 1 260 42 is_stmt 0 view .LVU85
 276 000e 8361     		str	r3, [r0, #24]
 261:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_MemoryDataSize member */
 262:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 277              		.loc 1 262 3 is_stmt 1 view .LVU86
 278              		.loc 1 262 38 is_stmt 0 view .LVU87
 279 0010 C361     		str	r3, [r0, #28]
 263:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_Mode member */
 264:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_Mode = DMA_Mode_Normal;
 280              		.loc 1 264 3 is_stmt 1 view .LVU88
 281              		.loc 1 264 28 is_stmt 0 view .LVU89
 282 0012 0362     		str	r3, [r0, #32]
 265:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_Priority member */
 266:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_Priority = DMA_Priority_Low;
 283              		.loc 1 266 3 is_stmt 1 view .LVU90
 284              		.loc 1 266 32 is_stmt 0 view .LVU91
 285 0014 4362     		str	r3, [r0, #36]
 267:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Initialize the DMA_M2M member */
 268:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA_InitStruct->DMA_M2M = DMA_M2M_Disable;
 286              		.loc 1 268 3 is_stmt 1 view .LVU92
 287              		.loc 1 268 27 is_stmt 0 view .LVU93
 288 0016 8362     		str	r3, [r0, #40]
 269:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 289              		.loc 1 269 1 view .LVU94
 290              		@ sp needed
 291 0018 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE42:
 295              		.section	.text.DMA_Cmd,"ax",%progbits
 296              		.align	1
 297              		.global	DMA_Cmd
 298              		.syntax unified
ARM GAS  /tmp/ccrBOfyB.s 			page 11


 299              		.code	16
 300              		.thumb_func
 301              		.fpu softvfp
 303              	DMA_Cmd:
 304              	.LVL9:
 305              	.LFB43:
 270:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 271:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 272:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx.
 273:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and
 274:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         x can be 1 to 5 for DMA1 to select the DMA Channel.
 275:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  NewState: new state of the DMAy Channelx. 
 276:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         This parameter can be: ENABLE or DISABLE.
 277:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 278:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 279:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_Cmd(DMA_Channel_TypeDef* DMAy_Channelx, FunctionalState NewState)
 280:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 306              		.loc 1 280 1 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 281:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 282:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 311              		.loc 1 282 3 view .LVU96
 283:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 312              		.loc 1 283 3 view .LVU97
 284:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 285:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   if (NewState != DISABLE)
 313              		.loc 1 285 3 view .LVU98
 314              		.loc 1 285 6 is_stmt 0 view .LVU99
 315 0000 0029     		cmp	r1, #0
 316 0002 04D0     		beq	.L18
 286:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 287:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Enable the selected DMAy Channelx */
 288:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMAy_Channelx->CCR |= DMA_CCR_EN;
 317              		.loc 1 288 5 is_stmt 1 view .LVU100
 318              		.loc 1 288 24 is_stmt 0 view .LVU101
 319 0004 0368     		ldr	r3, [r0]
 320 0006 0122     		movs	r2, #1
 321 0008 1343     		orrs	r3, r2
 322 000a 0360     		str	r3, [r0]
 323              	.L17:
 289:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 290:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else
 291:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 292:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Disable the selected DMAy Channelx */
 293:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMAy_Channelx->CCR &= (uint16_t)(~DMA_CCR_EN);
 294:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 295:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 324              		.loc 1 295 1 view .LVU102
 325              		@ sp needed
 326 000c 7047     		bx	lr
 327              	.L18:
 293:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 328              		.loc 1 293 5 is_stmt 1 view .LVU103
 293:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
ARM GAS  /tmp/ccrBOfyB.s 			page 12


 329              		.loc 1 293 24 is_stmt 0 view .LVU104
 330 000e 0368     		ldr	r3, [r0]
 331 0010 014A     		ldr	r2, .L20
 332 0012 1340     		ands	r3, r2
 333 0014 0360     		str	r3, [r0]
 334              		.loc 1 295 1 view .LVU105
 335 0016 F9E7     		b	.L17
 336              	.L21:
 337              		.align	2
 338              	.L20:
 339 0018 FEFF0000 		.word	65534
 340              		.cfi_endproc
 341              	.LFE43:
 343              		.section	.text.DMA_SetCurrDataCounter,"ax",%progbits
 344              		.align	1
 345              		.global	DMA_SetCurrDataCounter
 346              		.syntax unified
 347              		.code	16
 348              		.thumb_func
 349              		.fpu softvfp
 351              	DMA_SetCurrDataCounter:
 352              	.LVL10:
 353              	.LFB44:
 296:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 297:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 298:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @}
 299:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 300:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 301:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @defgroup DMA_Group2 Data Counter functions
 302:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *  @brief   Data Counter functions 
 303:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *
 304:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @verbatim
 305:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 306:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****                       ##### Data Counter functions #####
 307:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 308:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] This subsection provides function allowing to configure and read the buffer 
 309:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          size (number of data to be transferred).The DMA data counter can be written 
 310:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          only when the DMA channel is disabled (ie. after transfer complete event).
 311:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] The following function can be used to write the Channel data counter value:
 312:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (+) void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t 
 313:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              DataNumber).
 314:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     -@- It is advised to use this function rather than DMA_Init() in situations 
 315:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         where only the Data buffer needs to be reloaded.
 316:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] The DMA data counter can be read to indicate the number of remaining transfers 
 317:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          for the relative DMA channel. This counter is decremented at the end of each 
 318:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          data transfer and when the transfer is complete: 
 319:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (+) If Normal mode is selected: the counter is set to 0.
 320:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (+) If Circular mode is selected: the counter is reloaded with the initial 
 321:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          value(configured before enabling the DMA channel).
 322:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] The following function can be used to read the Channel data counter value:
 323:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (+) uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx).
 324:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 325:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @endverbatim
 326:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
 327:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 328:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 329:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
ARM GAS  /tmp/ccrBOfyB.s 			page 13


 330:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Sets the number of data units in the current DMAy Channelx transfer.
 331:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and x can be 
 332:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         1 to 5 for DMA1 to select the DMA Channel.
 333:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DataNumber: The number of data units in the current DMAy Channelx
 334:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         transfer.
 335:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @note   This function can only be used when the DMAy_Channelx is disabled.
 336:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None.
 337:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 338:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_SetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx, uint16_t DataNumber)
 339:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 354              		.loc 1 339 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 340:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 341:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 359              		.loc 1 341 3 view .LVU107
 342:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 343:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /*--------------------------- DMAy Channelx CNDTR Configuration --------------*/
 344:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Write to DMAy Channelx CNDTR */
 345:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMAy_Channelx->CNDTR = DataNumber;
 360              		.loc 1 345 3 view .LVU108
 361              		.loc 1 345 24 is_stmt 0 view .LVU109
 362 0000 4160     		str	r1, [r0, #4]
 346:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 363              		.loc 1 346 1 view .LVU110
 364              		@ sp needed
 365 0002 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE44:
 369              		.section	.text.DMA_GetCurrDataCounter,"ax",%progbits
 370              		.align	1
 371              		.global	DMA_GetCurrDataCounter
 372              		.syntax unified
 373              		.code	16
 374              		.thumb_func
 375              		.fpu softvfp
 377              	DMA_GetCurrDataCounter:
 378              	.LVL11:
 379              	.LFB45:
 347:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 348:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 349:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Returns the number of remaining data units in the current
 350:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         DMAy Channelx transfer.
 351:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and
 352:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         x can be 1 to 5 for DMA1 to select the DMA Channel.
 353:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval The number of remaining data units in the current DMAy Channelx
 354:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         transfer.
 355:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 356:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** uint16_t DMA_GetCurrDataCounter(DMA_Channel_TypeDef* DMAy_Channelx)
 357:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 380              		.loc 1 357 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
ARM GAS  /tmp/ccrBOfyB.s 			page 14


 358:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 359:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 385              		.loc 1 359 3 view .LVU112
 360:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Return the number of remaining data units for DMAy Channelx */
 361:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   return ((uint16_t)(DMAy_Channelx->CNDTR));
 386              		.loc 1 361 3 view .LVU113
 387              		.loc 1 361 35 is_stmt 0 view .LVU114
 388 0000 4068     		ldr	r0, [r0, #4]
 389              	.LVL12:
 390              		.loc 1 361 11 view .LVU115
 391 0002 80B2     		uxth	r0, r0
 362:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 392              		.loc 1 362 1 view .LVU116
 393              		@ sp needed
 394 0004 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE45:
 398              		.section	.text.DMA_ITConfig,"ax",%progbits
 399              		.align	1
 400              		.global	DMA_ITConfig
 401              		.syntax unified
 402              		.code	16
 403              		.thumb_func
 404              		.fpu softvfp
 406              	DMA_ITConfig:
 407              	.LVL13:
 408              	.LFB46:
 363:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 364:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 365:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @}
 366:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 367:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 368:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /** @defgroup DMA_Group3 Interrupts and flags management functions
 369:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *  @brief   Interrupts and flags management functions 
 370:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  *
 371:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @verbatim
 372:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 373:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****           ##### Interrupts and flags management functions #####
 374:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****  ===============================================================================
 375:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] This subsection provides functions allowing to configure the DMA Interrupts 
 376:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          sources and check or clear the flags or pending bits status.
 377:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          The user should identify which mode will be used in his application to manage 
 378:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          the DMA controller events: Polling mode or Interrupt mode. 
 379:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *** Polling Mode ***
 380:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ====================
 381:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] Each DMA channel can be managed through 4 event Flags:(y : DMA Controller 
 382:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          number  x : DMA channel number ).
 383:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (#) DMAy_FLAG_TCx : to indicate that a Transfer Complete event occurred.
 384:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (#) DMAy_FLAG_HTx : to indicate that a Half-Transfer Complete event occurred.
 385:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (#) DMAy_FLAG_TEx : to indicate that a Transfer Error occurred.
 386:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****          (#) DMAy_FLAG_GLx : to indicate that at least one of the events described 
 387:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****              above occurred.
 388:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     -@- Clearing DMAy_FLAG_GLx results in clearing all other pending flags of the 
 389:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         same channel (DMAy_FLAG_TCx, DMAy_FLAG_HTx and DMAy_FLAG_TEx).
 390:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..]In this Mode it is advised to use the following functions:
 391:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (+) FlagStatus DMA_GetFlagStatus(uint32_t DMA_FLAG);
 392:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (+) void DMA_ClearFlag(uint32_t DMA_FLAG);
ARM GAS  /tmp/ccrBOfyB.s 			page 15


 393:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 394:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *** Interrupt Mode ***
 395:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ======================
 396:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..] Each DMA channel can be managed through 4 Interrupts:
 397:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     (+) Interrupt Source
 398:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****        (##) DMA_IT_TC: specifies the interrupt source for the Transfer Complete 
 399:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             event.
 400:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****        (##) DMA_IT_HT : specifies the interrupt source for the Half-transfer Complete 
 401:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             event.
 402:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****        (##) DMA_IT_TE : specifies the interrupt source for the transfer errors event.
 403:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****        (##) DMA_IT_GL : to indicate that at least one of the interrupts described 
 404:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             above occurred.
 405:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     -@@- Clearing DMA_IT_GL interrupt results in clearing all other interrupts of 
 406:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         the same channel (DMA_IT_TCx, DMA_IT_HT and DMA_IT_TE).
 407:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     [..]In this Mode it is advised to use the following functions:
 408:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (+) void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, 
 409:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****             FunctionalState NewState);
 410:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (+) ITStatus DMA_GetITStatus(uint32_t DMA_IT);
 411:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****         (+) void DMA_ClearITPendingBit(uint32_t DMA_IT);
 412:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 413:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** @endverbatim
 414:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @{
 415:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 416:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 417:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 418:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Enables or disables the specified DMAy Channelx interrupts.
 419:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMAy_Channelx: where y can be 1 to select the DMA and
 420:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         x can be 1 to 5 for DMA1 to select the DMA Channel.
 421:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupts sources to be enabled
 422:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         or disabled. 
 423:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *   This parameter can be any combination of the following values:
 424:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA_IT_TC: Transfer complete interrupt mask
 425:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA_IT_HT: Half transfer interrupt mask
 426:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA_IT_TE: Transfer error interrupt mask
 427:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  NewState: new state of the specified DMA interrupts.
 428:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *         This parameter can be: ENABLE or DISABLE.
 429:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 430:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 431:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_ITConfig(DMA_Channel_TypeDef* DMAy_Channelx, uint32_t DMA_IT, FunctionalState NewState)
 432:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 409              		.loc 1 432 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 433:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 434:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_ALL_PERIPH(DMAy_Channelx));
 414              		.loc 1 434 3 view .LVU118
 435:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_CONFIG_IT(DMA_IT));
 415              		.loc 1 435 3 view .LVU119
 436:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 416              		.loc 1 436 3 view .LVU120
 437:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 438:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   if (NewState != DISABLE)
 417              		.loc 1 438 3 view .LVU121
 418              		.loc 1 438 6 is_stmt 0 view .LVU122
 419 0000 002A     		cmp	r2, #0
ARM GAS  /tmp/ccrBOfyB.s 			page 16


 420 0002 03D0     		beq	.L25
 439:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 440:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Enable the selected DMA interrupts */
 441:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMAy_Channelx->CCR |= DMA_IT;
 421              		.loc 1 441 5 is_stmt 1 view .LVU123
 422              		.loc 1 441 24 is_stmt 0 view .LVU124
 423 0004 0368     		ldr	r3, [r0]
 424 0006 1943     		orrs	r1, r3
 425              	.LVL14:
 426              		.loc 1 441 24 view .LVU125
 427 0008 0160     		str	r1, [r0]
 428              	.L24:
 442:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 443:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else
 444:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 445:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* Disable the selected DMA interrupts */
 446:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     DMAy_Channelx->CCR &= ~DMA_IT;
 447:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 448:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 429              		.loc 1 448 1 view .LVU126
 430              		@ sp needed
 431 000a 7047     		bx	lr
 432              	.LVL15:
 433              	.L25:
 446:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 434              		.loc 1 446 5 is_stmt 1 view .LVU127
 446:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 435              		.loc 1 446 24 is_stmt 0 view .LVU128
 436 000c 0368     		ldr	r3, [r0]
 437 000e 8B43     		bics	r3, r1
 438 0010 0360     		str	r3, [r0]
 439              		.loc 1 448 1 view .LVU129
 440 0012 FAE7     		b	.L24
 441              		.cfi_endproc
 442              	.LFE46:
 444              		.section	.text.DMA_GetFlagStatus,"ax",%progbits
 445              		.align	1
 446              		.global	DMA_GetFlagStatus
 447              		.syntax unified
 448              		.code	16
 449              		.thumb_func
 450              		.fpu softvfp
 452              	DMA_GetFlagStatus:
 453              	.LVL16:
 454              	.LFB47:
 449:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 450:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 451:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Checks whether the specified DMAy Channelx flag is set or not.
 452:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to check.
 453:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *   This parameter can be one of the following values:
 454:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 455:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 456:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 457:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 458:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 459:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 460:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
ARM GAS  /tmp/ccrBOfyB.s 			page 17


 461:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 462:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 463:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 464:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 465:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 466:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 467:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 468:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 469:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 470:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 471:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
 472:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 473:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 474:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     
 475:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @note
 476:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    The Global flag (DMAy_FLAG_GLx) is set whenever any of the other flags 
 477:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    relative to the same channel is set (Transfer Complete, Half-transfer 
 478:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Complete or Transfer Error flags: DMAy_FLAG_TCx, DMAy_FLAG_HTx or 
 479:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    DMAy_FLAG_TEx). 
 480:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *      
 481:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval The new state of DMA_FLAG (SET or RESET).
 482:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 483:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** FlagStatus DMA_GetFlagStatus(uint32_t DMA_FLAG)
 484:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 455              		.loc 1 484 1 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 485:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   FlagStatus bitstatus = RESET;
 460              		.loc 1 485 3 view .LVU131
 486:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 487:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 488:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_GET_FLAG(DMA_FLAG));
 461              		.loc 1 488 3 view .LVU132
 489:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 490:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the status of the specified DMA flag */
 491:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   if ((DMA1->ISR & DMA_FLAG) != (uint32_t)RESET)
 462              		.loc 1 491 3 view .LVU133
 463              		.loc 1 491 12 is_stmt 0 view .LVU134
 464 0000 034B     		ldr	r3, .L30
 465 0002 1B68     		ldr	r3, [r3]
 466              		.loc 1 491 6 view .LVU135
 467 0004 1842     		tst	r0, r3
 468 0006 01D0     		beq	.L29
 492:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 493:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* DMA_FLAG is set */
 494:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     bitstatus = SET;
 469              		.loc 1 494 15 view .LVU136
 470 0008 0120     		movs	r0, #1
 471              	.LVL17:
 472              	.L28:
 495:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 496:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else
 497:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 498:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* DMA_FLAG is reset */
 499:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     bitstatus = RESET;
ARM GAS  /tmp/ccrBOfyB.s 			page 18


 500:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 501:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 502:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Return the DMA_FLAG status */
 503:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   return  bitstatus;
 473              		.loc 1 503 3 is_stmt 1 view .LVU137
 504:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 474              		.loc 1 504 1 is_stmt 0 view .LVU138
 475              		@ sp needed
 476 000a 7047     		bx	lr
 477              	.LVL18:
 478              	.L29:
 499:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 479              		.loc 1 499 15 view .LVU139
 480 000c 0020     		movs	r0, #0
 481              	.LVL19:
 499:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 482              		.loc 1 499 15 view .LVU140
 483 000e FCE7     		b	.L28
 484              	.L31:
 485              		.align	2
 486              	.L30:
 487 0010 00000240 		.word	1073872896
 488              		.cfi_endproc
 489              	.LFE47:
 491              		.section	.text.DMA_ClearFlag,"ax",%progbits
 492              		.align	1
 493              		.global	DMA_ClearFlag
 494              		.syntax unified
 495              		.code	16
 496              		.thumb_func
 497              		.fpu softvfp
 499              	DMA_ClearFlag:
 500              	.LVL20:
 501              	.LFB48:
 505:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 506:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 507:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Clears the DMAy Channelx's pending flags.
 508:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_FLAG: specifies the flag to clear.
 509:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 510:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL1: DMA1 Channel1 global flag.
 511:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC1: DMA1 Channel1 transfer complete flag.
 512:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT1: DMA1 Channel1 half transfer flag.
 513:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE1: DMA1 Channel1 transfer error flag.
 514:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL2: DMA1 Channel2 global flag.
 515:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC2: DMA1 Channel2 transfer complete flag.
 516:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT2: DMA1 Channel2 half transfer flag.
 517:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE2: DMA1 Channel2 transfer error flag.
 518:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL3: DMA1 Channel3 global flag.
 519:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC3: DMA1 Channel3 transfer complete flag.
 520:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT3: DMA1 Channel3 half transfer flag.
 521:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE3: DMA1 Channel3 transfer error flag.
 522:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL4: DMA1 Channel4 global flag.
 523:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC4: DMA1 Channel4 transfer complete flag.
 524:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT4: DMA1 Channel4 half transfer flag.
 525:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE4: DMA1 Channel4 transfer error flag.
 526:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_GL5: DMA1 Channel5 global flag.
 527:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TC5: DMA1 Channel5 transfer complete flag.
ARM GAS  /tmp/ccrBOfyB.s 			page 19


 528:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_HT5: DMA1 Channel5 half transfer flag.
 529:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_FLAG_TE5: DMA1 Channel5 transfer error flag.
 530:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
 531:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @note
 532:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Clearing the Global flag (DMAy_FLAG_GLx) results in clearing all other flags
 533:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    relative to the same channel (Transfer Complete, Half-transfer Complete and
 534:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Transfer Error flags: DMAy_FLAG_TCx, DMAy_FLAG_HTx and DMAy_FLAG_TEx).
 535:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *
 536:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 537:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 538:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_ClearFlag(uint32_t DMA_FLAG)
 539:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 502              		.loc 1 539 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		@ link register save eliminated.
 540:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 541:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_CLEAR_FLAG(DMA_FLAG));
 507              		.loc 1 541 3 view .LVU142
 542:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 543:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Clear the selected DMA flags */
 544:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA1->IFCR = DMA_FLAG;
 508              		.loc 1 544 3 view .LVU143
 509              		.loc 1 544 14 is_stmt 0 view .LVU144
 510 0000 014B     		ldr	r3, .L33
 511 0002 5860     		str	r0, [r3, #4]
 545:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 512              		.loc 1 545 1 view .LVU145
 513              		@ sp needed
 514 0004 7047     		bx	lr
 515              	.L34:
 516 0006 C046     		.align	2
 517              	.L33:
 518 0008 00000240 		.word	1073872896
 519              		.cfi_endproc
 520              	.LFE48:
 522              		.section	.text.DMA_GetITStatus,"ax",%progbits
 523              		.align	1
 524              		.global	DMA_GetITStatus
 525              		.syntax unified
 526              		.code	16
 527              		.thumb_func
 528              		.fpu softvfp
 530              	DMA_GetITStatus:
 531              	.LVL21:
 532              	.LFB49:
 546:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 547:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 548:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Checks whether the specified DMAy Channelx interrupt has occurred or not.
 549:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt source to check. 
 550:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *   This parameter can be one of the following values:
 551:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 552:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 553:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 554:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 555:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
ARM GAS  /tmp/ccrBOfyB.s 			page 20


 556:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 557:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 558:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 559:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 560:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 561:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 562:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 563:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 564:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 565:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 566:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 567:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
 568:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 569:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 570:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 571:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     
 572:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @note
 573:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    The Global interrupt (DMAy_FLAG_GLx) is set whenever any of the other 
 574:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    interrupts relative to the same channel is set (Transfer Complete, 
 575:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Half-transfer Complete or Transfer Error interrupts: DMAy_IT_TCx, 
 576:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    DMAy_IT_HTx or DMAy_IT_TEx). 
 577:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *      
 578:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval The new state of DMA_IT (SET or RESET).
 579:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 580:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** ITStatus DMA_GetITStatus(uint32_t DMA_IT)
 581:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 533              		.loc 1 581 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 582:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   ITStatus bitstatus = RESET;
 538              		.loc 1 582 3 view .LVU147
 583:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 584:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 585:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_GET_IT(DMA_IT));
 539              		.loc 1 585 3 view .LVU148
 586:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 587:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the status of the specified DMA interrupt */
 588:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   if ((DMA1->ISR & DMA_IT) != (uint32_t)RESET)
 540              		.loc 1 588 3 view .LVU149
 541              		.loc 1 588 12 is_stmt 0 view .LVU150
 542 0000 034B     		ldr	r3, .L38
 543 0002 1B68     		ldr	r3, [r3]
 544              		.loc 1 588 6 view .LVU151
 545 0004 1842     		tst	r0, r3
 546 0006 01D0     		beq	.L37
 589:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
 590:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* DMA_IT is set */
 591:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     bitstatus = SET;
 547              		.loc 1 591 15 view .LVU152
 548 0008 0120     		movs	r0, #1
 549              	.LVL22:
 550              	.L36:
 592:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 593:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   else
 594:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   {
ARM GAS  /tmp/ccrBOfyB.s 			page 21


 595:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     /* DMA_IT is reset */
 596:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****     bitstatus = RESET;
 597:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 598:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Return the DMA_IT status */
 599:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   return  bitstatus;
 551              		.loc 1 599 3 is_stmt 1 view .LVU153
 600:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 552              		.loc 1 600 1 is_stmt 0 view .LVU154
 553              		@ sp needed
 554 000a 7047     		bx	lr
 555              	.LVL23:
 556              	.L37:
 596:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 557              		.loc 1 596 15 view .LVU155
 558 000c 0020     		movs	r0, #0
 559              	.LVL24:
 596:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   }
 560              		.loc 1 596 15 view .LVU156
 561 000e FCE7     		b	.L36
 562              	.L39:
 563              		.align	2
 564              	.L38:
 565 0010 00000240 		.word	1073872896
 566              		.cfi_endproc
 567              	.LFE49:
 569              		.section	.text.DMA_ClearITPendingBit,"ax",%progbits
 570              		.align	1
 571              		.global	DMA_ClearITPendingBit
 572              		.syntax unified
 573              		.code	16
 574              		.thumb_func
 575              		.fpu softvfp
 577              	DMA_ClearITPendingBit:
 578              	.LVL25:
 579              	.LFB50:
 601:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 602:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** /**
 603:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @brief  Clears the DMAy Channelx's interrupt pending bits.
 604:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @param  DMA_IT: specifies the DMA interrupt pending bit to clear.
 605:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *   This parameter can be any combination (for the same DMA) of the following values:
 606:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL1: DMA1 Channel1 global interrupt.
 607:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC1: DMA1 Channel1 transfer complete interrupt.
 608:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT1: DMA1 Channel1 half transfer interrupt.
 609:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE1: DMA1 Channel1 transfer error interrupt.
 610:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL2: DMA1 Channel2 global interrupt.
 611:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC2: DMA1 Channel2 transfer complete interrupt.
 612:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT2: DMA1 Channel2 half transfer interrupt.
 613:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE2: DMA1 Channel2 transfer error interrupt.
 614:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL3: DMA1 Channel3 global interrupt.
 615:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC3: DMA1 Channel3 transfer complete interrupt.
 616:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT3: DMA1 Channel3 half transfer interrupt.
 617:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE3: DMA1 Channel3 transfer error interrupt.
 618:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL4: DMA1 Channel4 global interrupt.
 619:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC4: DMA1 Channel4 transfer complete interrupt.
 620:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT4: DMA1 Channel4 half transfer interrupt.
 621:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE4: DMA1 Channel4 transfer error interrupt.
 622:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_GL5: DMA1 Channel5 global interrupt.
ARM GAS  /tmp/ccrBOfyB.s 			page 22


 623:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TC5: DMA1 Channel5 transfer complete interrupt.
 624:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_HT5: DMA1 Channel5 half transfer interrupt.
 625:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     @arg DMA1_IT_TE5: DMA1 Channel5 transfer error interrupt.
 626:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *     
 627:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @note
 628:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Clearing the Global interrupt (DMAy_IT_GLx) results in clearing all other 
 629:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    interrupts relative to the same channel (Transfer Complete, Half-transfer 
 630:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    Complete and Transfer Error interrupts: DMAy_IT_TCx, DMAy_IT_HTx and 
 631:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *    DMAy_IT_TEx).  
 632:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   *        
 633:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   * @retval None
 634:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   */
 635:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** void DMA_ClearITPendingBit(uint32_t DMA_IT)
 636:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** {
 580              		.loc 1 636 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 637:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Check the parameters */
 638:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   assert_param(IS_DMA_CLEAR_IT(DMA_IT));
 585              		.loc 1 638 3 view .LVU158
 639:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** 
 640:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   /* Clear the selected DMA interrupt pending bits */
 641:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c ****   DMA1->IFCR = DMA_IT;
 586              		.loc 1 641 3 view .LVU159
 587              		.loc 1 641 14 is_stmt 0 view .LVU160
 588 0000 014B     		ldr	r3, .L41
 589 0002 5860     		str	r0, [r3, #4]
 642:Drivers/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_dma.c **** }
 590              		.loc 1 642 1 view .LVU161
 591              		@ sp needed
 592 0004 7047     		bx	lr
 593              	.L42:
 594 0006 C046     		.align	2
 595              	.L41:
 596 0008 00000240 		.word	1073872896
 597              		.cfi_endproc
 598              	.LFE50:
 600              		.text
 601              	.Letext0:
 602              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 603              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 604              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 605              		.file 5 "Drivers/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_dma.h"
 606              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
ARM GAS  /tmp/ccrBOfyB.s 			page 23


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_dma.c
     /tmp/ccrBOfyB.s:16     .text.DMA_DeInit:0000000000000000 $t
     /tmp/ccrBOfyB.s:24     .text.DMA_DeInit:0000000000000000 DMA_DeInit
     /tmp/ccrBOfyB.s:132    .text.DMA_DeInit:0000000000000074 $d
     /tmp/ccrBOfyB.s:143    .text.DMA_Init:0000000000000000 $t
     /tmp/ccrBOfyB.s:150    .text.DMA_Init:0000000000000000 DMA_Init
     /tmp/ccrBOfyB.s:235    .text.DMA_Init:0000000000000038 $d
     /tmp/ccrBOfyB.s:240    .text.DMA_StructInit:0000000000000000 $t
     /tmp/ccrBOfyB.s:247    .text.DMA_StructInit:0000000000000000 DMA_StructInit
     /tmp/ccrBOfyB.s:296    .text.DMA_Cmd:0000000000000000 $t
     /tmp/ccrBOfyB.s:303    .text.DMA_Cmd:0000000000000000 DMA_Cmd
     /tmp/ccrBOfyB.s:339    .text.DMA_Cmd:0000000000000018 $d
     /tmp/ccrBOfyB.s:344    .text.DMA_SetCurrDataCounter:0000000000000000 $t
     /tmp/ccrBOfyB.s:351    .text.DMA_SetCurrDataCounter:0000000000000000 DMA_SetCurrDataCounter
     /tmp/ccrBOfyB.s:370    .text.DMA_GetCurrDataCounter:0000000000000000 $t
     /tmp/ccrBOfyB.s:377    .text.DMA_GetCurrDataCounter:0000000000000000 DMA_GetCurrDataCounter
     /tmp/ccrBOfyB.s:399    .text.DMA_ITConfig:0000000000000000 $t
     /tmp/ccrBOfyB.s:406    .text.DMA_ITConfig:0000000000000000 DMA_ITConfig
     /tmp/ccrBOfyB.s:445    .text.DMA_GetFlagStatus:0000000000000000 $t
     /tmp/ccrBOfyB.s:452    .text.DMA_GetFlagStatus:0000000000000000 DMA_GetFlagStatus
     /tmp/ccrBOfyB.s:487    .text.DMA_GetFlagStatus:0000000000000010 $d
     /tmp/ccrBOfyB.s:492    .text.DMA_ClearFlag:0000000000000000 $t
     /tmp/ccrBOfyB.s:499    .text.DMA_ClearFlag:0000000000000000 DMA_ClearFlag
     /tmp/ccrBOfyB.s:518    .text.DMA_ClearFlag:0000000000000008 $d
     /tmp/ccrBOfyB.s:523    .text.DMA_GetITStatus:0000000000000000 $t
     /tmp/ccrBOfyB.s:530    .text.DMA_GetITStatus:0000000000000000 DMA_GetITStatus
     /tmp/ccrBOfyB.s:565    .text.DMA_GetITStatus:0000000000000010 $d
     /tmp/ccrBOfyB.s:570    .text.DMA_ClearITPendingBit:0000000000000000 $t
     /tmp/ccrBOfyB.s:577    .text.DMA_ClearITPendingBit:0000000000000000 DMA_ClearITPendingBit
     /tmp/ccrBOfyB.s:596    .text.DMA_ClearITPendingBit:0000000000000008 $d

NO UNDEFINED SYMBOLS
