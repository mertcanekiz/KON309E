ARM GAS  /tmp/ccBloFiL.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.ADC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	ADC_DeInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	ADC_DeInit:
  25              	.LVL0:
  26              	.LFB32:
  27              		.file 1 "Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c"
   1:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
   2:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ******************************************************************************
   3:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @file    stm32f0xx_adc.c
   4:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @author  MCD Application Team
   5:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @version V1.0.0
   6:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @date    23-March-2012
   7:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + Initialization and Configuration
  10:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + Power saving
  11:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + Analog Watchdog configuration
  12:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + Temperature Sensor, Vrefint (Internal Reference Voltage) and 
  13:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *             Vbat (Voltage battery) management 
  14:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + ADC Channels Configuration
  15:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + ADC Channels DMA Configuration
  16:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           + Interrupts and flags management
  17:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  18:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *  @verbatim
  19:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** ================================================================================
  20:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                       ##### How to use this driver #####
  21:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** ================================================================================
  22:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..]
  23:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (#) Enable the ADC interface clock using 
  24:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE); 
  25:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (#) ADC pins configuration
  26:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****        (++) Enable the clock for the ADC GPIOs using the following function:
  27:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****             RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOx, ENABLE);   
  28:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****        (++) Configure these ADC pins in analog mode using GPIO_Init();  
  29:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (#) Configure the ADC conversion resolution, data alignment, external
  30:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         trigger and edge, scan direction and Enable/Disable the continuous mode
  31:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         using the ADC_Init() function.
ARM GAS  /tmp/ccBloFiL.s 			page 2


  32:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (#) Activate the ADC peripheral using ADC_Cmd() function.
  33:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  34:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     *** ADC channels group configuration ***
  35:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ============================================
  36:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] 
  37:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To configure the ADC channels features, use ADC_Init() and 
  38:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         ADC_ChannelConfig() functions.
  39:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To activate the continuous mode, use the ADC_ContinuousModeCmd()
  40:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         function.
  41:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To activate the Discontinuous mode, use the ADC_DiscModeCmd() functions. 
  42:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To activate the overrun mode, use the ADC_OverrunModeCmd() functions.
  43:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To activate the calibration mode, use the ADC_GetCalibrationFactor() functions.
  44:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To read the ADC converted values, use the ADC_GetConversionValue()
  45:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         function.
  46:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  47:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     *** DMA for ADC channels features configuration ***
  48:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     =============================================================
  49:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] 
  50:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To enable the DMA mode for ADC channels group, use the ADC_DMACmd() function.
  51:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     (+) To configure the DMA transfer request, use ADC_DMARequestModeConfig() function.
  52:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  53:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *  @endverbatim
  54:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  55:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ******************************************************************************
  56:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @attention
  57:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  58:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  59:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  60:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  61:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * You may not use this file except in compliance with the License.
  62:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * You may obtain a copy of the License at:
  63:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  64:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  65:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  66:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * Unless required by applicable law or agreed to in writing, software 
  67:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  68:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  69:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * See the License for the specific language governing permissions and
  70:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * limitations under the License.
  71:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *
  72:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ******************************************************************************
  73:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
  74:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  75:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Includes ------------------------------------------------------------------*/
  76:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** #include "stm32f0xx_adc.h"
  77:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** #include "stm32f0xx_rcc.h"
  78:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  79:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @addtogroup STM32F0xx_StdPeriph_Driver
  80:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
  81:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
  82:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  83:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC 
  84:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief ADC driver modules
  85:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
  86:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
  87:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  88:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccBloFiL.s 			page 3


  89:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private define ------------------------------------------------------------*/
  90:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* ADC CFGR mask */
  91:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** #define CFGR1_CLEAR_MASK           ((uint32_t)0xFFFFD203)
  92:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  93:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Calibration time out */
  94:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** #define CALIBRATION_TIMEOUT       ((uint32_t)0x0000F000)
  95:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  96:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private macro -------------------------------------------------------------*/
  97:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private variables ---------------------------------------------------------*/
  98:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
  99:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 100:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 101:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Private_Functions
 102:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 103:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 104:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 105:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 106:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Initialization and Configuration functions 
 107:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 108:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 109:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 110:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****           ##### Initialization and Configuration functions #####
 111:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 112:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to:
 113:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) Initialize and configure the ADC Prescaler
 114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) ADC Conversion Resolution (12bit..6bit)
 115:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) ADC Continuous Conversion Mode (Continuous or Single conversion)
 116:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) External trigger Edge and source 
 117:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) Converted data alignment (left or right)
 118:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) The direction in which the channels will be scanned in the sequence
 119:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+) Enable or disable the ADC peripheral
 120:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****    
 121:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 122:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 123:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 124:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 125:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 126:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Deinitializes ADC1 peripheral registers to their default reset values.
 127:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC peripheral.
 128:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 129:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 130:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_DeInit(ADC_TypeDef* ADCx)
 131:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
  28              		.loc 1 131 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 131 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0400     		movs	r4, r0
 132:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 133:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
  39              		.loc 1 133 3 is_stmt 1 view .LVU2
ARM GAS  /tmp/ccBloFiL.s 			page 4


  40 0004 0A4B     		ldr	r3, .L4
  41 0006 C018     		adds	r0, r0, r3
  42              	.LVL1:
  43              		.loc 1 133 3 is_stmt 0 view .LVU3
  44 0008 4342     		rsbs	r3, r0, #0
  45 000a 5841     		adcs	r0, r0, r3
  46 000c FFF7FEFF 		bl	assert_param
  47              	.LVL2:
 134:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 135:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if(ADCx == ADC1)
  48              		.loc 1 135 3 is_stmt 1 view .LVU4
  49              		.loc 1 135 5 is_stmt 0 view .LVU5
  50 0010 084B     		ldr	r3, .L4+4
  51 0012 9C42     		cmp	r4, r3
  52 0014 00D0     		beq	.L3
  53              	.LVL3:
  54              	.L1:
 136:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable ADC1 reset state */
 138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, ENABLE);
 139:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 140:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Release ADC1 from reset state */
 141:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC1, DISABLE);
 142:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 143:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
  55              		.loc 1 143 1 view .LVU6
  56              		@ sp needed
  57 0016 10BD     		pop	{r4, pc}
  58              	.LVL4:
  59              	.L3:
 138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  60              		.loc 1 138 5 is_stmt 1 view .LVU7
  61 0018 8024     		movs	r4, #128
  62              	.LVL5:
 138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
  63              		.loc 1 138 5 is_stmt 0 view .LVU8
  64 001a A400     		lsls	r4, r4, #2
  65 001c 0121     		movs	r1, #1
  66 001e 2000     		movs	r0, r4
  67 0020 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  68              	.LVL6:
 141:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
  69              		.loc 1 141 5 is_stmt 1 view .LVU9
  70 0024 0021     		movs	r1, #0
  71 0026 2000     		movs	r0, r4
  72 0028 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  73              	.LVL7:
  74              		.loc 1 143 1 is_stmt 0 view .LVU10
  75 002c F3E7     		b	.L1
  76              	.L5:
  77 002e C046     		.align	2
  78              	.L4:
  79 0030 00DCFEBF 		.word	-1073816576
  80 0034 00240140 		.word	1073816576
  81              		.cfi_endproc
  82              	.LFE32:
  84              		.section	.text.ADC_Init,"ax",%progbits
ARM GAS  /tmp/ccBloFiL.s 			page 5


  85              		.align	1
  86              		.global	ADC_Init
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	ADC_Init:
  93              	.LVL8:
  94              	.LFB33:
 144:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 145:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 146:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters
 147:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         in the ADC_InitStruct.
 148:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 149:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         Resolution, Data Alignment, continuous mode activation, External 
 150:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         trigger source and edge, Sequence Scan Direction).   
 151:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC peripheral.
 152:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains 
 153:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
 154:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 155:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 156:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 157:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
  95              		.loc 1 157 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 1 157 1 is_stmt 0 view .LVU12
 100 0000 70B5     		push	{r4, r5, r6, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 16
 103              		.cfi_offset 4, -16
 104              		.cfi_offset 5, -12
 105              		.cfi_offset 6, -8
 106              		.cfi_offset 14, -4
 107 0002 0500     		movs	r5, r0
 108 0004 0C00     		movs	r4, r1
 158:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t tmpreg = 0;
 109              		.loc 1 158 3 is_stmt 1 view .LVU13
 110              	.LVL9:
 159:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 160:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 161:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 111              		.loc 1 161 3 view .LVU14
 112 0006 3F4B     		ldr	r3, .L34
 113 0008 C018     		adds	r0, r0, r3
 114              	.LVL10:
 115              		.loc 1 161 3 is_stmt 0 view .LVU15
 116 000a 4342     		rsbs	r3, r0, #0
 117 000c 5841     		adcs	r0, r0, r3
 118 000e FFF7FEFF 		bl	assert_param
 119              	.LVL11:
 162:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution));
 120              		.loc 1 162 3 is_stmt 1 view .LVU16
 121              		.loc 1 162 16 is_stmt 0 view .LVU17
 122 0012 2368     		ldr	r3, [r4]
 123              		.loc 1 162 3 view .LVU18
ARM GAS  /tmp/ccBloFiL.s 			page 6


 124 0014 002B     		cmp	r3, #0
 125 0016 09D0     		beq	.L12
 126              		.loc 1 162 16 discriminator 2 view .LVU19
 127 0018 082B     		cmp	r3, #8
 128 001a 22D0     		beq	.L13
 129              		.loc 1 162 16 discriminator 4 view .LVU20
 130 001c 102B     		cmp	r3, #16
 131 001e 22D0     		beq	.L14
 132              		.loc 1 162 3 discriminator 6 view .LVU21
 133 0020 182B     		cmp	r3, #24
 134 0022 01D0     		beq	.L29
 135              		.loc 1 162 3 view .LVU22
 136 0024 0020     		movs	r0, #0
 137 0026 02E0     		b	.L7
 138              	.L29:
 139 0028 0120     		movs	r0, #1
 140 002a 00E0     		b	.L7
 141              	.L12:
 142 002c 0120     		movs	r0, #1
 143              	.L7:
 144              		.loc 1 162 3 discriminator 10 view .LVU23
 145 002e FFF7FEFF 		bl	assert_param
 146              	.LVL12:
 163:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode));
 147              		.loc 1 163 3 is_stmt 1 discriminator 10 view .LVU24
 148              		.loc 1 163 16 is_stmt 0 discriminator 10 view .LVU25
 149 0032 2379     		ldrb	r3, [r4, #4]
 150              		.loc 1 163 3 discriminator 10 view .LVU26
 151 0034 0020     		movs	r0, #0
 152 0036 0122     		movs	r2, #1
 153 0038 9A42     		cmp	r2, r3
 154 003a 4041     		adcs	r0, r0, r0
 155 003c FFF7FEFF 		bl	assert_param
 156              	.LVL13:
 164:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge));
 157              		.loc 1 164 3 is_stmt 1 discriminator 10 view .LVU27
 158              		.loc 1 164 16 is_stmt 0 discriminator 10 view .LVU28
 159 0040 A368     		ldr	r3, [r4, #8]
 160              		.loc 1 164 3 discriminator 10 view .LVU29
 161 0042 002B     		cmp	r3, #0
 162 0044 13D0     		beq	.L16
 163              		.loc 1 164 16 discriminator 2 view .LVU30
 164 0046 8022     		movs	r2, #128
 165 0048 D200     		lsls	r2, r2, #3
 166 004a 9342     		cmp	r3, r2
 167 004c 21D0     		beq	.L17
 168              		.loc 1 164 16 discriminator 4 view .LVU31
 169 004e 8022     		movs	r2, #128
 170 0050 1201     		lsls	r2, r2, #4
 171 0052 9342     		cmp	r3, r2
 172 0054 1FD0     		beq	.L18
 173              		.loc 1 164 3 discriminator 6 view .LVU32
 174 0056 C022     		movs	r2, #192
 175 0058 1201     		lsls	r2, r2, #4
 176 005a 9342     		cmp	r3, r2
 177 005c 05D0     		beq	.L30
 178              		.loc 1 164 3 view .LVU33
ARM GAS  /tmp/ccBloFiL.s 			page 7


 179 005e 0020     		movs	r0, #0
 180 0060 06E0     		b	.L8
 181              	.L13:
 162:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution));
 182              		.loc 1 162 3 view .LVU34
 183 0062 0120     		movs	r0, #1
 184 0064 E3E7     		b	.L7
 185              	.L14:
 186 0066 0120     		movs	r0, #1
 187 0068 E1E7     		b	.L7
 188              	.L30:
 189              		.loc 1 164 3 view .LVU35
 190 006a 0120     		movs	r0, #1
 191 006c 00E0     		b	.L8
 192              	.L16:
 193 006e 0120     		movs	r0, #1
 194              	.L8:
 195              		.loc 1 164 3 discriminator 10 view .LVU36
 196 0070 FFF7FEFF 		bl	assert_param
 197              	.LVL14:
 165:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_EXTERNAL_TRIG_CONV(ADC_InitStruct->ADC_ExternalTrigConv));
 198              		.loc 1 165 3 is_stmt 1 discriminator 10 view .LVU37
 199              		.loc 1 165 16 is_stmt 0 discriminator 10 view .LVU38
 200 0074 E368     		ldr	r3, [r4, #12]
 201              		.loc 1 165 3 discriminator 10 view .LVU39
 202 0076 002B     		cmp	r3, #0
 203 0078 11D0     		beq	.L20
 204              		.loc 1 165 16 discriminator 2 view .LVU40
 205 007a 402B     		cmp	r3, #64
 206 007c 19D0     		beq	.L21
 207              		.loc 1 165 16 discriminator 4 view .LVU41
 208 007e 802B     		cmp	r3, #128
 209 0080 19D0     		beq	.L22
 210              		.loc 1 165 16 discriminator 6 view .LVU42
 211 0082 C02B     		cmp	r3, #192
 212 0084 19D0     		beq	.L23
 213              		.loc 1 165 3 discriminator 8 view .LVU43
 214 0086 8022     		movs	r2, #128
 215 0088 5200     		lsls	r2, r2, #1
 216 008a 9342     		cmp	r3, r2
 217 008c 05D0     		beq	.L31
 218              		.loc 1 165 3 view .LVU44
 219 008e 0020     		movs	r0, #0
 220 0090 06E0     		b	.L9
 221              	.L17:
 164:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge));
 222              		.loc 1 164 3 view .LVU45
 223 0092 0120     		movs	r0, #1
 224 0094 ECE7     		b	.L8
 225              	.L18:
 226 0096 0120     		movs	r0, #1
 227 0098 EAE7     		b	.L8
 228              	.L31:
 229              		.loc 1 165 3 view .LVU46
 230 009a 0120     		movs	r0, #1
 231 009c 00E0     		b	.L9
 232              	.L20:
ARM GAS  /tmp/ccBloFiL.s 			page 8


 233 009e 0120     		movs	r0, #1
 234              	.L9:
 235              		.loc 1 165 3 discriminator 12 view .LVU47
 236 00a0 FFF7FEFF 		bl	assert_param
 237              	.LVL15:
 166:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign));
 238              		.loc 1 166 3 is_stmt 1 discriminator 12 view .LVU48
 239              		.loc 1 166 16 is_stmt 0 discriminator 12 view .LVU49
 240 00a4 2369     		ldr	r3, [r4, #16]
 241              		.loc 1 166 3 discriminator 12 view .LVU50
 242 00a6 002B     		cmp	r3, #0
 243 00a8 0BD0     		beq	.L25
 244              		.loc 1 166 3 discriminator 2 view .LVU51
 245 00aa 202B     		cmp	r3, #32
 246 00ac 07D0     		beq	.L32
 247              		.loc 1 166 3 view .LVU52
 248 00ae 0020     		movs	r0, #0
 249 00b0 08E0     		b	.L10
 250              	.L21:
 165:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_EXTERNAL_TRIG_CONV(ADC_InitStruct->ADC_ExternalTrigConv));
 251              		.loc 1 165 3 view .LVU53
 252 00b2 0120     		movs	r0, #1
 253 00b4 F4E7     		b	.L9
 254              	.L22:
 255 00b6 0120     		movs	r0, #1
 256 00b8 F2E7     		b	.L9
 257              	.L23:
 258 00ba 0120     		movs	r0, #1
 259 00bc F0E7     		b	.L9
 260              	.L32:
 261              		.loc 1 166 3 view .LVU54
 262 00be 0120     		movs	r0, #1
 263 00c0 00E0     		b	.L10
 264              	.L25:
 265 00c2 0120     		movs	r0, #1
 266              	.L10:
 267              		.loc 1 166 3 discriminator 6 view .LVU55
 268 00c4 FFF7FEFF 		bl	assert_param
 269              	.LVL16:
 167:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_SCAN_DIRECTION(ADC_InitStruct->ADC_ScanDirection)); 
 270              		.loc 1 167 3 is_stmt 1 discriminator 6 view .LVU56
 271              		.loc 1 167 16 is_stmt 0 discriminator 6 view .LVU57
 272 00c8 6369     		ldr	r3, [r4, #20]
 273              		.loc 1 167 3 discriminator 6 view .LVU58
 274 00ca 002B     		cmp	r3, #0
 275 00cc 05D0     		beq	.L27
 276              		.loc 1 167 3 discriminator 2 view .LVU59
 277 00ce 042B     		cmp	r3, #4
 278 00d0 01D0     		beq	.L33
 279              		.loc 1 167 3 view .LVU60
 280 00d2 0020     		movs	r0, #0
 281 00d4 02E0     		b	.L11
 282              	.L33:
 283 00d6 0120     		movs	r0, #1
 284 00d8 00E0     		b	.L11
 285              	.L27:
 286 00da 0120     		movs	r0, #1
ARM GAS  /tmp/ccBloFiL.s 			page 9


 287              	.L11:
 288              		.loc 1 167 3 discriminator 6 view .LVU61
 289 00dc FFF7FEFF 		bl	assert_param
 290              	.LVL17:
 168:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 169:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Get the ADCx CFGR value */
 170:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg = ADCx->CFGR1;
 291              		.loc 1 170 3 is_stmt 1 discriminator 6 view .LVU62
 292              		.loc 1 170 10 is_stmt 0 discriminator 6 view .LVU63
 293 00e0 EB68     		ldr	r3, [r5, #12]
 294              	.LVL18:
 171:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 172:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Clear SCANDIR, RES[1:0], ALIGN, EXTSEL[2:0], EXTEN[1:0] and CONT bits */
 173:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg &= CFGR1_CLEAR_MASK;
 295              		.loc 1 173 3 is_stmt 1 discriminator 6 view .LVU64
 296              		.loc 1 173 10 is_stmt 0 discriminator 6 view .LVU65
 297 00e2 094A     		ldr	r2, .L34+4
 298 00e4 1A40     		ands	r2, r3
 299              	.LVL19:
 174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 175:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /*---------------------------- ADCx CFGR Configuration ---------------------*/
 176:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 177:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set RES[1:0] bits according to ADC_Resolution value */
 178:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 179:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set EXTEN[1:0] bits according to ADC_ExternalTrigConvEdge value */
 180:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set EXTSEL[2:0] bits according to ADC_ExternalTrigConv value */
 181:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 182:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set SCANDIR bit according to ADC_ScanDirection value */
 183:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  
 184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg  |= (uint32_t)(ADC_InitStruct->ADC_Resolution | ((uint32_t)(ADC_InitStruct->ADC_Continuous
 300              		.loc 1 184 3 is_stmt 1 discriminator 6 view .LVU66
 301              		.loc 1 184 84 is_stmt 0 discriminator 6 view .LVU67
 302 00e6 2379     		ldrb	r3, [r4, #4]
 303              		.loc 1 184 110 discriminator 6 view .LVU68
 304 00e8 5B03     		lsls	r3, r3, #13
 305              		.loc 1 184 56 discriminator 6 view .LVU69
 306 00ea 2168     		ldr	r1, [r4]
 307 00ec 0B43     		orrs	r3, r1
 308              		.loc 1 184 117 discriminator 6 view .LVU70
 309 00ee A168     		ldr	r1, [r4, #8]
 310 00f0 0B43     		orrs	r3, r1
 185:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_InitStruct->ADC_ExternalTrigConvEdge | ADC_InitStruct->ADC_ExternalTrigConv |
 311              		.loc 1 185 55 discriminator 6 view .LVU71
 312 00f2 E168     		ldr	r1, [r4, #12]
 313 00f4 0B43     		orrs	r3, r1
 314              		.loc 1 185 94 discriminator 6 view .LVU72
 315 00f6 2169     		ldr	r1, [r4, #16]
 316 00f8 0B43     		orrs	r3, r1
 186:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_InitStruct->ADC_DataAlign | ADC_InitStruct->ADC_ScanDirection);
 317              		.loc 1 186 60 discriminator 6 view .LVU73
 318 00fa 6169     		ldr	r1, [r4, #20]
 184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_InitStruct->ADC_ExternalTrigConvEdge | ADC_InitStruct->ADC_ExternalTrigConv |
 319              		.loc 1 184 14 discriminator 6 view .LVU74
 320 00fc 0B43     		orrs	r3, r1
 184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_InitStruct->ADC_ExternalTrigConvEdge | ADC_InitStruct->ADC_ExternalTrigConv |
 321              		.loc 1 184 11 discriminator 6 view .LVU75
 322 00fe 1343     		orrs	r3, r2
ARM GAS  /tmp/ccBloFiL.s 			page 10


 323              	.LVL20:
 187:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 188:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Write to ADCx CFGR */
 189:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CFGR1 = tmpreg;
 324              		.loc 1 189 3 is_stmt 1 discriminator 6 view .LVU76
 325              		.loc 1 189 15 is_stmt 0 discriminator 6 view .LVU77
 326 0100 EB60     		str	r3, [r5, #12]
 190:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 327              		.loc 1 190 1 discriminator 6 view .LVU78
 328              		@ sp needed
 329              	.LVL21:
 330              	.LVL22:
 331              		.loc 1 190 1 discriminator 6 view .LVU79
 332 0102 70BD     		pop	{r4, r5, r6, pc}
 333              	.L35:
 334              		.align	2
 335              	.L34:
 336 0104 00DCFEBF 		.word	-1073816576
 337 0108 03D2FFFF 		.word	-11773
 338              		.cfi_endproc
 339              	.LFE33:
 341              		.section	.text.ADC_StructInit,"ax",%progbits
 342              		.align	1
 343              		.global	ADC_StructInit
 344              		.syntax unified
 345              		.code	16
 346              		.thumb_func
 347              		.fpu softvfp
 349              	ADC_StructInit:
 350              	.LVL23:
 351              	.LFB34:
 191:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 192:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 193:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 194:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 195:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         Resolution, Data Alignment, continuous mode activation, External 
 196:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         trigger source and edge, Sequence Scan Direction).
 197:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 198:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         be initialized.
 199:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 200:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 201:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 202:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 352              		.loc 1 202 1 is_stmt 1 view -0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 203:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Reset ADC init structure parameters values */
 204:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Initialize the ADC_Resolution member */
 205:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 357              		.loc 1 205 3 view .LVU81
 358              		.loc 1 205 34 is_stmt 0 view .LVU82
 359 0000 0023     		movs	r3, #0
 360 0002 0360     		str	r3, [r0]
 206:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 207:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****    /* Initialize the ADC_ContinuousConvMode member */
ARM GAS  /tmp/ccBloFiL.s 			page 11


 208:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 361              		.loc 1 208 3 is_stmt 1 view .LVU83
 362              		.loc 1 208 42 is_stmt 0 view .LVU84
 363 0004 0371     		strb	r3, [r0, #4]
 209:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 210:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 211:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 364              		.loc 1 211 3 is_stmt 1 view .LVU85
 365              		.loc 1 211 44 is_stmt 0 view .LVU86
 366 0006 8360     		str	r3, [r0, #8]
 212:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 213:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 214:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_TRGO;
 367              		.loc 1 214 3 is_stmt 1 view .LVU87
 368              		.loc 1 214 40 is_stmt 0 view .LVU88
 369 0008 C360     		str	r3, [r0, #12]
 215:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 216:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 217:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 370              		.loc 1 217 3 is_stmt 1 view .LVU89
 371              		.loc 1 217 33 is_stmt 0 view .LVU90
 372 000a 0361     		str	r3, [r0, #16]
 218:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 219:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Initialize the ADC_ScanDirection member */
 220:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADC_InitStruct->ADC_ScanDirection = ADC_ScanDirection_Upward;
 373              		.loc 1 220 3 is_stmt 1 view .LVU91
 374              		.loc 1 220 37 is_stmt 0 view .LVU92
 375 000c 4361     		str	r3, [r0, #20]
 221:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 376              		.loc 1 221 1 view .LVU93
 377              		@ sp needed
 378 000e 7047     		bx	lr
 379              		.cfi_endproc
 380              	.LFE34:
 382              		.section	.text.ADC_Cmd,"ax",%progbits
 383              		.align	1
 384              		.global	ADC_Cmd
 385              		.syntax unified
 386              		.code	16
 387              		.thumb_func
 388              		.fpu softvfp
 390              	ADC_Cmd:
 391              	.LVL24:
 392              	.LFB35:
 222:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 223:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 224:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 225:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 226:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 227:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 228:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 229:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 230:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 231:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 393              		.loc 1 231 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccBloFiL.s 			page 12


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              		.loc 1 231 1 is_stmt 0 view .LVU95
 398 0000 70B5     		push	{r4, r5, r6, lr}
 399              	.LCFI2:
 400              		.cfi_def_cfa_offset 16
 401              		.cfi_offset 4, -16
 402              		.cfi_offset 5, -12
 403              		.cfi_offset 6, -8
 404              		.cfi_offset 14, -4
 405 0002 0400     		movs	r4, r0
 406 0004 0D00     		movs	r5, r1
 232:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 233:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 407              		.loc 1 233 3 is_stmt 1 view .LVU96
 408 0006 0C4B     		ldr	r3, .L40
 409 0008 C018     		adds	r0, r0, r3
 410              	.LVL25:
 411              		.loc 1 233 3 is_stmt 0 view .LVU97
 412 000a 4342     		rsbs	r3, r0, #0
 413 000c 5841     		adcs	r0, r0, r3
 414 000e FFF7FEFF 		bl	assert_param
 415              	.LVL26:
 234:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 416              		.loc 1 234 3 is_stmt 1 view .LVU98
 417 0012 0020     		movs	r0, #0
 418 0014 0123     		movs	r3, #1
 419 0016 AB42     		cmp	r3, r5
 420 0018 4041     		adcs	r0, r0, r0
 421 001a FFF7FEFF 		bl	assert_param
 422              	.LVL27:
 235:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 236:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 423              		.loc 1 236 3 view .LVU99
 424              		.loc 1 236 6 is_stmt 0 view .LVU100
 425 001e 002D     		cmp	r5, #0
 426 0020 04D0     		beq	.L38
 237:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 238:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Set the ADEN bit to Enable the ADC peripheral */
 239:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CR |= (uint32_t)ADC_CR_ADEN;
 427              		.loc 1 239 5 is_stmt 1 view .LVU101
 428              		.loc 1 239 14 is_stmt 0 view .LVU102
 429 0022 A368     		ldr	r3, [r4, #8]
 430 0024 0122     		movs	r2, #1
 431 0026 1343     		orrs	r3, r2
 432 0028 A360     		str	r3, [r4, #8]
 433              	.L37:
 240:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 241:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 242:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 243:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Set the ADDIS to Disable the ADC peripheral */
 244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CR |= (uint32_t)ADC_CR_ADDIS;
 245:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 246:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 434              		.loc 1 246 1 view .LVU103
 435              		@ sp needed
 436              	.LVL28:
 437              		.loc 1 246 1 view .LVU104
ARM GAS  /tmp/ccBloFiL.s 			page 13


 438 002a 70BD     		pop	{r4, r5, r6, pc}
 439              	.LVL29:
 440              	.L38:
 244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 441              		.loc 1 244 5 is_stmt 1 view .LVU105
 244:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 442              		.loc 1 244 14 is_stmt 0 view .LVU106
 443 002c A368     		ldr	r3, [r4, #8]
 444 002e 0222     		movs	r2, #2
 445 0030 1343     		orrs	r3, r2
 446 0032 A360     		str	r3, [r4, #8]
 447              		.loc 1 246 1 view .LVU107
 448 0034 F9E7     		b	.L37
 449              	.L41:
 450 0036 C046     		.align	2
 451              	.L40:
 452 0038 00DCFEBF 		.word	-1073816576
 453              		.cfi_endproc
 454              	.LFE35:
 456              		.section	.text.ADC_JitterCmd,"ax",%progbits
 457              		.align	1
 458              		.global	ADC_JitterCmd
 459              		.syntax unified
 460              		.code	16
 461              		.thumb_func
 462              		.fpu softvfp
 464              	ADC_JitterCmd:
 465              	.LVL30:
 466              	.LFB36:
 247:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 248:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 249:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the jitter when the ADC is clocked by PCLK div2
 250:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         or div4
 251:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 252:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_JitterOff: This parameter can be :
 253:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_JitterOff_PCLKDiv2: Remove jitter when ADC is clocked by PLCK divided by 2
 254:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_JitterOff_PCLKDiv4: Remove jitter when ADC is clocked by PLCK divided by 4
 255:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx jitter. 
 256:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 257:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 258:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 259:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_JitterCmd(ADC_TypeDef* ADCx, uint32_t ADC_JitterOff, FunctionalState NewState)
 260:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 467              		.loc 1 260 1 is_stmt 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		.loc 1 260 1 is_stmt 0 view .LVU109
 472 0000 70B5     		push	{r4, r5, r6, lr}
 473              	.LCFI3:
 474              		.cfi_def_cfa_offset 16
 475              		.cfi_offset 4, -16
 476              		.cfi_offset 5, -12
 477              		.cfi_offset 6, -8
 478              		.cfi_offset 14, -4
 479 0002 0400     		movs	r4, r0
 480 0004 0D00     		movs	r5, r1
ARM GAS  /tmp/ccBloFiL.s 			page 14


 481 0006 1600     		movs	r6, r2
 261:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 262:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 482              		.loc 1 262 3 is_stmt 1 view .LVU110
 483 0008 0D4B     		ldr	r3, .L45
 484 000a C018     		adds	r0, r0, r3
 485              	.LVL31:
 486              		.loc 1 262 3 is_stmt 0 view .LVU111
 487 000c 4342     		rsbs	r3, r0, #0
 488 000e 5841     		adcs	r0, r0, r3
 489 0010 FFF7FEFF 		bl	assert_param
 490              	.LVL32:
 263:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_JITTEROFF(ADC_JitterOff));
 491              		.loc 1 263 3 is_stmt 1 view .LVU112
 492              		.loc 1 263 16 is_stmt 0 view .LVU113
 493 0014 A800     		lsls	r0, r5, #2
 494              		.loc 1 263 3 view .LVU114
 495 0016 4342     		rsbs	r3, r0, #0
 496 0018 5841     		adcs	r0, r0, r3
 497 001a FFF7FEFF 		bl	assert_param
 498              	.LVL33:
 264:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 499              		.loc 1 264 3 is_stmt 1 view .LVU115
 500 001e 0020     		movs	r0, #0
 501 0020 0123     		movs	r3, #1
 502 0022 B342     		cmp	r3, r6
 503 0024 4041     		adcs	r0, r0, r0
 504 0026 FFF7FEFF 		bl	assert_param
 505              	.LVL34:
 265:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 266:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 506              		.loc 1 266 3 view .LVU116
 507              		.loc 1 266 6 is_stmt 0 view .LVU117
 508 002a 002E     		cmp	r6, #0
 509 002c 03D0     		beq	.L43
 267:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 268:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable Jitter */
 269:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR2 |= (uint32_t)ADC_JitterOff;
 510              		.loc 1 269 5 is_stmt 1 view .LVU118
 511              		.loc 1 269 17 is_stmt 0 view .LVU119
 512 002e 2169     		ldr	r1, [r4, #16]
 513 0030 0D43     		orrs	r5, r1
 514              	.LVL35:
 515              		.loc 1 269 17 view .LVU120
 516 0032 2561     		str	r5, [r4, #16]
 517              	.L42:
 270:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 271:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 272:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 273:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable Jitter */
 274:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR2 &= (uint32_t)(~ADC_JitterOff);
 275:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 276:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 518              		.loc 1 276 1 view .LVU121
 519              		@ sp needed
 520              	.LVL36:
 521              		.loc 1 276 1 view .LVU122
ARM GAS  /tmp/ccBloFiL.s 			page 15


 522 0034 70BD     		pop	{r4, r5, r6, pc}
 523              	.LVL37:
 524              	.L43:
 274:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 525              		.loc 1 274 5 is_stmt 1 view .LVU123
 274:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 526              		.loc 1 274 17 is_stmt 0 view .LVU124
 527 0036 2369     		ldr	r3, [r4, #16]
 528 0038 AB43     		bics	r3, r5
 529 003a 2361     		str	r3, [r4, #16]
 530              		.loc 1 276 1 view .LVU125
 531 003c FAE7     		b	.L42
 532              	.L46:
 533 003e C046     		.align	2
 534              	.L45:
 535 0040 00DCFEBF 		.word	-1073816576
 536              		.cfi_endproc
 537              	.LFE36:
 539              		.section	.text.ADC_AutoPowerOffCmd,"ax",%progbits
 540              		.align	1
 541              		.global	ADC_AutoPowerOffCmd
 542              		.syntax unified
 543              		.code	16
 544              		.thumb_func
 545              		.fpu softvfp
 547              	ADC_AutoPowerOffCmd:
 548              	.LVL38:
 549              	.LFB37:
 277:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 278:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 279:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 280:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 281:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 282:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group2 Power saving functions
 283:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Power saving functions 
 284:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 285:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 286:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 287:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****           ##### Power saving functions #####
 288:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 289:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to reduce power consumption.
 290:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] The two function must be combined to get the maximal benefits:
 291:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          When the ADC frequency is higher than the CPU one, it is recommended to 
 292:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Enable the Auto Delayed Conversion mode : 
 293:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ==> using ADC_WaitModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
 294:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Enable the power off in Delay phases :
 295:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ==> using ADC_AutoPowerOffCmd(ADC_TypeDef* ADCx, FunctionalState NewState);
 296:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 297:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 298:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 299:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 300:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 301:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 302:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the ADC Power Off.
 303:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   ADC power-on and power-off can be managed by hardware to cut the 
 304:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         consumption when the ADC is not converting. 
 305:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
ARM GAS  /tmp/ccBloFiL.s 			page 16


 306:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   The ADC can be powered down: 
 307:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         - During the Auto delay phase 
 308:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           => The ADC is powered on again at the end of the delay (until the 
 309:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *              previous data is read from the ADC data register). 
 310:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         - During the ADC is waiting for a trigger event 
 311:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           => The ADC is powered up at the next trigger event (when the 
 312:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *              conversion is started).
 313:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx power Off. 
 314:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 315:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 316:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 317:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_AutoPowerOffCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 318:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 550              		.loc 1 318 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		.loc 1 318 1 is_stmt 0 view .LVU127
 555 0000 70B5     		push	{r4, r5, r6, lr}
 556              	.LCFI4:
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 4, -16
 559              		.cfi_offset 5, -12
 560              		.cfi_offset 6, -8
 561              		.cfi_offset 14, -4
 562 0002 0400     		movs	r4, r0
 563 0004 0D00     		movs	r5, r1
 319:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 320:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 564              		.loc 1 320 3 is_stmt 1 view .LVU128
 565 0006 0C4B     		ldr	r3, .L50
 566 0008 C018     		adds	r0, r0, r3
 567              	.LVL39:
 568              		.loc 1 320 3 is_stmt 0 view .LVU129
 569 000a 4342     		rsbs	r3, r0, #0
 570 000c 5841     		adcs	r0, r0, r3
 571 000e FFF7FEFF 		bl	assert_param
 572              	.LVL40:
 321:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 573              		.loc 1 321 3 is_stmt 1 view .LVU130
 574 0012 0020     		movs	r0, #0
 575 0014 0123     		movs	r3, #1
 576 0016 AB42     		cmp	r3, r5
 577 0018 4041     		adcs	r0, r0, r0
 578 001a FFF7FEFF 		bl	assert_param
 579              	.LVL41:
 322:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 323:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 580              		.loc 1 323 3 view .LVU131
 581              		.loc 1 323 6 is_stmt 0 view .LVU132
 582 001e 002D     		cmp	r5, #0
 583 0020 05D0     		beq	.L48
 324:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 325:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the ADC Automatic Power-Off */
 326:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= ADC_CFGR1_AUTOFF;
 584              		.loc 1 326 5 is_stmt 1 view .LVU133
 585              		.loc 1 326 17 is_stmt 0 view .LVU134
ARM GAS  /tmp/ccBloFiL.s 			page 17


 586 0022 E268     		ldr	r2, [r4, #12]
 587 0024 8023     		movs	r3, #128
 588 0026 1B02     		lsls	r3, r3, #8
 589 0028 1343     		orrs	r3, r2
 590 002a E360     		str	r3, [r4, #12]
 591              	.L47:
 327:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 328:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 329:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 330:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the ADC Automatic Power-Off */
 331:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)~ADC_CFGR1_AUTOFF;
 332:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 333:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 592              		.loc 1 333 1 view .LVU135
 593              		@ sp needed
 594              	.LVL42:
 595              		.loc 1 333 1 view .LVU136
 596 002c 70BD     		pop	{r4, r5, r6, pc}
 597              	.LVL43:
 598              	.L48:
 331:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 599              		.loc 1 331 5 is_stmt 1 view .LVU137
 331:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 600              		.loc 1 331 17 is_stmt 0 view .LVU138
 601 002e E368     		ldr	r3, [r4, #12]
 602 0030 024A     		ldr	r2, .L50+4
 603 0032 1340     		ands	r3, r2
 604 0034 E360     		str	r3, [r4, #12]
 605              		.loc 1 333 1 view .LVU139
 606 0036 F9E7     		b	.L47
 607              	.L51:
 608              		.align	2
 609              	.L50:
 610 0038 00DCFEBF 		.word	-1073816576
 611 003c FF7FFFFF 		.word	-32769
 612              		.cfi_endproc
 613              	.LFE37:
 615              		.section	.text.ADC_WaitModeCmd,"ax",%progbits
 616              		.align	1
 617              		.global	ADC_WaitModeCmd
 618              		.syntax unified
 619              		.code	16
 620              		.thumb_func
 621              		.fpu softvfp
 623              	ADC_WaitModeCmd:
 624              	.LVL44:
 625              	.LFB38:
 334:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 335:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 336:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the Wait conversion mode.
 337:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   When the CPU clock is not fast enough to manage the data rate, a 
 338:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         Hardware delay can be introduced between ADC conversions to reduce 
 339:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         this data rate. 
 340:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   The Hardware delay is inserted after :
 341:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         - after each conversions and until the previous data is read from the 
 342:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *           ADC data register
 343:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   This is a way to automatically adapt the speed of the ADC to the speed 
ARM GAS  /tmp/ccBloFiL.s 			page 18


 344:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         of the system which will read the data.
 345:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   Any hardware triggers wich occur while a conversion is on going or 
 346:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         while the automatic Delay is applied are ignored 
 347:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 348:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx Auto-Delay.
 349:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 350:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 351:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 352:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_WaitModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 353:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 626              		.loc 1 353 1 is_stmt 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		.loc 1 353 1 is_stmt 0 view .LVU141
 631 0000 70B5     		push	{r4, r5, r6, lr}
 632              	.LCFI5:
 633              		.cfi_def_cfa_offset 16
 634              		.cfi_offset 4, -16
 635              		.cfi_offset 5, -12
 636              		.cfi_offset 6, -8
 637              		.cfi_offset 14, -4
 638 0002 0400     		movs	r4, r0
 639 0004 0D00     		movs	r5, r1
 354:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 355:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 640              		.loc 1 355 3 is_stmt 1 view .LVU142
 641 0006 0C4B     		ldr	r3, .L55
 642 0008 C018     		adds	r0, r0, r3
 643              	.LVL45:
 644              		.loc 1 355 3 is_stmt 0 view .LVU143
 645 000a 4342     		rsbs	r3, r0, #0
 646 000c 5841     		adcs	r0, r0, r3
 647 000e FFF7FEFF 		bl	assert_param
 648              	.LVL46:
 356:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 649              		.loc 1 356 3 is_stmt 1 view .LVU144
 650 0012 0020     		movs	r0, #0
 651 0014 0123     		movs	r3, #1
 652 0016 AB42     		cmp	r3, r5
 653 0018 4041     		adcs	r0, r0, r0
 654 001a FFF7FEFF 		bl	assert_param
 655              	.LVL47:
 357:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 358:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 656              		.loc 1 358 3 view .LVU145
 657              		.loc 1 358 6 is_stmt 0 view .LVU146
 658 001e 002D     		cmp	r5, #0
 659 0020 05D0     		beq	.L53
 359:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 360:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the ADC Automatic Delayed conversion */
 361:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= ADC_CFGR1_WAIT;
 660              		.loc 1 361 5 is_stmt 1 view .LVU147
 661              		.loc 1 361 17 is_stmt 0 view .LVU148
 662 0022 E268     		ldr	r2, [r4, #12]
 663 0024 8023     		movs	r3, #128
 664 0026 DB01     		lsls	r3, r3, #7
ARM GAS  /tmp/ccBloFiL.s 			page 19


 665 0028 1343     		orrs	r3, r2
 666 002a E360     		str	r3, [r4, #12]
 667              	.L52:
 362:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 363:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 364:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 365:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the ADC Automatic Delayed conversion */
 366:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)~ADC_CFGR1_WAIT;
 367:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 368:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 668              		.loc 1 368 1 view .LVU149
 669              		@ sp needed
 670              	.LVL48:
 671              		.loc 1 368 1 view .LVU150
 672 002c 70BD     		pop	{r4, r5, r6, pc}
 673              	.LVL49:
 674              	.L53:
 366:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 675              		.loc 1 366 5 is_stmt 1 view .LVU151
 366:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 676              		.loc 1 366 17 is_stmt 0 view .LVU152
 677 002e E368     		ldr	r3, [r4, #12]
 678 0030 024A     		ldr	r2, .L55+4
 679 0032 1340     		ands	r3, r2
 680 0034 E360     		str	r3, [r4, #12]
 681              		.loc 1 368 1 view .LVU153
 682 0036 F9E7     		b	.L52
 683              	.L56:
 684              		.align	2
 685              	.L55:
 686 0038 00DCFEBF 		.word	-1073816576
 687 003c FFBFFFFF 		.word	-16385
 688              		.cfi_endproc
 689              	.LFE38:
 691              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 692              		.align	1
 693              		.global	ADC_AnalogWatchdogCmd
 694              		.syntax unified
 695              		.code	16
 696              		.thumb_func
 697              		.fpu softvfp
 699              	ADC_AnalogWatchdogCmd:
 700              	.LVL50:
 701              	.LFB39:
 369:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 370:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 371:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 372:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 373:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 374:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group3 Analog Watchdog configuration functions
 375:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Analog Watchdog configuration functions 
 376:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 377:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 378:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 379:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                    ##### Analog Watchdog configuration functions #####
 380:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================  
 381:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to configure the Analog Watchdog
ARM GAS  /tmp/ccBloFiL.s 			page 20


 382:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (AWD) feature in the ADC.
 383:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] A typical configuration Analog Watchdog is done following these steps :
 384:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) the ADC guarded channel(s) is (are) selected using the 
 385:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_AnalogWatchdogSingleChannelConfig() function.
 386:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) The Analog watchdog lower and higher threshold are configured using the  
 387:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_AnalogWatchdogThresholdsConfig() function.
 388:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) The Analog watchdog is enabled and configured to enable the check, on one
 389:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              or more channels, using the  ADC_AnalogWatchdogCmd() function.
 390:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Enable the analog watchdog on the selected channel using
 391:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC_AnalogWatchdogSingleChannelCmd() function
 392:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 393:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 394:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 395:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 396:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 397:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 398:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the analog watchdog 
 399:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 400:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx Analog Watchdog.
 401:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 402:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 403:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 404:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 405:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 702              		.loc 1 405 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		.loc 1 405 1 is_stmt 0 view .LVU155
 707 0000 70B5     		push	{r4, r5, r6, lr}
 708              	.LCFI6:
 709              		.cfi_def_cfa_offset 16
 710              		.cfi_offset 4, -16
 711              		.cfi_offset 5, -12
 712              		.cfi_offset 6, -8
 713              		.cfi_offset 14, -4
 714 0002 0400     		movs	r4, r0
 715 0004 0D00     		movs	r5, r1
 406:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 407:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 716              		.loc 1 407 3 is_stmt 1 view .LVU156
 717 0006 0C4B     		ldr	r3, .L60
 718 0008 C018     		adds	r0, r0, r3
 719              	.LVL51:
 720              		.loc 1 407 3 is_stmt 0 view .LVU157
 721 000a 4342     		rsbs	r3, r0, #0
 722 000c 5841     		adcs	r0, r0, r3
 723 000e FFF7FEFF 		bl	assert_param
 724              	.LVL52:
 408:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 725              		.loc 1 408 3 is_stmt 1 view .LVU158
 726 0012 0020     		movs	r0, #0
 727 0014 0123     		movs	r3, #1
 728 0016 AB42     		cmp	r3, r5
 729 0018 4041     		adcs	r0, r0, r0
 730 001a FFF7FEFF 		bl	assert_param
 731              	.LVL53:
ARM GAS  /tmp/ccBloFiL.s 			page 21


 409:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 410:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 732              		.loc 1 410 3 view .LVU159
 733              		.loc 1 410 6 is_stmt 0 view .LVU160
 734 001e 002D     		cmp	r5, #0
 735 0020 05D0     		beq	.L58
 411:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 412:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the ADC Analog Watchdog */
 413:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= ADC_CFGR1_AWDEN;
 736              		.loc 1 413 5 is_stmt 1 view .LVU161
 737              		.loc 1 413 17 is_stmt 0 view .LVU162
 738 0022 E268     		ldr	r2, [r4, #12]
 739 0024 8023     		movs	r3, #128
 740 0026 1B04     		lsls	r3, r3, #16
 741 0028 1343     		orrs	r3, r2
 742 002a E360     		str	r3, [r4, #12]
 743              	.L57:
 414:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 415:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 416:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 417:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the ADC Analog Watchdog */
 418:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)~ADC_CFGR1_AWDEN;
 419:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 420:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 744              		.loc 1 420 1 view .LVU163
 745              		@ sp needed
 746              	.LVL54:
 747              		.loc 1 420 1 view .LVU164
 748 002c 70BD     		pop	{r4, r5, r6, pc}
 749              	.LVL55:
 750              	.L58:
 418:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 751              		.loc 1 418 5 is_stmt 1 view .LVU165
 418:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 752              		.loc 1 418 17 is_stmt 0 view .LVU166
 753 002e E368     		ldr	r3, [r4, #12]
 754 0030 024A     		ldr	r2, .L60+4
 755 0032 1340     		ands	r3, r2
 756 0034 E360     		str	r3, [r4, #12]
 757              		.loc 1 420 1 view .LVU167
 758 0036 F9E7     		b	.L57
 759              	.L61:
 760              		.align	2
 761              	.L60:
 762 0038 00DCFEBF 		.word	-1073816576
 763 003c FFFF7FFF 		.word	-8388609
 764              		.cfi_endproc
 765              	.LFE39:
 767              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 768              		.align	1
 769              		.global	ADC_AnalogWatchdogThresholdsConfig
 770              		.syntax unified
 771              		.code	16
 772              		.thumb_func
 773              		.fpu softvfp
 775              	ADC_AnalogWatchdogThresholdsConfig:
 776              	.LVL56:
ARM GAS  /tmp/ccBloFiL.s 			page 22


 777              	.LFB40:
 421:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 422:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 423:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog. 
 424:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 425:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 426:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter must be a 12bit value.
 427:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  LowThreshold: the ADC analog watchdog Low threshold value.
 428:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter must be a 12bit value.
 429:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 430:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 431:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 432:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                                         uint16_t LowThreshold)
 433:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 778              		.loc 1 433 1 is_stmt 1 view -0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		.loc 1 433 1 is_stmt 0 view .LVU169
 783 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 784              	.LCFI7:
 785              		.cfi_def_cfa_offset 24
 786              		.cfi_offset 3, -24
 787              		.cfi_offset 4, -20
 788              		.cfi_offset 5, -16
 789              		.cfi_offset 6, -12
 790              		.cfi_offset 7, -8
 791              		.cfi_offset 14, -4
 792 0002 0700     		movs	r7, r0
 793 0004 0D00     		movs	r5, r1
 794 0006 1400     		movs	r4, r2
 434:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 435:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 795              		.loc 1 435 3 is_stmt 1 view .LVU170
 796 0008 0A4B     		ldr	r3, .L63
 797 000a C018     		adds	r0, r0, r3
 798              	.LVL57:
 799              		.loc 1 435 3 is_stmt 0 view .LVU171
 800 000c 4342     		rsbs	r3, r0, #0
 801 000e 5841     		adcs	r0, r0, r3
 802 0010 FFF7FEFF 		bl	assert_param
 803              	.LVL58:
 436:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 804              		.loc 1 436 3 is_stmt 1 view .LVU172
 805 0014 8026     		movs	r6, #128
 806 0016 7601     		lsls	r6, r6, #5
 807 0018 B542     		cmp	r5, r6
 808 001a 8041     		sbcs	r0, r0, r0
 809 001c 4042     		rsbs	r0, r0, #0
 810 001e FFF7FEFF 		bl	assert_param
 811              	.LVL59:
 437:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 812              		.loc 1 437 3 view .LVU173
 813 0022 B442     		cmp	r4, r6
 814 0024 B641     		sbcs	r6, r6, r6
 815 0026 7042     		rsbs	r0, r6, #0
 816 0028 FFF7FEFF 		bl	assert_param
ARM GAS  /tmp/ccBloFiL.s 			page 23


 817              	.LVL60:
 438:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 439:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set the ADCx high and low threshold */
 440:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->TR = LowThreshold | ((uint32_t)HighThreshold << 16);
 818              		.loc 1 440 3 view .LVU174
 819              		.loc 1 440 54 is_stmt 0 view .LVU175
 820 002c 2D04     		lsls	r5, r5, #16
 821              		.loc 1 440 27 view .LVU176
 822 002e 2C43     		orrs	r4, r5
 823              		.loc 1 440 12 view .LVU177
 824 0030 3C62     		str	r4, [r7, #32]
 441:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 442:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 825              		.loc 1 442 1 view .LVU178
 826              		@ sp needed
 827              	.LVL61:
 828              		.loc 1 442 1 view .LVU179
 829 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 830              	.L64:
 831              		.align	2
 832              	.L63:
 833 0034 00DCFEBF 		.word	-1073816576
 834              		.cfi_endproc
 835              	.LFE40:
 837              		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 838              		.align	1
 839              		.global	ADC_AnalogWatchdogSingleChannelConfig
 840              		.syntax unified
 841              		.code	16
 842              		.thumb_func
 843              		.fpu softvfp
 845              	ADC_AnalogWatchdogSingleChannelConfig:
 846              	.LVL62:
 847              	.LFB41:
 443:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 444:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 445:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 446:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 447:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_AnalogWatchdog_Channel: the ADC channel to configure for the analog watchdog.
 448:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
 449:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_0: ADC Channel0 selected
 450:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_1: ADC Channel1 selected
 451:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_2: ADC Channel2 selected
 452:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_3: ADC Channel3 selected
 453:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_4: ADC Channel4 selected
 454:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_5: ADC Channel5 selected
 455:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_6: ADC Channel6 selected
 456:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_7: ADC Channel7 selected
 457:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_8: ADC Channel8 selected
 458:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_9: ADC Channel9 selected
 459:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_10: ADC Channel10 selected
 460:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_11: ADC Channel11 selected
 461:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_12: ADC Channel12 selected
 462:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_13: ADC Channel13 selected
 463:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_14: ADC Channel14 selected
 464:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_15: ADC Channel15 selected
 465:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_16: ADC Channel16 selected
ARM GAS  /tmp/ccBloFiL.s 			page 24


 466:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_17: ADC Channel17 selected
 467:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_AnalogWatchdog_Channel_18: ADC Channel18 selected
 468:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   The channel selected on the AWDCH must be also set into the CHSELR 
 469:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         register 
 470:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 471:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 472:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog_Channel)
 473:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 848              		.loc 1 473 1 is_stmt 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		.loc 1 473 1 is_stmt 0 view .LVU181
 853 0000 70B5     		push	{r4, r5, r6, lr}
 854              	.LCFI8:
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 4, -16
 857              		.cfi_offset 5, -12
 858              		.cfi_offset 6, -8
 859              		.cfi_offset 14, -4
 860 0002 0500     		movs	r5, r0
 861 0004 0C00     		movs	r4, r1
 474:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t tmpreg = 0;
 862              		.loc 1 474 3 is_stmt 1 view .LVU182
 863              	.LVL63:
 475:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 476:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 477:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 864              		.loc 1 477 3 view .LVU183
 865 0006 3F4B     		ldr	r3, .L87
 866 0008 C018     		adds	r0, r0, r3
 867              	.LVL64:
 868              		.loc 1 477 3 is_stmt 0 view .LVU184
 869 000a 4342     		rsbs	r3, r0, #0
 870 000c 5841     		adcs	r0, r0, r3
 871 000e FFF7FEFF 		bl	assert_param
 872              	.LVL65:
 478:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_CHANNEL(ADC_AnalogWatchdog_Channel));
 873              		.loc 1 478 3 is_stmt 1 view .LVU185
 874 0012 002C     		cmp	r4, #0
 875 0014 4BD0     		beq	.L67
 876              		.loc 1 478 16 is_stmt 0 discriminator 2 view .LVU186
 877 0016 8023     		movs	r3, #128
 878 0018 DB04     		lsls	r3, r3, #19
 879 001a 9C42     		cmp	r4, r3
 880 001c 50D0     		beq	.L68
 881              		.loc 1 478 16 discriminator 4 view .LVU187
 882 001e 8023     		movs	r3, #128
 883 0020 1B05     		lsls	r3, r3, #20
 884 0022 9C42     		cmp	r4, r3
 885 0024 4ED0     		beq	.L69
 886              		.loc 1 478 16 discriminator 6 view .LVU188
 887 0026 C023     		movs	r3, #192
 888 0028 1B05     		lsls	r3, r3, #20
 889 002a 9C42     		cmp	r4, r3
 890 002c 4CD0     		beq	.L70
 891              		.loc 1 478 16 discriminator 8 view .LVU189
ARM GAS  /tmp/ccBloFiL.s 			page 25


 892 002e 8023     		movs	r3, #128
 893 0030 5B05     		lsls	r3, r3, #21
 894 0032 9C42     		cmp	r4, r3
 895 0034 4AD0     		beq	.L71
 896              		.loc 1 478 16 discriminator 10 view .LVU190
 897 0036 A023     		movs	r3, #160
 898 0038 5B05     		lsls	r3, r3, #21
 899 003a 9C42     		cmp	r4, r3
 900 003c 48D0     		beq	.L72
 901              		.loc 1 478 16 discriminator 12 view .LVU191
 902 003e C023     		movs	r3, #192
 903 0040 5B05     		lsls	r3, r3, #21
 904 0042 9C42     		cmp	r4, r3
 905 0044 46D0     		beq	.L73
 906              		.loc 1 478 16 discriminator 14 view .LVU192
 907 0046 E023     		movs	r3, #224
 908 0048 5B05     		lsls	r3, r3, #21
 909 004a 9C42     		cmp	r4, r3
 910 004c 44D0     		beq	.L74
 911              		.loc 1 478 16 discriminator 16 view .LVU193
 912 004e 8023     		movs	r3, #128
 913 0050 9B05     		lsls	r3, r3, #22
 914 0052 9C42     		cmp	r4, r3
 915 0054 42D0     		beq	.L75
 916              		.loc 1 478 16 discriminator 18 view .LVU194
 917 0056 9023     		movs	r3, #144
 918 0058 9B05     		lsls	r3, r3, #22
 919 005a 9C42     		cmp	r4, r3
 920 005c 40D0     		beq	.L76
 921              		.loc 1 478 16 discriminator 20 view .LVU195
 922 005e A023     		movs	r3, #160
 923 0060 9B05     		lsls	r3, r3, #22
 924 0062 9C42     		cmp	r4, r3
 925 0064 3ED0     		beq	.L77
 926              		.loc 1 478 16 discriminator 22 view .LVU196
 927 0066 B023     		movs	r3, #176
 928 0068 9B05     		lsls	r3, r3, #22
 929 006a 9C42     		cmp	r4, r3
 930 006c 3CD0     		beq	.L78
 931              		.loc 1 478 16 discriminator 24 view .LVU197
 932 006e C023     		movs	r3, #192
 933 0070 9B05     		lsls	r3, r3, #22
 934 0072 9C42     		cmp	r4, r3
 935 0074 3AD0     		beq	.L79
 936              		.loc 1 478 16 discriminator 26 view .LVU198
 937 0076 D023     		movs	r3, #208
 938 0078 9B05     		lsls	r3, r3, #22
 939 007a 9C42     		cmp	r4, r3
 940 007c 38D0     		beq	.L80
 941              		.loc 1 478 16 discriminator 28 view .LVU199
 942 007e E023     		movs	r3, #224
 943 0080 9B05     		lsls	r3, r3, #22
 944 0082 9C42     		cmp	r4, r3
 945 0084 36D0     		beq	.L81
 946              		.loc 1 478 16 discriminator 30 view .LVU200
 947 0086 F023     		movs	r3, #240
 948 0088 9B05     		lsls	r3, r3, #22
ARM GAS  /tmp/ccBloFiL.s 			page 26


 949 008a 9C42     		cmp	r4, r3
 950 008c 34D0     		beq	.L82
 951              		.loc 1 478 16 discriminator 32 view .LVU201
 952 008e 8023     		movs	r3, #128
 953 0090 DB05     		lsls	r3, r3, #23
 954 0092 9C42     		cmp	r4, r3
 955 0094 32D0     		beq	.L83
 956              		.loc 1 478 16 discriminator 34 view .LVU202
 957 0096 8823     		movs	r3, #136
 958 0098 DB05     		lsls	r3, r3, #23
 959 009a 9C42     		cmp	r4, r3
 960 009c 30D0     		beq	.L84
 961              		.loc 1 478 3 discriminator 36 view .LVU203
 962 009e 9023     		movs	r3, #144
 963 00a0 DB05     		lsls	r3, r3, #23
 964 00a2 9C42     		cmp	r4, r3
 965 00a4 01D0     		beq	.L86
 966              		.loc 1 478 3 view .LVU204
 967 00a6 0020     		movs	r0, #0
 968 00a8 02E0     		b	.L66
 969              	.L86:
 970 00aa 0120     		movs	r0, #1
 971 00ac 00E0     		b	.L66
 972              	.L67:
 973 00ae 0120     		movs	r0, #1
 974              	.L66:
 975              		.loc 1 478 3 discriminator 40 view .LVU205
 976 00b0 FFF7FEFF 		bl	assert_param
 977              	.LVL66:
 479:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 480:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Get the old register value */
 481:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg = ADCx->CFGR1;
 978              		.loc 1 481 3 is_stmt 1 discriminator 40 view .LVU206
 979              		.loc 1 481 10 is_stmt 0 discriminator 40 view .LVU207
 980 00b4 E968     		ldr	r1, [r5, #12]
 981              	.LVL67:
 482:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 483:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 484:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg &= ~ADC_CFGR1_AWDCH;
 982              		.loc 1 484 3 is_stmt 1 discriminator 40 view .LVU208
 983              		.loc 1 484 10 is_stmt 0 discriminator 40 view .LVU209
 984 00b6 144B     		ldr	r3, .L87+4
 985 00b8 1940     		ands	r1, r3
 986              	.LVL68:
 485:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 486:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set the Analog watchdog channel */
 487:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog_Channel;
 987              		.loc 1 487 3 is_stmt 1 discriminator 40 view .LVU210
 988              		.loc 1 487 10 is_stmt 0 discriminator 40 view .LVU211
 989 00ba 0C43     		orrs	r4, r1
 990              	.LVL69:
 488:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 489:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Store the new register value */
 490:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CFGR1 = tmpreg;
 991              		.loc 1 490 3 is_stmt 1 discriminator 40 view .LVU212
 992              		.loc 1 490 15 is_stmt 0 discriminator 40 view .LVU213
 993 00bc EC60     		str	r4, [r5, #12]
ARM GAS  /tmp/ccBloFiL.s 			page 27


 491:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 994              		.loc 1 491 1 discriminator 40 view .LVU214
 995              		@ sp needed
 996              	.LVL70:
 997              	.LVL71:
 998              		.loc 1 491 1 discriminator 40 view .LVU215
 999 00be 70BD     		pop	{r4, r5, r6, pc}
 1000              	.LVL72:
 1001              	.L68:
 478:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 1002              		.loc 1 478 3 view .LVU216
 1003 00c0 0120     		movs	r0, #1
 1004 00c2 F5E7     		b	.L66
 1005              	.L69:
 1006 00c4 0120     		movs	r0, #1
 1007 00c6 F3E7     		b	.L66
 1008              	.L70:
 1009 00c8 0120     		movs	r0, #1
 1010 00ca F1E7     		b	.L66
 1011              	.L71:
 1012 00cc 0120     		movs	r0, #1
 1013 00ce EFE7     		b	.L66
 1014              	.L72:
 1015 00d0 0120     		movs	r0, #1
 1016 00d2 EDE7     		b	.L66
 1017              	.L73:
 1018 00d4 0120     		movs	r0, #1
 1019 00d6 EBE7     		b	.L66
 1020              	.L74:
 1021 00d8 0120     		movs	r0, #1
 1022 00da E9E7     		b	.L66
 1023              	.L75:
 1024 00dc 0120     		movs	r0, #1
 1025 00de E7E7     		b	.L66
 1026              	.L76:
 1027 00e0 0120     		movs	r0, #1
 1028 00e2 E5E7     		b	.L66
 1029              	.L77:
 1030 00e4 0120     		movs	r0, #1
 1031 00e6 E3E7     		b	.L66
 1032              	.L78:
 1033 00e8 0120     		movs	r0, #1
 1034 00ea E1E7     		b	.L66
 1035              	.L79:
 1036 00ec 0120     		movs	r0, #1
 1037 00ee DFE7     		b	.L66
 1038              	.L80:
 1039 00f0 0120     		movs	r0, #1
 1040 00f2 DDE7     		b	.L66
 1041              	.L81:
 1042 00f4 0120     		movs	r0, #1
 1043 00f6 DBE7     		b	.L66
 1044              	.L82:
 1045 00f8 0120     		movs	r0, #1
 1046 00fa D9E7     		b	.L66
 1047              	.L83:
 1048 00fc 0120     		movs	r0, #1
ARM GAS  /tmp/ccBloFiL.s 			page 28


 1049 00fe D7E7     		b	.L66
 1050              	.L84:
 1051 0100 0120     		movs	r0, #1
 1052 0102 D5E7     		b	.L66
 1053              	.L88:
 1054              		.align	2
 1055              	.L87:
 1056 0104 00DCFEBF 		.word	-1073816576
 1057 0108 FFFFFF83 		.word	-2080374785
 1058              		.cfi_endproc
 1059              	.LFE41:
 1061              		.section	.text.ADC_AnalogWatchdogSingleChannelCmd,"ax",%progbits
 1062              		.align	1
 1063              		.global	ADC_AnalogWatchdogSingleChannelCmd
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	ADC_AnalogWatchdogSingleChannelCmd:
 1070              	.LVL73:
 1071              	.LFB42:
 492:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 493:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 494:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the ADC Analog Watchdog Single Channel.
 495:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 496:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the ADCx ADC Analog Watchdog Single Channel.
 497:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 498:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 499:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 500:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_AnalogWatchdogSingleChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 501:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1072              		.loc 1 501 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		.loc 1 501 1 is_stmt 0 view .LVU218
 1077 0000 70B5     		push	{r4, r5, r6, lr}
 1078              	.LCFI9:
 1079              		.cfi_def_cfa_offset 16
 1080              		.cfi_offset 4, -16
 1081              		.cfi_offset 5, -12
 1082              		.cfi_offset 6, -8
 1083              		.cfi_offset 14, -4
 1084 0002 0400     		movs	r4, r0
 1085 0004 0D00     		movs	r5, r1
 502:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 503:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1086              		.loc 1 503 3 is_stmt 1 view .LVU219
 1087 0006 0C4B     		ldr	r3, .L92
 1088 0008 C018     		adds	r0, r0, r3
 1089              	.LVL74:
 1090              		.loc 1 503 3 is_stmt 0 view .LVU220
 1091 000a 4342     		rsbs	r3, r0, #0
 1092 000c 5841     		adcs	r0, r0, r3
 1093 000e FFF7FEFF 		bl	assert_param
 1094              	.LVL75:
 504:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
ARM GAS  /tmp/ccBloFiL.s 			page 29


 1095              		.loc 1 504 3 is_stmt 1 view .LVU221
 1096 0012 0020     		movs	r0, #0
 1097 0014 0123     		movs	r3, #1
 1098 0016 AB42     		cmp	r3, r5
 1099 0018 4041     		adcs	r0, r0, r0
 1100 001a FFF7FEFF 		bl	assert_param
 1101              	.LVL76:
 505:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 506:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 1102              		.loc 1 506 3 view .LVU222
 1103              		.loc 1 506 6 is_stmt 0 view .LVU223
 1104 001e 002D     		cmp	r5, #0
 1105 0020 05D0     		beq	.L90
 507:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 508:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the ADC Analog Watchdog Single Channel */
 509:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= ADC_CFGR1_AWDSGL;
 1106              		.loc 1 509 5 is_stmt 1 view .LVU224
 1107              		.loc 1 509 17 is_stmt 0 view .LVU225
 1108 0022 E268     		ldr	r2, [r4, #12]
 1109 0024 8023     		movs	r3, #128
 1110 0026 DB03     		lsls	r3, r3, #15
 1111 0028 1343     		orrs	r3, r2
 1112 002a E360     		str	r3, [r4, #12]
 1113              	.L89:
 510:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 511:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 512:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 513:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the ADC Analog Watchdog Single Channel */
 514:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)~ADC_CFGR1_AWDSGL;
 515:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 516:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1114              		.loc 1 516 1 view .LVU226
 1115              		@ sp needed
 1116              	.LVL77:
 1117              		.loc 1 516 1 view .LVU227
 1118 002c 70BD     		pop	{r4, r5, r6, pc}
 1119              	.LVL78:
 1120              	.L90:
 514:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1121              		.loc 1 514 5 is_stmt 1 view .LVU228
 514:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1122              		.loc 1 514 17 is_stmt 0 view .LVU229
 1123 002e E368     		ldr	r3, [r4, #12]
 1124 0030 024A     		ldr	r2, .L92+4
 1125 0032 1340     		ands	r3, r2
 1126 0034 E360     		str	r3, [r4, #12]
 1127              		.loc 1 516 1 view .LVU230
 1128 0036 F9E7     		b	.L89
 1129              	.L93:
 1130              		.align	2
 1131              	.L92:
 1132 0038 00DCFEBF 		.word	-1073816576
 1133 003c FFFFBFFF 		.word	-4194305
 1134              		.cfi_endproc
 1135              	.LFE42:
 1137              		.section	.text.ADC_TempSensorCmd,"ax",%progbits
 1138              		.align	1
ARM GAS  /tmp/ccBloFiL.s 			page 30


 1139              		.global	ADC_TempSensorCmd
 1140              		.syntax unified
 1141              		.code	16
 1142              		.thumb_func
 1143              		.fpu softvfp
 1145              	ADC_TempSensorCmd:
 1146              	.LVL79:
 1147              	.LFB43:
 517:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 518:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 519:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 520:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 521:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 522:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group4 Temperature Sensor, Vrefint  and Vbat management functions
 523:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint  and Vbat management functions
 524:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 525:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 526:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 527:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ##### Temperature Sensor, Vrefint  and Vbat management function #####
 528:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 529:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides a function allowing to enable/disable the internal 
 530:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          connections between the ADC and the Temperature Sensor, the Vrefint and
 531:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          Vbat source.
 532:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****      
 533:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] A typical configuration to get the Temperature sensor, Vrefint and Vbat channels 
 534:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          voltages is done following these steps :
 535:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Enable the internal connection of Temperature sensor, Vrefint or Vbat sources 
 536:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              with the ADC channels using ADC_TempSensorCmd(), ADC_VrefintCmd() or ADC_VbatCmd()
 537:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              functions. 
 538:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) select the ADC_Channel_16(Temperature sensor), ADC_Channel_17(Vrefint)
 539:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              or ADC_Channel_18(Voltage battery) using ADC_ChannelConfig() function 
 540:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Get the voltage values, using ADC_GetConversionValue() function
 541:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 542:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 543:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 544:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 545:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 546:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 547:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the temperature sensor channel.
 548:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the temperature sensor input channel.
 549:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 550:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 551:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 552:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_TempSensorCmd(FunctionalState NewState)
 553:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1148              		.loc 1 553 1 is_stmt 1 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152              		.loc 1 553 1 is_stmt 0 view .LVU232
 1153 0000 10B5     		push	{r4, lr}
 1154              	.LCFI10:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 4, -8
 1157              		.cfi_offset 14, -4
 1158 0002 0400     		movs	r4, r0
 554:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccBloFiL.s 			page 31


 555:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1159              		.loc 1 555 3 is_stmt 1 view .LVU233
 1160 0004 0020     		movs	r0, #0
 1161              	.LVL80:
 1162              		.loc 1 555 3 is_stmt 0 view .LVU234
 1163 0006 0123     		movs	r3, #1
 1164 0008 A342     		cmp	r3, r4
 1165 000a 4041     		adcs	r0, r0, r0
 1166 000c FFF7FEFF 		bl	assert_param
 1167              	.LVL81:
 556:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 557:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 1168              		.loc 1 557 3 is_stmt 1 view .LVU235
 1169              		.loc 1 557 6 is_stmt 0 view .LVU236
 1170 0010 002C     		cmp	r4, #0
 1171 0012 06D0     		beq	.L95
 558:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 559:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the temperature sensor channel*/
 560:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSEN;
 1172              		.loc 1 560 5 is_stmt 1 view .LVU237
 1173              		.loc 1 560 14 is_stmt 0 view .LVU238
 1174 0014 064A     		ldr	r2, .L97
 1175 0016 1168     		ldr	r1, [r2]
 1176 0018 8023     		movs	r3, #128
 1177 001a 1B04     		lsls	r3, r3, #16
 1178 001c 0B43     		orrs	r3, r1
 1179 001e 1360     		str	r3, [r2]
 1180              	.L94:
 561:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 562:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 563:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 564:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the temperature sensor channel*/
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSEN);
 566:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 567:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1181              		.loc 1 567 1 view .LVU239
 1182              		@ sp needed
 1183 0020 10BD     		pop	{r4, pc}
 1184              	.L95:
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1185              		.loc 1 565 5 is_stmt 1 view .LVU240
 565:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1186              		.loc 1 565 14 is_stmt 0 view .LVU241
 1187 0022 034A     		ldr	r2, .L97
 1188 0024 1368     		ldr	r3, [r2]
 1189 0026 0349     		ldr	r1, .L97+4
 1190 0028 0B40     		ands	r3, r1
 1191 002a 1360     		str	r3, [r2]
 1192              		.loc 1 567 1 view .LVU242
 1193 002c F8E7     		b	.L94
 1194              	.L98:
 1195 002e C046     		.align	2
 1196              	.L97:
 1197 0030 08270140 		.word	1073817352
 1198 0034 FFFF7FFF 		.word	-8388609
 1199              		.cfi_endproc
 1200              	.LFE43:
ARM GAS  /tmp/ccBloFiL.s 			page 32


 1202              		.section	.text.ADC_VrefintCmd,"ax",%progbits
 1203              		.align	1
 1204              		.global	ADC_VrefintCmd
 1205              		.syntax unified
 1206              		.code	16
 1207              		.thumb_func
 1208              		.fpu softvfp
 1210              	ADC_VrefintCmd:
 1211              	.LVL82:
 1212              	.LFB44:
 568:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 569:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 570:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the Vrefint channel.
 571:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the Vref input channel.
 572:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 573:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 574:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 575:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_VrefintCmd(FunctionalState NewState)
 576:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1213              		.loc 1 576 1 is_stmt 1 view -0
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 0
 1216              		@ frame_needed = 0, uses_anonymous_args = 0
 1217              		.loc 1 576 1 is_stmt 0 view .LVU244
 1218 0000 10B5     		push	{r4, lr}
 1219              	.LCFI11:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 4, -8
 1222              		.cfi_offset 14, -4
 1223 0002 0400     		movs	r4, r0
 577:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 578:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1224              		.loc 1 578 3 is_stmt 1 view .LVU245
 1225 0004 0020     		movs	r0, #0
 1226              	.LVL83:
 1227              		.loc 1 578 3 is_stmt 0 view .LVU246
 1228 0006 0123     		movs	r3, #1
 1229 0008 A342     		cmp	r3, r4
 1230 000a 4041     		adcs	r0, r0, r0
 1231 000c FFF7FEFF 		bl	assert_param
 1232              	.LVL84:
 579:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 580:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 1233              		.loc 1 580 3 is_stmt 1 view .LVU247
 1234              		.loc 1 580 6 is_stmt 0 view .LVU248
 1235 0010 002C     		cmp	r4, #0
 1236 0012 06D0     		beq	.L100
 581:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 582:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the Vrefint channel*/
 583:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VREFEN;
 1237              		.loc 1 583 5 is_stmt 1 view .LVU249
 1238              		.loc 1 583 14 is_stmt 0 view .LVU250
 1239 0014 064A     		ldr	r2, .L102
 1240 0016 1168     		ldr	r1, [r2]
 1241 0018 8023     		movs	r3, #128
 1242 001a DB03     		lsls	r3, r3, #15
 1243 001c 0B43     		orrs	r3, r1
ARM GAS  /tmp/ccBloFiL.s 			page 33


 1244 001e 1360     		str	r3, [r2]
 1245              	.L99:
 584:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 585:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 586:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 587:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the Vrefint channel*/
 588:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VREFEN);
 589:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 590:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1246              		.loc 1 590 1 view .LVU251
 1247              		@ sp needed
 1248 0020 10BD     		pop	{r4, pc}
 1249              	.L100:
 588:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1250              		.loc 1 588 5 is_stmt 1 view .LVU252
 588:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1251              		.loc 1 588 14 is_stmt 0 view .LVU253
 1252 0022 034A     		ldr	r2, .L102
 1253 0024 1368     		ldr	r3, [r2]
 1254 0026 0349     		ldr	r1, .L102+4
 1255 0028 0B40     		ands	r3, r1
 1256 002a 1360     		str	r3, [r2]
 1257              		.loc 1 590 1 view .LVU254
 1258 002c F8E7     		b	.L99
 1259              	.L103:
 1260 002e C046     		.align	2
 1261              	.L102:
 1262 0030 08270140 		.word	1073817352
 1263 0034 FFFFBFFF 		.word	-4194305
 1264              		.cfi_endproc
 1265              	.LFE44:
 1267              		.section	.text.ADC_VbatCmd,"ax",%progbits
 1268              		.align	1
 1269              		.global	ADC_VbatCmd
 1270              		.syntax unified
 1271              		.code	16
 1272              		.thumb_func
 1273              		.fpu softvfp
 1275              	ADC_VbatCmd:
 1276              	.LVL85:
 1277              	.LFB45:
 591:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 592:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 593:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the Vbat channel.
 594:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the Vbat input channel.
 595:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 596:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 597:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 598:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_VbatCmd(FunctionalState NewState)
 599:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1278              		.loc 1 599 1 is_stmt 1 view -0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		.loc 1 599 1 is_stmt 0 view .LVU256
 1283 0000 10B5     		push	{r4, lr}
 1284              	.LCFI12:
ARM GAS  /tmp/ccBloFiL.s 			page 34


 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 4, -8
 1287              		.cfi_offset 14, -4
 1288 0002 0400     		movs	r4, r0
 600:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 601:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1289              		.loc 1 601 3 is_stmt 1 view .LVU257
 1290 0004 0020     		movs	r0, #0
 1291              	.LVL86:
 1292              		.loc 1 601 3 is_stmt 0 view .LVU258
 1293 0006 0123     		movs	r3, #1
 1294 0008 A342     		cmp	r3, r4
 1295 000a 4041     		adcs	r0, r0, r0
 1296 000c FFF7FEFF 		bl	assert_param
 1297              	.LVL87:
 602:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 603:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 1298              		.loc 1 603 3 is_stmt 1 view .LVU259
 1299              		.loc 1 603 6 is_stmt 0 view .LVU260
 1300 0010 002C     		cmp	r4, #0
 1301 0012 06D0     		beq	.L105
 604:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 605:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the Vbat channel*/
 606:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATEN;
 1302              		.loc 1 606 5 is_stmt 1 view .LVU261
 1303              		.loc 1 606 14 is_stmt 0 view .LVU262
 1304 0014 064A     		ldr	r2, .L107
 1305 0016 1168     		ldr	r1, [r2]
 1306 0018 8023     		movs	r3, #128
 1307 001a 5B04     		lsls	r3, r3, #17
 1308 001c 0B43     		orrs	r3, r1
 1309 001e 1360     		str	r3, [r2]
 1310              	.L104:
 607:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 608:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 609:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 610:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the Vbat channel*/
 611:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATEN);
 612:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 613:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1311              		.loc 1 613 1 view .LVU263
 1312              		@ sp needed
 1313 0020 10BD     		pop	{r4, pc}
 1314              	.L105:
 611:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1315              		.loc 1 611 5 is_stmt 1 view .LVU264
 611:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1316              		.loc 1 611 14 is_stmt 0 view .LVU265
 1317 0022 034A     		ldr	r2, .L107
 1318 0024 1368     		ldr	r3, [r2]
 1319 0026 0349     		ldr	r1, .L107+4
 1320 0028 0B40     		ands	r3, r1
 1321 002a 1360     		str	r3, [r2]
 1322              		.loc 1 613 1 view .LVU266
 1323 002c F8E7     		b	.L104
 1324              	.L108:
 1325 002e C046     		.align	2
ARM GAS  /tmp/ccBloFiL.s 			page 35


 1326              	.L107:
 1327 0030 08270140 		.word	1073817352
 1328 0034 FFFFFFFE 		.word	-16777217
 1329              		.cfi_endproc
 1330              	.LFE45:
 1332              		.section	.text.ADC_ChannelConfig,"ax",%progbits
 1333              		.align	1
 1334              		.global	ADC_ChannelConfig
 1335              		.syntax unified
 1336              		.code	16
 1337              		.thumb_func
 1338              		.fpu softvfp
 1340              	ADC_ChannelConfig:
 1341              	.LVL88:
 1342              	.LFB46:
 614:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 615:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 616:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 617:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 618:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 619:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group5 Channels Configuration functions
 620:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief    Channels Configuration functions 
 621:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 622:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 623:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 624:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****             ##### Channels Configuration functions #####
 625:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 626:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to manage the ADC channels,
 627:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          it is composed of 3 sub sections :
 628:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Configuration and management functions for ADC channels: This subsection 
 629:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              provides functions allowing to configure the ADC channels :    
 630:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Select the ADC channels
 631:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Activate ADC Calibration
 632:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Activate the Overrun Mode.
 633:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Activate the Discontinuous Mode 
 634:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Activate the Continuous Mode.
 635:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Configure the sampling time for each channel
 636:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Select the conversion Trigger and Edge for ADC channels
 637:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Select the scan direction.
 638:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              -@@- Please Note that the following features for ADC channels are configurated
 639:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                   using the ADC_Init() function : 
 640:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                   (+@@) Activate the Continuous Mode (can be also activated by ADC_OverrunModeCmd()
 641:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                   (+@@) Select the conversion Trigger and Edge for ADC channels
 642:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                   (+@@) Select the scan direction.
 643:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Control the ADC peripheral : This subsection permits to command the ADC:
 644:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Stop or discard an on-going conversion (ADSTP command)
 645:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (++) Start the ADC conversion .
 646:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (#) Get the conversion data: This subsection provides an important function in 
 647:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              the ADC peripheral since it returns the converted data of the current 
 648:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              ADC channel. When the Conversion value is read, the EOC Flag is 
 649:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              automatically cleared.
 650:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 651:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 652:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 653:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 654:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 655:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
ARM GAS  /tmp/ccBloFiL.s 			page 36


 656:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Configures for the selected ADC and its sampling time.
 657:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC peripheral.
 658:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 659:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be any combination of the following values:
 660:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_0: ADC Channel0 selected
 661:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_1: ADC Channel1 selected
 662:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_2: ADC Channel2 selected
 663:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_3: ADC Channel3 selected
 664:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_4: ADC Channel4 selected
 665:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_5: ADC Channel5 selected
 666:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_6: ADC Channel6 selected
 667:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_7: ADC Channel7 selected
 668:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_8: ADC Channel8 selected
 669:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_9: ADC Channel9 selected
 670:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_10: ADC Channel10 selected
 671:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_11: ADC Channel11 selected
 672:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_12: ADC Channel12 selected
 673:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_13: ADC Channel13 selected
 674:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_14: ADC Channel14 selected
 675:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_15: ADC Channel15 selected
 676:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_16: ADC Channel16 selected
 677:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_17: ADC Channel17 selected
 678:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_Channel_18: ADC Channel18 selected    
 679:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected 
 680:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         channel. 
 681:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
 682:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_1_5Cycles: Sample time equal to 1.5 cycles  
 683:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_7_5Cycles: Sample time equal to 7.5 cycles
 684:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_13_5Cycles: Sample time equal to 13.5 cycles
 685:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_28_5Cycles: Sample time equal to 28.5 cycles
 686:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_41_5Cycles: Sample time equal to 41.5 cycles
 687:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_55_5Cycles: Sample time equal to 55.5 cycles
 688:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_71_5Cycles: Sample time equal to 71.5 cycles
 689:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_SampleTime_239_5Cycles: Sample time equal to 239.5 cycles
 690:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 691:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 692:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_ChannelConfig(ADC_TypeDef* ADCx, uint32_t ADC_Channel, uint32_t ADC_SampleTime)
 693:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1343              		.loc 1 693 1 is_stmt 1 view -0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		.loc 1 693 1 is_stmt 0 view .LVU268
 1348 0000 70B5     		push	{r4, r5, r6, lr}
 1349              	.LCFI13:
 1350              		.cfi_def_cfa_offset 16
 1351              		.cfi_offset 4, -16
 1352              		.cfi_offset 5, -12
 1353              		.cfi_offset 6, -8
 1354              		.cfi_offset 14, -4
 1355 0002 0400     		movs	r4, r0
 1356 0004 0D00     		movs	r5, r1
 1357 0006 1600     		movs	r6, r2
 694:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t tmpreg = 0;
 1358              		.loc 1 694 3 is_stmt 1 view .LVU269
 1359              	.LVL89:
 695:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
ARM GAS  /tmp/ccBloFiL.s 			page 37


 696:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 697:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1360              		.loc 1 697 3 view .LVU270
 1361 0008 0D4B     		ldr	r3, .L113
 1362 000a C018     		adds	r0, r0, r3
 1363              	.LVL90:
 1364              		.loc 1 697 3 is_stmt 0 view .LVU271
 1365 000c 4342     		rsbs	r3, r0, #0
 1366 000e 5841     		adcs	r0, r0, r3
 1367 0010 FFF7FEFF 		bl	assert_param
 1368              	.LVL91:
 698:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 1369              		.loc 1 698 3 is_stmt 1 view .LVU272
 1370 0014 002D     		cmp	r5, #0
 1371 0016 03D0     		beq	.L111
 1372              		.loc 1 698 16 is_stmt 0 discriminator 1 view .LVU273
 1373 0018 EB0C     		lsrs	r3, r5, #19
 1374              		.loc 1 698 3 discriminator 1 view .LVU274
 1375 001a 0FD0     		beq	.L112
 1376              		.loc 1 698 3 view .LVU275
 1377 001c 0020     		movs	r0, #0
 1378 001e 00E0     		b	.L110
 1379              	.L111:
 1380 0020 0020     		movs	r0, #0
 1381              	.L110:
 1382              		.loc 1 698 3 discriminator 6 view .LVU276
 1383 0022 FFF7FEFF 		bl	assert_param
 1384              	.LVL92:
 699:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 1385              		.loc 1 699 3 is_stmt 1 discriminator 6 view .LVU277
 1386 0026 0020     		movs	r0, #0
 1387 0028 0723     		movs	r3, #7
 1388 002a B342     		cmp	r3, r6
 1389 002c 4041     		adcs	r0, r0, r0
 1390 002e FFF7FEFF 		bl	assert_param
 1391              	.LVL93:
 700:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 701:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Configure the ADC Channel */
 702:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CHSELR |= (uint32_t)ADC_Channel;
 1392              		.loc 1 702 3 discriminator 6 view .LVU278
 1393              		.loc 1 702 16 is_stmt 0 discriminator 6 view .LVU279
 1394 0032 A16A     		ldr	r1, [r4, #40]
 1395 0034 0D43     		orrs	r5, r1
 1396              	.LVL94:
 1397              		.loc 1 702 16 discriminator 6 view .LVU280
 1398 0036 A562     		str	r5, [r4, #40]
 703:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 704:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Clear the Sampling time Selection bits */
 705:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg &= ~ADC_SMPR1_SMPR;
 1399              		.loc 1 705 3 is_stmt 1 discriminator 6 view .LVU281
 706:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 707:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set the ADC Sampling Time register */
 708:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   tmpreg |= (uint32_t)ADC_SampleTime;
 1400              		.loc 1 708 3 discriminator 6 view .LVU282
 1401              	.LVL95:
 709:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 710:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Configure the ADC Sample time register */
ARM GAS  /tmp/ccBloFiL.s 			page 38


 711:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->SMPR = tmpreg ;
 1402              		.loc 1 711 3 discriminator 6 view .LVU283
 1403              		.loc 1 711 14 is_stmt 0 discriminator 6 view .LVU284
 1404 0038 6661     		str	r6, [r4, #20]
 712:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1405              		.loc 1 712 1 discriminator 6 view .LVU285
 1406              		@ sp needed
 1407              	.LVL96:
 1408              	.LVL97:
 1409              		.loc 1 712 1 discriminator 6 view .LVU286
 1410 003a 70BD     		pop	{r4, r5, r6, pc}
 1411              	.LVL98:
 1412              	.L112:
 698:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 1413              		.loc 1 698 3 view .LVU287
 1414 003c 0120     		movs	r0, #1
 1415 003e F0E7     		b	.L110
 1416              	.L114:
 1417              		.align	2
 1418              	.L113:
 1419 0040 00DCFEBF 		.word	-1073816576
 1420              		.cfi_endproc
 1421              	.LFE46:
 1423              		.section	.text.ADC_ContinuousModeCmd,"ax",%progbits
 1424              		.align	1
 1425              		.global	ADC_ContinuousModeCmd
 1426              		.syntax unified
 1427              		.code	16
 1428              		.thumb_func
 1429              		.fpu softvfp
 1431              	ADC_ContinuousModeCmd:
 1432              	.LVL99:
 1433              	.LFB47:
 713:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 714:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 715:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enable the Continuous mode for the selected ADCx channels.
 716:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 717:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the Continuous mode.
 718:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 719:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   It is not possible to have both discontinuous mode and continuous mode
 720:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         enabled. In this case (If DISCEN and CONT are Set), the ADC behaves 
 721:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         as if continuous mode was disabled
 722:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 723:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 724:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 725:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1434              		.loc 1 725 1 is_stmt 1 view -0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
 1438              		.loc 1 725 1 is_stmt 0 view .LVU289
 1439 0000 70B5     		push	{r4, r5, r6, lr}
 1440              	.LCFI14:
 1441              		.cfi_def_cfa_offset 16
 1442              		.cfi_offset 4, -16
 1443              		.cfi_offset 5, -12
 1444              		.cfi_offset 6, -8
ARM GAS  /tmp/ccBloFiL.s 			page 39


 1445              		.cfi_offset 14, -4
 1446 0002 0400     		movs	r4, r0
 1447 0004 0D00     		movs	r5, r1
 726:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 727:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1448              		.loc 1 727 3 is_stmt 1 view .LVU290
 1449 0006 0C4B     		ldr	r3, .L118
 1450 0008 C018     		adds	r0, r0, r3
 1451              	.LVL100:
 1452              		.loc 1 727 3 is_stmt 0 view .LVU291
 1453 000a 4342     		rsbs	r3, r0, #0
 1454 000c 5841     		adcs	r0, r0, r3
 1455 000e FFF7FEFF 		bl	assert_param
 1456              	.LVL101:
 728:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1457              		.loc 1 728 3 is_stmt 1 view .LVU292
 1458 0012 0020     		movs	r0, #0
 1459 0014 0123     		movs	r3, #1
 1460 0016 AB42     		cmp	r3, r5
 1461 0018 4041     		adcs	r0, r0, r0
 1462 001a FFF7FEFF 		bl	assert_param
 1463              	.LVL102:
 729:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 730:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     if (NewState != DISABLE)
 1464              		.loc 1 730 5 view .LVU293
 1465              		.loc 1 730 8 is_stmt 0 view .LVU294
 1466 001e 002D     		cmp	r5, #0
 1467 0020 05D0     		beq	.L116
 731:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 732:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the Continuous mode*/
 733:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= (uint32_t)ADC_CFGR1_CONT;
 1468              		.loc 1 733 5 is_stmt 1 view .LVU295
 1469              		.loc 1 733 17 is_stmt 0 view .LVU296
 1470 0022 E268     		ldr	r2, [r4, #12]
 1471 0024 8023     		movs	r3, #128
 1472 0026 9B01     		lsls	r3, r3, #6
 1473 0028 1343     		orrs	r3, r2
 1474 002a E360     		str	r3, [r4, #12]
 1475              	.L115:
 734:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 735:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 736:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 737:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the Continuous mode */
 738:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)(~ADC_CFGR1_CONT);
 739:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 740:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1476              		.loc 1 740 1 view .LVU297
 1477              		@ sp needed
 1478              	.LVL103:
 1479              		.loc 1 740 1 view .LVU298
 1480 002c 70BD     		pop	{r4, r5, r6, pc}
 1481              	.LVL104:
 1482              	.L116:
 738:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1483              		.loc 1 738 5 is_stmt 1 view .LVU299
 738:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1484              		.loc 1 738 17 is_stmt 0 view .LVU300
ARM GAS  /tmp/ccBloFiL.s 			page 40


 1485 002e E368     		ldr	r3, [r4, #12]
 1486 0030 024A     		ldr	r2, .L118+4
 1487 0032 1340     		ands	r3, r2
 1488 0034 E360     		str	r3, [r4, #12]
 1489              		.loc 1 740 1 view .LVU301
 1490 0036 F9E7     		b	.L115
 1491              	.L119:
 1492              		.align	2
 1493              	.L118:
 1494 0038 00DCFEBF 		.word	-1073816576
 1495 003c FFDFFFFF 		.word	-8193
 1496              		.cfi_endproc
 1497              	.LFE47:
 1499              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 1500              		.align	1
 1501              		.global	ADC_DiscModeCmd
 1502              		.syntax unified
 1503              		.code	16
 1504              		.thumb_func
 1505              		.fpu softvfp
 1507              	ADC_DiscModeCmd:
 1508              	.LVL105:
 1509              	.LFB48:
 741:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 742:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 743:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enable the discontinuous mode for the selected ADC channels.
 744:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 745:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the discontinuous mode.
 746:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 747:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   It is not possible to have both discontinuous mode and continuous mode
 748:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         enabled. In this case (If DISCEN and CONT are Set), the ADC behaves 
 749:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         as if continuous mode was disabled
 750:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 751:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 752:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 753:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1510              		.loc 1 753 1 is_stmt 1 view -0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		.loc 1 753 1 is_stmt 0 view .LVU303
 1515 0000 70B5     		push	{r4, r5, r6, lr}
 1516              	.LCFI15:
 1517              		.cfi_def_cfa_offset 16
 1518              		.cfi_offset 4, -16
 1519              		.cfi_offset 5, -12
 1520              		.cfi_offset 6, -8
 1521              		.cfi_offset 14, -4
 1522 0002 0400     		movs	r4, r0
 1523 0004 0D00     		movs	r5, r1
 754:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 755:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1524              		.loc 1 755 3 is_stmt 1 view .LVU304
 1525 0006 0C4B     		ldr	r3, .L123
 1526 0008 C018     		adds	r0, r0, r3
 1527              	.LVL106:
 1528              		.loc 1 755 3 is_stmt 0 view .LVU305
ARM GAS  /tmp/ccBloFiL.s 			page 41


 1529 000a 4342     		rsbs	r3, r0, #0
 1530 000c 5841     		adcs	r0, r0, r3
 1531 000e FFF7FEFF 		bl	assert_param
 1532              	.LVL107:
 756:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1533              		.loc 1 756 3 is_stmt 1 view .LVU306
 1534 0012 0020     		movs	r0, #0
 1535 0014 0123     		movs	r3, #1
 1536 0016 AB42     		cmp	r3, r5
 1537 0018 4041     		adcs	r0, r0, r0
 1538 001a FFF7FEFF 		bl	assert_param
 1539              	.LVL108:
 757:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 758:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     if (NewState != DISABLE)
 1540              		.loc 1 758 5 view .LVU307
 1541              		.loc 1 758 8 is_stmt 0 view .LVU308
 1542 001e 002D     		cmp	r5, #0
 1543 0020 05D0     		beq	.L121
 759:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 760:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the Discontinuous mode */
 761:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= (uint32_t)ADC_CFGR1_DISCEN;
 1544              		.loc 1 761 5 is_stmt 1 view .LVU309
 1545              		.loc 1 761 17 is_stmt 0 view .LVU310
 1546 0022 E268     		ldr	r2, [r4, #12]
 1547 0024 8023     		movs	r3, #128
 1548 0026 5B02     		lsls	r3, r3, #9
 1549 0028 1343     		orrs	r3, r2
 1550 002a E360     		str	r3, [r4, #12]
 1551              	.L120:
 762:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 763:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 764:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 765:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the Discontinuous mode */
 766:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)(~ADC_CFGR1_DISCEN);
 767:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 768:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1552              		.loc 1 768 1 view .LVU311
 1553              		@ sp needed
 1554              	.LVL109:
 1555              		.loc 1 768 1 view .LVU312
 1556 002c 70BD     		pop	{r4, r5, r6, pc}
 1557              	.LVL110:
 1558              	.L121:
 766:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1559              		.loc 1 766 5 is_stmt 1 view .LVU313
 766:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1560              		.loc 1 766 17 is_stmt 0 view .LVU314
 1561 002e E368     		ldr	r3, [r4, #12]
 1562 0030 024A     		ldr	r2, .L123+4
 1563 0032 1340     		ands	r3, r2
 1564 0034 E360     		str	r3, [r4, #12]
 1565              		.loc 1 768 1 view .LVU315
 1566 0036 F9E7     		b	.L120
 1567              	.L124:
 1568              		.align	2
 1569              	.L123:
 1570 0038 00DCFEBF 		.word	-1073816576
ARM GAS  /tmp/ccBloFiL.s 			page 42


 1571 003c FFFFFEFF 		.word	-65537
 1572              		.cfi_endproc
 1573              	.LFE48:
 1575              		.section	.text.ADC_OverrunModeCmd,"ax",%progbits
 1576              		.align	1
 1577              		.global	ADC_OverrunModeCmd
 1578              		.syntax unified
 1579              		.code	16
 1580              		.thumb_func
 1581              		.fpu softvfp
 1583              	ADC_OverrunModeCmd:
 1584              	.LVL111:
 1585              	.LFB49:
 769:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 770:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 771:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enable the Overrun mode for the selected ADC channels.
 772:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 773:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the Overrun mode.
 774:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 775:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 776:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 777:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_OverrunModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 778:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1586              		.loc 1 778 1 is_stmt 1 view -0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              		.loc 1 778 1 is_stmt 0 view .LVU317
 1591 0000 70B5     		push	{r4, r5, r6, lr}
 1592              	.LCFI16:
 1593              		.cfi_def_cfa_offset 16
 1594              		.cfi_offset 4, -16
 1595              		.cfi_offset 5, -12
 1596              		.cfi_offset 6, -8
 1597              		.cfi_offset 14, -4
 1598 0002 0400     		movs	r4, r0
 1599 0004 0D00     		movs	r5, r1
 779:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 780:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1600              		.loc 1 780 3 is_stmt 1 view .LVU318
 1601 0006 0C4B     		ldr	r3, .L128
 1602 0008 C018     		adds	r0, r0, r3
 1603              	.LVL112:
 1604              		.loc 1 780 3 is_stmt 0 view .LVU319
 1605 000a 4342     		rsbs	r3, r0, #0
 1606 000c 5841     		adcs	r0, r0, r3
 1607 000e FFF7FEFF 		bl	assert_param
 1608              	.LVL113:
 781:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1609              		.loc 1 781 3 is_stmt 1 view .LVU320
 1610 0012 0020     		movs	r0, #0
 1611 0014 0123     		movs	r3, #1
 1612 0016 AB42     		cmp	r3, r5
 1613 0018 4041     		adcs	r0, r0, r0
 1614 001a FFF7FEFF 		bl	assert_param
 1615              	.LVL114:
 782:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
ARM GAS  /tmp/ccBloFiL.s 			page 43


 783:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     if (NewState != DISABLE)
 1616              		.loc 1 783 5 view .LVU321
 1617              		.loc 1 783 8 is_stmt 0 view .LVU322
 1618 001e 002D     		cmp	r5, #0
 1619 0020 05D0     		beq	.L126
 784:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 785:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the Overrun mode */
 786:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= (uint32_t)ADC_CFGR1_OVRMOD;
 1620              		.loc 1 786 5 is_stmt 1 view .LVU323
 1621              		.loc 1 786 17 is_stmt 0 view .LVU324
 1622 0022 E268     		ldr	r2, [r4, #12]
 1623 0024 8023     		movs	r3, #128
 1624 0026 5B01     		lsls	r3, r3, #5
 1625 0028 1343     		orrs	r3, r2
 1626 002a E360     		str	r3, [r4, #12]
 1627              	.L125:
 787:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 788:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 789:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 790:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the Overrun mode */
 791:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)(~ADC_CFGR1_OVRMOD);
 792:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 793:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1628              		.loc 1 793 1 view .LVU325
 1629              		@ sp needed
 1630              	.LVL115:
 1631              		.loc 1 793 1 view .LVU326
 1632 002c 70BD     		pop	{r4, r5, r6, pc}
 1633              	.LVL116:
 1634              	.L126:
 791:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1635              		.loc 1 791 5 is_stmt 1 view .LVU327
 791:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1636              		.loc 1 791 17 is_stmt 0 view .LVU328
 1637 002e E368     		ldr	r3, [r4, #12]
 1638 0030 024A     		ldr	r2, .L128+4
 1639 0032 1340     		ands	r3, r2
 1640 0034 E360     		str	r3, [r4, #12]
 1641              		.loc 1 793 1 view .LVU329
 1642 0036 F9E7     		b	.L125
 1643              	.L129:
 1644              		.align	2
 1645              	.L128:
 1646 0038 00DCFEBF 		.word	-1073816576
 1647 003c FFEFFFFF 		.word	-4097
 1648              		.cfi_endproc
 1649              	.LFE49:
 1651              		.section	.text.ADC_GetCalibrationFactor,"ax",%progbits
 1652              		.align	1
 1653              		.global	ADC_GetCalibrationFactor
 1654              		.syntax unified
 1655              		.code	16
 1656              		.thumb_func
 1657              		.fpu softvfp
 1659              	ADC_GetCalibrationFactor:
 1660              	.LVL117:
 1661              	.LFB50:
ARM GAS  /tmp/ccBloFiL.s 			page 44


 794:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 795:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 796:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Active the Calibration operation for the selected ADC.
 797:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   The Calibration can be initiated only when ADC is still in the 
 798:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         reset configuration (ADEN must be equal to 0).
 799:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 800:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval ADC Calibration factor 
 801:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 802:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** uint32_t ADC_GetCalibrationFactor(ADC_TypeDef* ADCx)
 803:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1662              		.loc 1 803 1 is_stmt 1 view -0
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 0, uses_anonymous_args = 0
 1666              		.loc 1 803 1 is_stmt 0 view .LVU331
 1667 0000 10B5     		push	{r4, lr}
 1668              	.LCFI17:
 1669              		.cfi_def_cfa_offset 8
 1670              		.cfi_offset 4, -8
 1671              		.cfi_offset 14, -4
 1672 0002 0400     		movs	r4, r0
 804:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t tmpreg = 0, calibrationcounter = 0, calibrationstatus = 0;
 1673              		.loc 1 804 3 is_stmt 1 view .LVU332
 1674              	.LVL118:
 805:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 806:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 807:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1675              		.loc 1 807 3 view .LVU333
 1676 0004 0D4B     		ldr	r3, .L135
 1677 0006 C018     		adds	r0, r0, r3
 1678              	.LVL119:
 1679              		.loc 1 807 3 is_stmt 0 view .LVU334
 1680 0008 4342     		rsbs	r3, r0, #0
 1681 000a 5841     		adcs	r0, r0, r3
 1682 000c FFF7FEFF 		bl	assert_param
 1683              	.LVL120:
 808:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 809:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Set the ADC calibartion */
 810:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CR |= (uint32_t)ADC_CR_ADCAL;
 1684              		.loc 1 810 3 is_stmt 1 view .LVU335
 1685              		.loc 1 810 12 is_stmt 0 view .LVU336
 1686 0010 A268     		ldr	r2, [r4, #8]
 1687 0012 8023     		movs	r3, #128
 1688 0014 1B06     		lsls	r3, r3, #24
 1689 0016 1343     		orrs	r3, r2
 1690 0018 A360     		str	r3, [r4, #8]
 804:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 1691              		.loc 1 804 24 view .LVU337
 1692 001a 0023     		movs	r3, #0
 1693              	.LVL121:
 1694              	.L132:
 811:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 812:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Wait until no ADC calibration is completed */
 813:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   do
 1695              		.loc 1 813 3 is_stmt 1 discriminator 2 view .LVU338
 814:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 815:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     calibrationstatus = ADCx->CR & ADC_CR_ADCAL;
ARM GAS  /tmp/ccBloFiL.s 			page 45


 1696              		.loc 1 815 5 discriminator 2 view .LVU339
 1697              		.loc 1 815 29 is_stmt 0 discriminator 2 view .LVU340
 1698 001c A168     		ldr	r1, [r4, #8]
 1699              	.LVL122:
 816:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     calibrationcounter++;  
 1700              		.loc 1 816 5 is_stmt 1 discriminator 2 view .LVU341
 1701              		.loc 1 816 23 is_stmt 0 discriminator 2 view .LVU342
 1702 001e 0133     		adds	r3, r3, #1
 1703              	.LVL123:
 817:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   } while((calibrationcounter != CALIBRATION_TIMEOUT) && (calibrationstatus != 0x00));
 1704              		.loc 1 817 10 is_stmt 1 discriminator 2 view .LVU343
 1705              		.loc 1 817 3 is_stmt 0 discriminator 2 view .LVU344
 1706 0020 F022     		movs	r2, #240
 1707 0022 1202     		lsls	r2, r2, #8
 1708 0024 9342     		cmp	r3, r2
 1709 0026 01D0     		beq	.L131
 1710              		.loc 1 817 55 discriminator 1 view .LVU345
 1711 0028 0029     		cmp	r1, #0
 1712 002a F7DB     		blt	.L132
 1713              	.L131:
 818:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     
 819:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if((uint32_t)(ADCx->CR & ADC_CR_ADCAL) == RESET)
 1714              		.loc 1 819 3 is_stmt 1 view .LVU346
 1715              		.loc 1 819 21 is_stmt 0 view .LVU347
 1716 002c A368     		ldr	r3, [r4, #8]
 1717              	.LVL124:
 1718              		.loc 1 819 5 view .LVU348
 1719 002e 002B     		cmp	r3, #0
 1720 0030 01DB     		blt	.L134
 820:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 821:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /*Get the calibration factor from the ADC data register */
 822:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     tmpreg = ADCx->DR;
 1721              		.loc 1 822 5 is_stmt 1 view .LVU349
 1722              		.loc 1 822 12 is_stmt 0 view .LVU350
 1723 0032 206C     		ldr	r0, [r4, #64]
 1724              	.LVL125:
 1725              	.L130:
 823:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 824:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 825:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 826:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Error factor */
 827:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     tmpreg = 0x00000000;
 828:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 829:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   return tmpreg;
 830:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1726              		.loc 1 830 1 view .LVU351
 1727              		@ sp needed
 1728              	.LVL126:
 1729              		.loc 1 830 1 view .LVU352
 1730 0034 10BD     		pop	{r4, pc}
 1731              	.LVL127:
 1732              	.L134:
 827:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1733              		.loc 1 827 12 view .LVU353
 1734 0036 0020     		movs	r0, #0
 829:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1735              		.loc 1 829 3 is_stmt 1 view .LVU354
ARM GAS  /tmp/ccBloFiL.s 			page 46


 829:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1736              		.loc 1 829 10 is_stmt 0 view .LVU355
 1737 0038 FCE7     		b	.L130
 1738              	.L136:
 1739 003a C046     		.align	2
 1740              	.L135:
 1741 003c 00DCFEBF 		.word	-1073816576
 1742              		.cfi_endproc
 1743              	.LFE50:
 1745              		.section	.text.ADC_StopOfConversion,"ax",%progbits
 1746              		.align	1
 1747              		.global	ADC_StopOfConversion
 1748              		.syntax unified
 1749              		.code	16
 1750              		.thumb_func
 1751              		.fpu softvfp
 1753              	ADC_StopOfConversion:
 1754              	.LVL128:
 1755              	.LFB51:
 831:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 832:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 833:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Stop the on going conversions for the selected ADC.
 834:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   When ADSTP is set, any on going conversion is aborted, and the ADC 
 835:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         data register is not updated with current conversion. 
 836:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 837:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 838:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 839:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_StopOfConversion(ADC_TypeDef* ADCx)
 840:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1756              		.loc 1 840 1 is_stmt 1 view -0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760              		.loc 1 840 1 is_stmt 0 view .LVU357
 1761 0000 10B5     		push	{r4, lr}
 1762              	.LCFI18:
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 4, -8
 1765              		.cfi_offset 14, -4
 1766 0002 0400     		movs	r4, r0
 841:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 842:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1767              		.loc 1 842 3 is_stmt 1 view .LVU358
 1768 0004 054B     		ldr	r3, .L138
 1769 0006 C018     		adds	r0, r0, r3
 1770              	.LVL129:
 1771              		.loc 1 842 3 is_stmt 0 view .LVU359
 1772 0008 4342     		rsbs	r3, r0, #0
 1773 000a 5841     		adcs	r0, r0, r3
 1774 000c FFF7FEFF 		bl	assert_param
 1775              	.LVL130:
 843:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 844:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CR |= (uint32_t)ADC_CR_ADSTP;
 1776              		.loc 1 844 3 is_stmt 1 view .LVU360
 1777              		.loc 1 844 12 is_stmt 0 view .LVU361
 1778 0010 A368     		ldr	r3, [r4, #8]
 1779 0012 1022     		movs	r2, #16
ARM GAS  /tmp/ccBloFiL.s 			page 47


 1780 0014 1343     		orrs	r3, r2
 1781 0016 A360     		str	r3, [r4, #8]
 845:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1782              		.loc 1 845 1 view .LVU362
 1783              		@ sp needed
 1784              	.LVL131:
 1785              		.loc 1 845 1 view .LVU363
 1786 0018 10BD     		pop	{r4, pc}
 1787              	.L139:
 1788 001a C046     		.align	2
 1789              	.L138:
 1790 001c 00DCFEBF 		.word	-1073816576
 1791              		.cfi_endproc
 1792              	.LFE51:
 1794              		.section	.text.ADC_StartOfConversion,"ax",%progbits
 1795              		.align	1
 1796              		.global	ADC_StartOfConversion
 1797              		.syntax unified
 1798              		.code	16
 1799              		.thumb_func
 1800              		.fpu softvfp
 1802              	ADC_StartOfConversion:
 1803              	.LVL132:
 1804              	.LFB52:
 846:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 847:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 848:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Start Conversion for the selected ADC channels.
 849:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @note   In continuous mode, ADSTART is not cleared by hardware with the 
 850:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         assertion of EOSEQ because the sequence is automatic relaunched
 851:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 852:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 853:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 854:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_StartOfConversion(ADC_TypeDef* ADCx)
 855:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1805              		.loc 1 855 1 is_stmt 1 view -0
 1806              		.cfi_startproc
 1807              		@ args = 0, pretend = 0, frame = 0
 1808              		@ frame_needed = 0, uses_anonymous_args = 0
 1809              		.loc 1 855 1 is_stmt 0 view .LVU365
 1810 0000 10B5     		push	{r4, lr}
 1811              	.LCFI19:
 1812              		.cfi_def_cfa_offset 8
 1813              		.cfi_offset 4, -8
 1814              		.cfi_offset 14, -4
 1815 0002 0400     		movs	r4, r0
 856:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 857:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1816              		.loc 1 857 3 is_stmt 1 view .LVU366
 1817 0004 054B     		ldr	r3, .L141
 1818 0006 C018     		adds	r0, r0, r3
 1819              	.LVL133:
 1820              		.loc 1 857 3 is_stmt 0 view .LVU367
 1821 0008 4342     		rsbs	r3, r0, #0
 1822 000a 5841     		adcs	r0, r0, r3
 1823 000c FFF7FEFF 		bl	assert_param
 1824              	.LVL134:
 858:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
ARM GAS  /tmp/ccBloFiL.s 			page 48


 859:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CR |= (uint32_t)ADC_CR_ADSTART;
 1825              		.loc 1 859 3 is_stmt 1 view .LVU368
 1826              		.loc 1 859 12 is_stmt 0 view .LVU369
 1827 0010 A368     		ldr	r3, [r4, #8]
 1828 0012 0422     		movs	r2, #4
 1829 0014 1343     		orrs	r3, r2
 1830 0016 A360     		str	r3, [r4, #8]
 860:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1831              		.loc 1 860 1 view .LVU370
 1832              		@ sp needed
 1833              	.LVL135:
 1834              		.loc 1 860 1 view .LVU371
 1835 0018 10BD     		pop	{r4, pc}
 1836              	.L142:
 1837 001a C046     		.align	2
 1838              	.L141:
 1839 001c 00DCFEBF 		.word	-1073816576
 1840              		.cfi_endproc
 1841              	.LFE52:
 1843              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 1844              		.align	1
 1845              		.global	ADC_GetConversionValue
 1846              		.syntax unified
 1847              		.code	16
 1848              		.thumb_func
 1849              		.fpu softvfp
 1851              	ADC_GetConversionValue:
 1852              	.LVL136:
 1853              	.LFB53:
 861:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 862:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 863:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for ADC channel.  
 864:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 865:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval The Data conversion value.
 866:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 867:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 868:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1854              		.loc 1 868 1 is_stmt 1 view -0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 0
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858              		.loc 1 868 1 is_stmt 0 view .LVU373
 1859 0000 10B5     		push	{r4, lr}
 1860              	.LCFI20:
 1861              		.cfi_def_cfa_offset 8
 1862              		.cfi_offset 4, -8
 1863              		.cfi_offset 14, -4
 1864 0002 0400     		movs	r4, r0
 869:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 870:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1865              		.loc 1 870 3 is_stmt 1 view .LVU374
 1866 0004 044B     		ldr	r3, .L144
 1867 0006 C018     		adds	r0, r0, r3
 1868              	.LVL137:
 1869              		.loc 1 870 3 is_stmt 0 view .LVU375
 1870 0008 4342     		rsbs	r3, r0, #0
 1871 000a 5841     		adcs	r0, r0, r3
ARM GAS  /tmp/ccBloFiL.s 			page 49


 1872 000c FFF7FEFF 		bl	assert_param
 1873              	.LVL138:
 871:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 872:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Return the selected ADC conversion value */
 873:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   return (uint16_t) ADCx->DR;
 1874              		.loc 1 873 3 is_stmt 1 view .LVU376
 1875              		.loc 1 873 25 is_stmt 0 view .LVU377
 1876 0010 206C     		ldr	r0, [r4, #64]
 1877              		.loc 1 873 10 view .LVU378
 1878 0012 80B2     		uxth	r0, r0
 874:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1879              		.loc 1 874 1 view .LVU379
 1880              		@ sp needed
 1881              	.LVL139:
 1882              		.loc 1 874 1 view .LVU380
 1883 0014 10BD     		pop	{r4, pc}
 1884              	.L145:
 1885 0016 C046     		.align	2
 1886              	.L144:
 1887 0018 00DCFEBF 		.word	-1073816576
 1888              		.cfi_endproc
 1889              	.LFE53:
 1891              		.section	.text.ADC_DMACmd,"ax",%progbits
 1892              		.align	1
 1893              		.global	ADC_DMACmd
 1894              		.syntax unified
 1895              		.code	16
 1896              		.thumb_func
 1897              		.fpu softvfp
 1899              	ADC_DMACmd:
 1900              	.LVL140:
 1901              	.LFB54:
 875:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 876:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 877:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 878:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 879:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 880:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group6 DMA Configuration functions
 881:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
 882:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 883:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim
 884:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 885:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****           ##### DMA Configuration functions #####
 886:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 887:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to configure the DMA for ADC hannels.
 888:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          Since converted channel values are stored into a unique data register, 
 889:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          it is useful to use DMA for conversion of more than one channel. This 
 890:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          avoids the loss of the data already stored in the ADC Data register. 
 891:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          When the DMA mode is enabled (using the ADC_DMACmd() function), after each
 892:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          conversion of a channel, a DMA request is generated.
 893:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 894:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] Depending on the "DMA disable selection" configuration (using the 
 895:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          ADC_DMARequestModeConfig() function), at the end of the last DMA 
 896:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          transfer, two possibilities are allowed:
 897:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) No new DMA request is issued to the DMA controller (One Shot Mode) 
 898:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) Requests can continue to be generated (Circular Mode).
 899:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
ARM GAS  /tmp/ccBloFiL.s 			page 50


 900:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
 901:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
 902:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 903:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 904:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 905:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
 906:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 907:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
 908:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
 909:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
 910:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 911:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 912:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 1902              		.loc 1 912 1 is_stmt 1 view -0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		.loc 1 912 1 is_stmt 0 view .LVU382
 1907 0000 70B5     		push	{r4, r5, r6, lr}
 1908              	.LCFI21:
 1909              		.cfi_def_cfa_offset 16
 1910              		.cfi_offset 4, -16
 1911              		.cfi_offset 5, -12
 1912              		.cfi_offset 6, -8
 1913              		.cfi_offset 14, -4
 1914 0002 0400     		movs	r4, r0
 1915 0004 0D00     		movs	r5, r1
 913:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 914:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1916              		.loc 1 914 3 is_stmt 1 view .LVU383
 1917 0006 0C4B     		ldr	r3, .L149
 1918 0008 C018     		adds	r0, r0, r3
 1919              	.LVL141:
 1920              		.loc 1 914 3 is_stmt 0 view .LVU384
 1921 000a 4342     		rsbs	r3, r0, #0
 1922 000c 5841     		adcs	r0, r0, r3
 1923 000e FFF7FEFF 		bl	assert_param
 1924              	.LVL142:
 915:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1925              		.loc 1 915 3 is_stmt 1 view .LVU385
 1926 0012 0020     		movs	r0, #0
 1927 0014 0123     		movs	r3, #1
 1928 0016 AB42     		cmp	r3, r5
 1929 0018 4041     		adcs	r0, r0, r0
 1930 001a FFF7FEFF 		bl	assert_param
 1931              	.LVL143:
 916:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 917:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 1932              		.loc 1 917 3 view .LVU386
 1933              		.loc 1 917 6 is_stmt 0 view .LVU387
 1934 001e 002D     		cmp	r5, #0
 1935 0020 04D0     		beq	.L147
 918:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 919:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the selected ADC DMA request */
 920:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 |= (uint32_t)ADC_CFGR1_DMAEN;
 1936              		.loc 1 920 5 is_stmt 1 view .LVU388
 1937              		.loc 1 920 17 is_stmt 0 view .LVU389
ARM GAS  /tmp/ccBloFiL.s 			page 51


 1938 0022 E368     		ldr	r3, [r4, #12]
 1939 0024 0122     		movs	r2, #1
 1940 0026 1343     		orrs	r3, r2
 1941 0028 E360     		str	r3, [r4, #12]
 1942              	.L146:
 921:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 922:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
 923:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
 924:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the selected ADC DMA request */
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->CFGR1 &= (uint32_t)(~ADC_CFGR1_DMAEN);
 926:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 927:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 1943              		.loc 1 927 1 view .LVU390
 1944              		@ sp needed
 1945              	.LVL144:
 1946              		.loc 1 927 1 view .LVU391
 1947 002a 70BD     		pop	{r4, r5, r6, pc}
 1948              	.LVL145:
 1949              	.L147:
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1950              		.loc 1 925 5 is_stmt 1 view .LVU392
 925:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 1951              		.loc 1 925 17 is_stmt 0 view .LVU393
 1952 002c E368     		ldr	r3, [r4, #12]
 1953 002e 0122     		movs	r2, #1
 1954 0030 9343     		bics	r3, r2
 1955 0032 E360     		str	r3, [r4, #12]
 1956              		.loc 1 927 1 view .LVU394
 1957 0034 F9E7     		b	.L146
 1958              	.L150:
 1959 0036 C046     		.align	2
 1960              	.L149:
 1961 0038 00DCFEBF 		.word	-1073816576
 1962              		.cfi_endproc
 1963              	.LFE54:
 1965              		.section	.text.ADC_DMARequestModeConfig,"ax",%progbits
 1966              		.align	1
 1967              		.global	ADC_DMARequestModeConfig
 1968              		.syntax unified
 1969              		.code	16
 1970              		.thumb_func
 1971              		.fpu softvfp
 1973              	ADC_DMARequestModeConfig:
 1974              	.LVL146:
 1975              	.LFB55:
 928:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 929:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 930:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)
 931:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
 932:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_DMARequestMode: the ADC channel to configure. 
 933:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
 934:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_DMAMode_OneShot  : DMA One Shot Mode 
 935:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_DMAMode_Circular : DMA Circular Mode  
 936:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *  @retval None
 937:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 938:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_DMARequestModeConfig(ADC_TypeDef* ADCx, uint32_t ADC_DMARequestMode)
 939:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
ARM GAS  /tmp/ccBloFiL.s 			page 52


 1976              		.loc 1 939 1 is_stmt 1 view -0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 0, uses_anonymous_args = 0
 1980              		.loc 1 939 1 is_stmt 0 view .LVU396
 1981 0000 70B5     		push	{r4, r5, r6, lr}
 1982              	.LCFI22:
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 4, -16
 1985              		.cfi_offset 5, -12
 1986              		.cfi_offset 6, -8
 1987              		.cfi_offset 14, -4
 1988 0002 0400     		movs	r4, r0
 1989 0004 0D00     		movs	r5, r1
 940:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
 941:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 1990              		.loc 1 941 3 is_stmt 1 view .LVU397
 1991 0006 074B     		ldr	r3, .L152
 1992 0008 C018     		adds	r0, r0, r3
 1993              	.LVL147:
 1994              		.loc 1 941 3 is_stmt 0 view .LVU398
 1995 000a 4342     		rsbs	r3, r0, #0
 1996 000c 5841     		adcs	r0, r0, r3
 1997 000e FFF7FEFF 		bl	assert_param
 1998              	.LVL148:
 942:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 943:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CFGR1 &= (uint32_t)~ADC_CFGR1_DMACFG;
 1999              		.loc 1 943 3 is_stmt 1 view .LVU399
 2000              		.loc 1 943 15 is_stmt 0 view .LVU400
 2001 0012 E368     		ldr	r3, [r4, #12]
 2002 0014 0222     		movs	r2, #2
 2003 0016 9343     		bics	r3, r2
 2004 0018 E360     		str	r3, [r4, #12]
 944:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->CFGR1 |= (uint32_t)ADC_DMARequestMode;
 2005              		.loc 1 944 3 is_stmt 1 view .LVU401
 2006              		.loc 1 944 15 is_stmt 0 view .LVU402
 2007 001a E168     		ldr	r1, [r4, #12]
 2008 001c 2943     		orrs	r1, r5
 2009 001e E160     		str	r1, [r4, #12]
 945:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2010              		.loc 1 945 1 view .LVU403
 2011              		@ sp needed
 2012              	.LVL149:
 2013              	.LVL150:
 2014              		.loc 1 945 1 view .LVU404
 2015 0020 70BD     		pop	{r4, r5, r6, pc}
 2016              	.L153:
 2017 0022 C046     		.align	2
 2018              	.L152:
 2019 0024 00DCFEBF 		.word	-1073816576
 2020              		.cfi_endproc
 2021              	.LFE55:
 2023              		.section	.text.ADC_ITConfig,"ax",%progbits
 2024              		.align	1
 2025              		.global	ADC_ITConfig
 2026              		.syntax unified
 2027              		.code	16
ARM GAS  /tmp/ccBloFiL.s 			page 53


 2028              		.thumb_func
 2029              		.fpu softvfp
 2031              	ADC_ITConfig:
 2032              	.LVL151:
 2033              	.LFB56:
 946:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 947:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
 948:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @}
 949:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
 950:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 951:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
 952:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *  @brief   Interrupts and flags management functions.
 953:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  *
 954:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @verbatim   
 955:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 956:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****             ##### Interrupts and flags management functions #####
 957:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****  ===============================================================================
 958:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] This section provides functions allowing to configure the ADC Interrupts 
 959:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          and get the status and clear flags and Interrupts pending bits.
 960:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
 961:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] The ADC provide 6 Interrupts sources and 11 Flags which can be divided into 
 962:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          3 groups:
 963:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 964:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *** Flags for ADC status ***
 965:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ======================================================
 966:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..]
 967:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Flags :
 968:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADRDY : This flag is set after the ADC has been enabled (bit ADEN=1)
 969:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                and when the ADC reaches a state where it is ready to accept conversion requests
 970:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADEN : This flag is set by software to enable the ADC.
 971:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 The ADC will be effectively ready to operate once the ADRDY flag has been set.
 972:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADDIS : This flag is cleared once the ADC is effectively
 973:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 disabled.
 974:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADSTART : This flag is cleared after the execution of
 975:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 ADC_StopOfConversion() function, at the same time as the ADSTP bit is
 976:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 cleared by hardware
 977:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADSTP : This flag is cleared by hardware when the conversion
 978:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 is effectively discarded and the ADC is ready to accept a new start conversion
 979:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_ADCAL : This flag is set once the calibration is complete.
 980:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 981:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Interrupts 
 982:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_ADRDY : specifies the interrupt source for ADC ready event.
 983:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 984:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *** Flags and Interrupts for ADC channel conversion ***
 985:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   =====================================================
 986:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..]
 987:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Flags :
 988:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_EOC : This flag is set by hardware at the end of each conversion
 989:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 of a channel when a new data result is available in the data register
 990:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_EOSEQ : This bit is set by hardware at the end of the conversion
 991:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 of a sequence of channels selected by ADC_ChannelConfig() function.
 992:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_EOSMP : This bit is set by hardware at the end of the sampling phase.
 993:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_OVR : This flag is set by hardware when an overrun occurs,
 994:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 meaning that a new conversion has complete while the EOC flag was already set.
 995:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 996:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Interrupts :
 997:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_EOC : specifies the interrupt source for end of conversion event.
ARM GAS  /tmp/ccBloFiL.s 			page 54


 998:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_EOSEQ : specifies the interrupt source for end of sequence event.
 999:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_EOSMP : specifies the interrupt source for end of sampling event.
1000:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_OVR : specifies the interrupt source for Overrun detection 
1001:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 event.
1002:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1003:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *** Flags and Interrupts for the Analog Watchdog ***
1004:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ================================================
1005:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..]
1006:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Flags :
1007:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_FLAG_AWD: This flag is set by hardware when the converted
1008:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 voltage crosses the values programmed thrsholds
1009:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1010:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****         (+)Interrupts :
1011:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****            (##) ADC_IT_AWD : specifies the interrupt source for Analog watchdog 
1012:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****                 event.
1013:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
1014:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] The user should identify which mode will be used in his application to 
1015:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          manage the ADC controller events: Polling mode or Interrupt mode.
1016:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
1017:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] In the Polling Mode it is advised to use the following functions:
1018:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) ADC_GetFlagStatus() : to check if flags events occur.
1019:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) ADC_ClearFlag()     : to clear the flags events.
1020:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
1021:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     [..] In the Interrupt Mode it is advised to use the following functions:
1022:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) ADC_ITConfig()       : to enable or disable the interrupt source.
1023:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) ADC_GetITStatus()    : to check if Interrupt occurs.
1024:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****          (+) ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
1025:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****              (corresponding Flag).
1026:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1027:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** @endverbatim
1028:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @{
1029:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1030:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1031:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
1032:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1033:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC peripheral.
1034:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled.
1035:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
1036:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_ADRDY: ADC ready interrupt 
1037:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSMP: End of sampling interrupt
1038:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt 
1039:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSEQ: End of sequence of conversion interrupt
1040:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_OVR: overrun interrupt
1041:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt
1042:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1043:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *         This parameter can be: ENABLE or DISABLE.
1044:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
1045:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1046:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint32_t ADC_IT, FunctionalState NewState)
1047:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 2034              		.loc 1 1047 1 is_stmt 1 view -0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 0
 2037              		@ frame_needed = 0, uses_anonymous_args = 0
 2038              		.loc 1 1047 1 is_stmt 0 view .LVU406
 2039 0000 70B5     		push	{r4, r5, r6, lr}
 2040              	.LCFI23:
ARM GAS  /tmp/ccBloFiL.s 			page 55


 2041              		.cfi_def_cfa_offset 16
 2042              		.cfi_offset 4, -16
 2043              		.cfi_offset 5, -12
 2044              		.cfi_offset 6, -8
 2045              		.cfi_offset 14, -4
 2046 0002 0400     		movs	r4, r0
 2047 0004 0D00     		movs	r5, r1
 2048 0006 1600     		movs	r6, r2
1048:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
1049:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2049              		.loc 1 1049 3 is_stmt 1 view .LVU407
 2050 0008 114B     		ldr	r3, .L160
 2051 000a C018     		adds	r0, r0, r3
 2052              	.LVL152:
 2053              		.loc 1 1049 3 is_stmt 0 view .LVU408
 2054 000c 4342     		rsbs	r3, r0, #0
 2055 000e 5841     		adcs	r0, r0, r3
 2056 0010 FFF7FEFF 		bl	assert_param
 2057              	.LVL153:
1050:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2058              		.loc 1 1050 3 is_stmt 1 view .LVU409
 2059 0014 0020     		movs	r0, #0
 2060 0016 0123     		movs	r3, #1
 2061 0018 B342     		cmp	r3, r6
 2062 001a 4041     		adcs	r0, r0, r0
 2063 001c FFF7FEFF 		bl	assert_param
 2064              	.LVL154:
1051:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CONFIG_IT(ADC_IT)); 
 2065              		.loc 1 1051 3 view .LVU410
 2066 0020 002D     		cmp	r5, #0
 2067 0022 05D0     		beq	.L158
 2068              		.loc 1 1051 16 is_stmt 0 discriminator 1 view .LVU411
 2069 0024 9F23     		movs	r3, #159
 2070 0026 2A00     		movs	r2, r5
 2071 0028 9A43     		bics	r2, r3
 2072              		.loc 1 1051 3 discriminator 1 view .LVU412
 2073 002a 0AD0     		beq	.L159
 2074              		.loc 1 1051 3 view .LVU413
 2075 002c 0020     		movs	r0, #0
 2076 002e 00E0     		b	.L155
 2077              	.L158:
 2078 0030 0020     		movs	r0, #0
 2079              	.L155:
 2080              		.loc 1 1051 3 discriminator 6 view .LVU414
 2081 0032 FFF7FEFF 		bl	assert_param
 2082              	.LVL155:
1052:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1053:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (NewState != DISABLE)
 2083              		.loc 1 1053 3 is_stmt 1 discriminator 6 view .LVU415
 2084              		.loc 1 1053 6 is_stmt 0 discriminator 6 view .LVU416
 2085 0036 002E     		cmp	r6, #0
 2086 0038 05D0     		beq	.L156
1054:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1055:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Enable the selected ADC interrupts */
1056:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->IER |= ADC_IT;
 2087              		.loc 1 1056 5 is_stmt 1 view .LVU417
 2088              		.loc 1 1056 15 is_stmt 0 view .LVU418
ARM GAS  /tmp/ccBloFiL.s 			page 56


 2089 003a 6168     		ldr	r1, [r4, #4]
 2090 003c 0D43     		orrs	r5, r1
 2091              	.LVL156:
 2092              		.loc 1 1056 15 view .LVU419
 2093 003e 6560     		str	r5, [r4, #4]
 2094              	.L154:
1057:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1058:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
1059:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1060:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* Disable the selected ADC interrupts */
1061:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     ADCx->IER &= (~(uint32_t)ADC_IT);
1062:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1063:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2095              		.loc 1 1063 1 view .LVU420
 2096              		@ sp needed
 2097              	.LVL157:
 2098              		.loc 1 1063 1 view .LVU421
 2099 0040 70BD     		pop	{r4, r5, r6, pc}
 2100              	.LVL158:
 2101              	.L159:
1051:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 2102              		.loc 1 1051 3 view .LVU422
 2103 0042 0120     		movs	r0, #1
 2104 0044 F5E7     		b	.L155
 2105              	.L156:
1061:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2106              		.loc 1 1061 5 is_stmt 1 view .LVU423
1061:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2107              		.loc 1 1061 15 is_stmt 0 view .LVU424
 2108 0046 6368     		ldr	r3, [r4, #4]
 2109 0048 AB43     		bics	r3, r5
 2110 004a 6360     		str	r3, [r4, #4]
 2111              		.loc 1 1063 1 view .LVU425
 2112 004c F8E7     		b	.L154
 2113              	.L161:
 2114 004e C046     		.align	2
 2115              	.L160:
 2116 0050 00DCFEBF 		.word	-1073816576
 2117              		.cfi_endproc
 2118              	.LFE56:
 2120              		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 2121              		.align	1
 2122              		.global	ADC_GetFlagStatus
 2123              		.syntax unified
 2124              		.code	16
 2125              		.thumb_func
 2126              		.fpu softvfp
 2128              	ADC_GetFlagStatus:
 2129              	.LVL159:
 2130              	.LFB57:
1064:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1065:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
1066:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1067:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
1068:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1069:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
1070:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
ARM GAS  /tmp/ccBloFiL.s 			page 57


1071:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_OVR: Overrun flag 
1072:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOSEQ: End of Sequence flag
1073:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1074:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOSMP: End of sampling flag
1075:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADRDY: ADC Ready flag
1076:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADEN: ADC enable flag 
1077:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADDIS: ADC disable flag 
1078:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADSTART: ADC start flag 
1079:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADSTP: ADC stop flag
1080:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADCAL: ADC Calibration flag
1081:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1082:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1083:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint32_t ADC_FLAG)
1084:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 2131              		.loc 1 1084 1 is_stmt 1 view -0
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 0, uses_anonymous_args = 0
 2135              		.loc 1 1084 1 is_stmt 0 view .LVU427
 2136 0000 70B5     		push	{r4, r5, r6, lr}
 2137              	.LCFI24:
 2138              		.cfi_def_cfa_offset 16
 2139              		.cfi_offset 4, -16
 2140              		.cfi_offset 5, -12
 2141              		.cfi_offset 6, -8
 2142              		.cfi_offset 14, -4
 2143 0002 0500     		movs	r5, r0
 2144 0004 0C00     		movs	r4, r1
1085:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   FlagStatus bitstatus = RESET;
 2145              		.loc 1 1085 3 is_stmt 1 view .LVU428
 2146              	.LVL160:
1086:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t tmpreg = 0;
 2147              		.loc 1 1086 3 view .LVU429
1087:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1088:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
1089:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2148              		.loc 1 1089 3 view .LVU430
 2149 0006 224B     		ldr	r3, .L179
 2150 0008 C018     		adds	r0, r0, r3
 2151              	.LVL161:
 2152              		.loc 1 1089 3 is_stmt 0 view .LVU431
 2153 000a 4342     		rsbs	r3, r0, #0
 2154 000c 5841     		adcs	r0, r0, r3
 2155 000e FFF7FEFF 		bl	assert_param
 2156              	.LVL162:
1090:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
 2157              		.loc 1 1090 3 is_stmt 1 view .LVU432
 2158              		.loc 1 1090 16 is_stmt 0 view .LVU433
 2159 0012 631E     		subs	r3, r4, #1
 2160              		.loc 1 1090 3 view .LVU434
 2161 0014 012B     		cmp	r3, #1
 2162 0016 1BD9     		bls	.L167
 2163              		.loc 1 1090 16 discriminator 2 view .LVU435
 2164 0018 042C     		cmp	r4, #4
 2165 001a 25D0     		beq	.L168
 2166              		.loc 1 1090 16 discriminator 4 view .LVU436
 2167 001c 082C     		cmp	r4, #8
ARM GAS  /tmp/ccBloFiL.s 			page 58


 2168 001e 25D0     		beq	.L169
 2169              		.loc 1 1090 16 discriminator 6 view .LVU437
 2170 0020 802C     		cmp	r4, #128
 2171 0022 25D0     		beq	.L170
 2172              		.loc 1 1090 16 discriminator 8 view .LVU438
 2173 0024 102C     		cmp	r4, #16
 2174 0026 25D0     		beq	.L171
 2175              		.loc 1 1090 16 discriminator 10 view .LVU439
 2176 0028 1A4B     		ldr	r3, .L179+4
 2177 002a 9C42     		cmp	r4, r3
 2178 002c 24D0     		beq	.L172
 2179              		.loc 1 1090 16 discriminator 12 view .LVU440
 2180 002e 1A4B     		ldr	r3, .L179+8
 2181 0030 9C42     		cmp	r4, r3
 2182 0032 23D0     		beq	.L173
 2183              		.loc 1 1090 16 discriminator 14 view .LVU441
 2184 0034 194B     		ldr	r3, .L179+12
 2185 0036 9C42     		cmp	r4, r3
 2186 0038 22D0     		beq	.L174
 2187              		.loc 1 1090 16 discriminator 16 view .LVU442
 2188 003a 194B     		ldr	r3, .L179+16
 2189 003c 9C42     		cmp	r4, r3
 2190 003e 21D0     		beq	.L175
 2191              		.loc 1 1090 3 discriminator 18 view .LVU443
 2192 0040 8823     		movs	r3, #136
 2193 0042 5B05     		lsls	r3, r3, #21
 2194 0044 9C42     		cmp	r4, r3
 2195 0046 01D0     		beq	.L178
 2196              		.loc 1 1090 3 view .LVU444
 2197 0048 0020     		movs	r0, #0
 2198 004a 02E0     		b	.L163
 2199              	.L178:
 2200 004c 0120     		movs	r0, #1
 2201 004e 00E0     		b	.L163
 2202              	.L167:
 2203 0050 0120     		movs	r0, #1
 2204              	.L163:
 2205              		.loc 1 1090 3 discriminator 22 view .LVU445
 2206 0052 FFF7FEFF 		bl	assert_param
 2207              	.LVL163:
1091:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1092:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if((uint32_t)(ADC_FLAG & 0x01000000))
 2208              		.loc 1 1092 3 is_stmt 1 discriminator 22 view .LVU446
 2209              		.loc 1 1092 5 is_stmt 0 discriminator 22 view .LVU447
 2210 0056 E301     		lsls	r3, r4, #7
 2211 0058 16D5     		bpl	.L164
1093:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1094:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     tmpreg = ADCx->CR & 0xFEFFFFFF;
 2212              		.loc 1 1094 5 is_stmt 1 view .LVU448
 2213              		.loc 1 1094 18 is_stmt 0 view .LVU449
 2214 005a AB68     		ldr	r3, [r5, #8]
 2215              		.loc 1 1094 12 view .LVU450
 2216 005c 114A     		ldr	r2, .L179+20
 2217 005e 1340     		ands	r3, r2
 2218              	.LVL164:
 2219              	.L165:
1095:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
ARM GAS  /tmp/ccBloFiL.s 			page 59


1096:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
1097:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1098:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     tmpreg = ADCx->ISR;
1099:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1100:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   
1101:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the status of the specified ADC flag */
1102:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if ((tmpreg & ADC_FLAG) != (uint32_t)RESET)
 2220              		.loc 1 1102 3 is_stmt 1 view .LVU451
 2221              		.loc 1 1102 6 is_stmt 0 view .LVU452
 2222 0060 1C42     		tst	r4, r3
 2223 0062 13D0     		beq	.L177
1103:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1104:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* ADC_FLAG is set */
1105:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     bitstatus = SET;
 2224              		.loc 1 1105 15 view .LVU453
 2225 0064 0120     		movs	r0, #1
 2226              	.L166:
 2227              	.LVL165:
1106:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1107:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
1108:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1109:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* ADC_FLAG is reset */
1110:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     bitstatus = RESET;
1111:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1112:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Return the ADC_FLAG status */
1113:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   return  bitstatus;
 2228              		.loc 1 1113 3 is_stmt 1 view .LVU454
1114:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2229              		.loc 1 1114 1 is_stmt 0 view .LVU455
 2230              		@ sp needed
 2231              	.LVL166:
 2232              	.LVL167:
 2233              		.loc 1 1114 1 view .LVU456
 2234 0066 70BD     		pop	{r4, r5, r6, pc}
 2235              	.LVL168:
 2236              	.L168:
1090:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 2237              		.loc 1 1090 3 view .LVU457
 2238 0068 0120     		movs	r0, #1
 2239 006a F2E7     		b	.L163
 2240              	.L169:
 2241 006c 0120     		movs	r0, #1
 2242 006e F0E7     		b	.L163
 2243              	.L170:
 2244 0070 0120     		movs	r0, #1
 2245 0072 EEE7     		b	.L163
 2246              	.L171:
 2247 0074 0120     		movs	r0, #1
 2248 0076 ECE7     		b	.L163
 2249              	.L172:
 2250 0078 0120     		movs	r0, #1
 2251 007a EAE7     		b	.L163
 2252              	.L173:
 2253 007c 0120     		movs	r0, #1
 2254 007e E8E7     		b	.L163
 2255              	.L174:
 2256 0080 0120     		movs	r0, #1
ARM GAS  /tmp/ccBloFiL.s 			page 60


 2257 0082 E6E7     		b	.L163
 2258              	.L175:
 2259 0084 0120     		movs	r0, #1
 2260 0086 E4E7     		b	.L163
 2261              	.L164:
1098:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2262              		.loc 1 1098 5 is_stmt 1 view .LVU458
1098:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2263              		.loc 1 1098 12 is_stmt 0 view .LVU459
 2264 0088 2B68     		ldr	r3, [r5]
 2265              	.LVL169:
1098:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2266              		.loc 1 1098 12 view .LVU460
 2267 008a E9E7     		b	.L165
 2268              	.L177:
1110:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2269              		.loc 1 1110 15 view .LVU461
 2270 008c 0020     		movs	r0, #0
 2271 008e EAE7     		b	.L166
 2272              	.L180:
 2273              		.align	2
 2274              	.L179:
 2275 0090 00DCFEBF 		.word	-1073816576
 2276 0094 01000001 		.word	16777217
 2277 0098 02000001 		.word	16777218
 2278 009c 04000001 		.word	16777220
 2279 00a0 08000001 		.word	16777224
 2280 00a4 FFFFFFFE 		.word	-16777217
 2281              		.cfi_endproc
 2282              	.LFE57:
 2284              		.section	.text.ADC_ClearFlag,"ax",%progbits
 2285              		.align	1
 2286              		.global	ADC_ClearFlag
 2287              		.syntax unified
 2288              		.code	16
 2289              		.thumb_func
 2290              		.fpu softvfp
 2292              	ADC_ClearFlag:
 2293              	.LVL170:
 2294              	.LFB58:
1115:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1116:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
1117:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1118:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
1119:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1120:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be any combination of the following values:
1121:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_AWD: Analog watchdog flag
1122:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOC: End of conversion flag
1123:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_ADRDY: ADC Ready flag
1124:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOSMP: End of sampling flag
1125:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_EOSEQ: End of Sequence flag
1126:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_FLAG_OVR: Overrun flag 
1127:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
1128:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1129:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint32_t ADC_FLAG)
1130:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 2295              		.loc 1 1130 1 is_stmt 1 view -0
ARM GAS  /tmp/ccBloFiL.s 			page 61


 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 0
 2298              		@ frame_needed = 0, uses_anonymous_args = 0
 2299              		.loc 1 1130 1 is_stmt 0 view .LVU463
 2300 0000 70B5     		push	{r4, r5, r6, lr}
 2301              	.LCFI25:
 2302              		.cfi_def_cfa_offset 16
 2303              		.cfi_offset 4, -16
 2304              		.cfi_offset 5, -12
 2305              		.cfi_offset 6, -8
 2306              		.cfi_offset 14, -4
 2307 0002 0500     		movs	r5, r0
 2308 0004 0C00     		movs	r4, r1
1131:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
1132:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2309              		.loc 1 1132 3 is_stmt 1 view .LVU464
 2310 0006 0A4B     		ldr	r3, .L185
 2311 0008 C018     		adds	r0, r0, r3
 2312              	.LVL171:
 2313              		.loc 1 1132 3 is_stmt 0 view .LVU465
 2314 000a 4342     		rsbs	r3, r0, #0
 2315 000c 5841     		adcs	r0, r0, r3
 2316 000e FFF7FEFF 		bl	assert_param
 2317              	.LVL172:
1133:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
 2318              		.loc 1 1133 3 is_stmt 1 view .LVU466
 2319 0012 002C     		cmp	r4, #0
 2320 0014 04D0     		beq	.L183
 2321              		.loc 1 1133 16 is_stmt 0 discriminator 1 view .LVU467
 2322 0016 074B     		ldr	r3, .L185+4
 2323              		.loc 1 1133 3 discriminator 1 view .LVU468
 2324 0018 1C42     		tst	r4, r3
 2325 001a 06D0     		beq	.L184
 2326              		.loc 1 1133 3 view .LVU469
 2327 001c 0020     		movs	r0, #0
 2328 001e 00E0     		b	.L182
 2329              	.L183:
 2330 0020 0020     		movs	r0, #0
 2331              	.L182:
 2332              		.loc 1 1133 3 discriminator 6 view .LVU470
 2333 0022 FFF7FEFF 		bl	assert_param
 2334              	.LVL173:
1134:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1135:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Clear the selected ADC flags */
1136:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->ISR = (uint32_t)ADC_FLAG;
 2335              		.loc 1 1136 3 is_stmt 1 discriminator 6 view .LVU471
 2336              		.loc 1 1136 13 is_stmt 0 discriminator 6 view .LVU472
 2337 0026 2C60     		str	r4, [r5]
1137:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2338              		.loc 1 1137 1 discriminator 6 view .LVU473
 2339              		@ sp needed
 2340              	.LVL174:
 2341              	.LVL175:
 2342              		.loc 1 1137 1 discriminator 6 view .LVU474
 2343 0028 70BD     		pop	{r4, r5, r6, pc}
 2344              	.LVL176:
 2345              	.L184:
ARM GAS  /tmp/ccBloFiL.s 			page 62


1133:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
 2346              		.loc 1 1133 3 view .LVU475
 2347 002a 0120     		movs	r0, #1
 2348 002c F9E7     		b	.L182
 2349              	.L186:
 2350 002e C046     		.align	2
 2351              	.L185:
 2352 0030 00DCFEBF 		.word	-1073816576
 2353 0034 60FFFFEF 		.word	-268435616
 2354              		.cfi_endproc
 2355              	.LFE58:
 2357              		.section	.text.ADC_GetITStatus,"ax",%progbits
 2358              		.align	1
 2359              		.global	ADC_GetITStatus
 2360              		.syntax unified
 2361              		.code	16
 2362              		.thumb_func
 2363              		.fpu softvfp
 2365              	ADC_GetITStatus:
 2366              	.LVL177:
 2367              	.LFB59:
1138:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1139:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
1140:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1141:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral
1142:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check.
1143:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
1144:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_ADRDY: ADC ready interrupt 
1145:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSMP: End of sampling interrupt
1146:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt 
1147:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSEQ: End of sequence of conversion interrupt
1148:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_OVR: overrun interrupt
1149:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt
1150:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1151:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1152:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint32_t ADC_IT)
1153:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 2368              		.loc 1 1153 1 is_stmt 1 view -0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 0
 2371              		@ frame_needed = 0, uses_anonymous_args = 0
 2372              		.loc 1 1153 1 is_stmt 0 view .LVU477
 2373 0000 70B5     		push	{r4, r5, r6, lr}
 2374              	.LCFI26:
 2375              		.cfi_def_cfa_offset 16
 2376              		.cfi_offset 4, -16
 2377              		.cfi_offset 5, -12
 2378              		.cfi_offset 6, -8
 2379              		.cfi_offset 14, -4
 2380 0002 0500     		movs	r5, r0
 2381 0004 0C00     		movs	r4, r1
1154:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ITStatus bitstatus = RESET;
 2382              		.loc 1 1154 3 is_stmt 1 view .LVU478
 2383              	.LVL178:
1155:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   uint32_t enablestatus = 0;
 2384              		.loc 1 1155 3 view .LVU479
1156:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
ARM GAS  /tmp/ccBloFiL.s 			page 63


1157:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
1158:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2385              		.loc 1 1158 3 view .LVU480
 2386 0006 154B     		ldr	r3, .L198
 2387 0008 C318     		adds	r3, r0, r3
 2388 000a 5842     		rsbs	r0, r3, #0
 2389 000c 5841     		adcs	r0, r0, r3
 2390              	.LVL179:
 2391              		.loc 1 1158 3 is_stmt 0 view .LVU481
 2392 000e FFF7FEFF 		bl	assert_param
 2393              	.LVL180:
1159:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_GET_IT(ADC_IT));
 2394              		.loc 1 1159 3 is_stmt 1 view .LVU482
 2395              		.loc 1 1159 16 is_stmt 0 view .LVU483
 2396 0012 631E     		subs	r3, r4, #1
 2397              		.loc 1 1159 3 view .LVU484
 2398 0014 012B     		cmp	r3, #1
 2399 0016 0BD9     		bls	.L190
 2400              		.loc 1 1159 16 discriminator 2 view .LVU485
 2401 0018 042C     		cmp	r4, #4
 2402 001a 15D0     		beq	.L191
 2403              		.loc 1 1159 16 discriminator 4 view .LVU486
 2404 001c 082C     		cmp	r4, #8
 2405 001e 15D0     		beq	.L192
 2406              		.loc 1 1159 16 discriminator 6 view .LVU487
 2407 0020 102C     		cmp	r4, #16
 2408 0022 15D0     		beq	.L193
 2409              		.loc 1 1159 3 discriminator 8 view .LVU488
 2410 0024 802C     		cmp	r4, #128
 2411 0026 01D0     		beq	.L197
 2412              		.loc 1 1159 3 view .LVU489
 2413 0028 0020     		movs	r0, #0
 2414 002a 02E0     		b	.L188
 2415              	.L197:
 2416 002c 0120     		movs	r0, #1
 2417 002e 00E0     		b	.L188
 2418              	.L190:
 2419 0030 0120     		movs	r0, #1
 2420              	.L188:
 2421              		.loc 1 1159 3 discriminator 12 view .LVU490
 2422 0032 FFF7FEFF 		bl	assert_param
 2423              	.LVL181:
1160:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1161:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Get the ADC_IT enable bit status */
1162:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   enablestatus = (uint32_t)(ADCx->IER & ADC_IT); 
 2424              		.loc 1 1162 3 is_stmt 1 discriminator 12 view .LVU491
 2425              		.loc 1 1162 33 is_stmt 0 discriminator 12 view .LVU492
 2426 0036 6B68     		ldr	r3, [r5, #4]
 2427              		.loc 1 1162 16 discriminator 12 view .LVU493
 2428 0038 2340     		ands	r3, r4
 2429              	.LVL182:
1163:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1164:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1165:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   if (((uint32_t)(ADCx->ISR & ADC_IT) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 2430              		.loc 1 1165 3 is_stmt 1 discriminator 12 view .LVU494
 2431              		.loc 1 1165 23 is_stmt 0 discriminator 12 view .LVU495
 2432 003a 2A68     		ldr	r2, [r5]
ARM GAS  /tmp/ccBloFiL.s 			page 64


 2433              		.loc 1 1165 6 discriminator 12 view .LVU496
 2434 003c 1442     		tst	r4, r2
 2435 003e 09D0     		beq	.L195
 2436              		.loc 1 1165 59 discriminator 1 view .LVU497
 2437 0040 002B     		cmp	r3, #0
 2438 0042 09D1     		bne	.L196
1166:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1167:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* ADC_IT is set */
1168:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     bitstatus = SET;
1169:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1170:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   else
1171:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   {
1172:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     /* ADC_IT is reset */
1173:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****     bitstatus = RESET;
 2439              		.loc 1 1173 15 view .LVU498
 2440 0044 0020     		movs	r0, #0
 2441 0046 06E0     		b	.L189
 2442              	.LVL183:
 2443              	.L191:
1159:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
 2444              		.loc 1 1159 3 view .LVU499
 2445 0048 0120     		movs	r0, #1
 2446 004a F2E7     		b	.L188
 2447              	.L192:
 2448 004c 0120     		movs	r0, #1
 2449 004e F0E7     		b	.L188
 2450              	.L193:
 2451 0050 0120     		movs	r0, #1
 2452 0052 EEE7     		b	.L188
 2453              	.LVL184:
 2454              	.L195:
 2455              		.loc 1 1173 15 view .LVU500
 2456 0054 0020     		movs	r0, #0
 2457              	.L189:
 2458              	.LVL185:
1174:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
1175:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Return the ADC_IT status */
1176:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   return  bitstatus;
 2459              		.loc 1 1176 3 is_stmt 1 view .LVU501
1177:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2460              		.loc 1 1177 1 is_stmt 0 view .LVU502
 2461              		@ sp needed
 2462              	.LVL186:
 2463              	.LVL187:
 2464              		.loc 1 1177 1 view .LVU503
 2465 0056 70BD     		pop	{r4, r5, r6, pc}
 2466              	.LVL188:
 2467              	.L196:
1168:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   }
 2468              		.loc 1 1168 15 view .LVU504
 2469 0058 0120     		movs	r0, #1
 2470 005a FCE7     		b	.L189
 2471              	.L199:
 2472              		.align	2
 2473              	.L198:
 2474 005c 00DCFEBF 		.word	-1073816576
 2475              		.cfi_endproc
ARM GAS  /tmp/ccBloFiL.s 			page 65


 2476              	.LFE59:
 2478              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 2479              		.align	1
 2480              		.global	ADC_ClearITPendingBit
 2481              		.syntax unified
 2482              		.code	16
 2483              		.thumb_func
 2484              		.fpu softvfp
 2486              	ADC_ClearITPendingBit:
 2487              	.LVL189:
 2488              	.LFB60:
1178:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1179:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** /**
1180:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1181:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADCx: where x can be 1 to select the ADC1 peripheral.
1182:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1183:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *   This parameter can be one of the following values:
1184:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_ADRDY: ADC ready interrupt
1185:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSMP: End of sampling interrupt
1186:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOC: End of conversion interrupt
1187:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_EOSEQ: End of sequence of conversion interrupt
1188:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_OVR: overrun interrupt
1189:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   *     @arg ADC_IT_AWD: Analog watchdog interrupt
1190:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   * @retval None
1191:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   */
1192:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint32_t ADC_IT)
1193:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** {
 2489              		.loc 1 1193 1 is_stmt 1 view -0
 2490              		.cfi_startproc
 2491              		@ args = 0, pretend = 0, frame = 0
 2492              		@ frame_needed = 0, uses_anonymous_args = 0
 2493              		.loc 1 1193 1 is_stmt 0 view .LVU506
 2494 0000 70B5     		push	{r4, r5, r6, lr}
 2495              	.LCFI27:
 2496              		.cfi_def_cfa_offset 16
 2497              		.cfi_offset 4, -16
 2498              		.cfi_offset 5, -12
 2499              		.cfi_offset 6, -8
 2500              		.cfi_offset 14, -4
 2501 0002 0500     		movs	r5, r0
 2502 0004 0C00     		movs	r4, r1
1194:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Check the parameters */
1195:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 2503              		.loc 1 1195 3 is_stmt 1 view .LVU507
 2504 0006 0A4B     		ldr	r3, .L204
 2505 0008 C018     		adds	r0, r0, r3
 2506              	.LVL190:
 2507              		.loc 1 1195 3 is_stmt 0 view .LVU508
 2508 000a 4342     		rsbs	r3, r0, #0
 2509 000c 5841     		adcs	r0, r0, r3
 2510 000e FFF7FEFF 		bl	assert_param
 2511              	.LVL191:
1196:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CLEAR_IT(ADC_IT));
 2512              		.loc 1 1196 3 is_stmt 1 view .LVU509
 2513 0012 002C     		cmp	r4, #0
 2514 0014 05D0     		beq	.L202
 2515              		.loc 1 1196 16 is_stmt 0 discriminator 1 view .LVU510
ARM GAS  /tmp/ccBloFiL.s 			page 66


 2516 0016 9F23     		movs	r3, #159
 2517 0018 2200     		movs	r2, r4
 2518 001a 9A43     		bics	r2, r3
 2519              		.loc 1 1196 3 discriminator 1 view .LVU511
 2520 001c 06D0     		beq	.L203
 2521              		.loc 1 1196 3 view .LVU512
 2522 001e 0020     		movs	r0, #0
 2523 0020 00E0     		b	.L201
 2524              	.L202:
 2525 0022 0020     		movs	r0, #0
 2526              	.L201:
 2527              		.loc 1 1196 3 discriminator 6 view .LVU513
 2528 0024 FFF7FEFF 		bl	assert_param
 2529              	.LVL192:
1197:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** 
1198:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1199:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   ADCx->ISR = (uint32_t)ADC_IT; 
 2530              		.loc 1 1199 3 is_stmt 1 discriminator 6 view .LVU514
 2531              		.loc 1 1199 13 is_stmt 0 discriminator 6 view .LVU515
 2532 0028 2C60     		str	r4, [r5]
1200:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c **** }
 2533              		.loc 1 1200 1 discriminator 6 view .LVU516
 2534              		@ sp needed
 2535              	.LVL193:
 2536              	.LVL194:
 2537              		.loc 1 1200 1 discriminator 6 view .LVU517
 2538 002a 70BD     		pop	{r4, r5, r6, pc}
 2539              	.LVL195:
 2540              	.L203:
1196:Libraries/STM32F0xx_StdPeriph_Driver/src/stm32f0xx_adc.c ****   assert_param(IS_ADC_CLEAR_IT(ADC_IT));
 2541              		.loc 1 1196 3 view .LVU518
 2542 002c 0120     		movs	r0, #1
 2543 002e F9E7     		b	.L201
 2544              	.L205:
 2545              		.align	2
 2546              	.L204:
 2547 0030 00DCFEBF 		.word	-1073816576
 2548              		.cfi_endproc
 2549              	.LFE60:
 2551              		.text
 2552              	.Letext0:
 2553              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2554              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2555              		.file 4 "./Libraries/CMSIS/ST/STM32F0xx/Include/stm32f0xx.h"
 2556              		.file 5 "./Libraries/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_adc.h"
 2557              		.file 6 "./Libraries/CMSIS/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2558              		.file 7 "./Libraries/STM32F0xx_StdPeriph_Driver/inc/stm32f0xx_rcc.h"
ARM GAS  /tmp/ccBloFiL.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_adc.c
     /tmp/ccBloFiL.s:16     .text.ADC_DeInit:0000000000000000 $t
     /tmp/ccBloFiL.s:24     .text.ADC_DeInit:0000000000000000 ADC_DeInit
     /tmp/ccBloFiL.s:79     .text.ADC_DeInit:0000000000000030 $d
     /tmp/ccBloFiL.s:85     .text.ADC_Init:0000000000000000 $t
     /tmp/ccBloFiL.s:92     .text.ADC_Init:0000000000000000 ADC_Init
     /tmp/ccBloFiL.s:336    .text.ADC_Init:0000000000000104 $d
     /tmp/ccBloFiL.s:342    .text.ADC_StructInit:0000000000000000 $t
     /tmp/ccBloFiL.s:349    .text.ADC_StructInit:0000000000000000 ADC_StructInit
     /tmp/ccBloFiL.s:383    .text.ADC_Cmd:0000000000000000 $t
     /tmp/ccBloFiL.s:390    .text.ADC_Cmd:0000000000000000 ADC_Cmd
     /tmp/ccBloFiL.s:452    .text.ADC_Cmd:0000000000000038 $d
     /tmp/ccBloFiL.s:457    .text.ADC_JitterCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:464    .text.ADC_JitterCmd:0000000000000000 ADC_JitterCmd
     /tmp/ccBloFiL.s:535    .text.ADC_JitterCmd:0000000000000040 $d
     /tmp/ccBloFiL.s:540    .text.ADC_AutoPowerOffCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:547    .text.ADC_AutoPowerOffCmd:0000000000000000 ADC_AutoPowerOffCmd
     /tmp/ccBloFiL.s:610    .text.ADC_AutoPowerOffCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:616    .text.ADC_WaitModeCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:623    .text.ADC_WaitModeCmd:0000000000000000 ADC_WaitModeCmd
     /tmp/ccBloFiL.s:686    .text.ADC_WaitModeCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:692    .text.ADC_AnalogWatchdogCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:699    .text.ADC_AnalogWatchdogCmd:0000000000000000 ADC_AnalogWatchdogCmd
     /tmp/ccBloFiL.s:762    .text.ADC_AnalogWatchdogCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:768    .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 $t
     /tmp/ccBloFiL.s:775    .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000000 ADC_AnalogWatchdogThresholdsConfig
     /tmp/ccBloFiL.s:833    .text.ADC_AnalogWatchdogThresholdsConfig:0000000000000034 $d
     /tmp/ccBloFiL.s:838    .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 $t
     /tmp/ccBloFiL.s:845    .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000000 ADC_AnalogWatchdogSingleChannelConfig
     /tmp/ccBloFiL.s:1056   .text.ADC_AnalogWatchdogSingleChannelConfig:0000000000000104 $d
     /tmp/ccBloFiL.s:1062   .text.ADC_AnalogWatchdogSingleChannelCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1069   .text.ADC_AnalogWatchdogSingleChannelCmd:0000000000000000 ADC_AnalogWatchdogSingleChannelCmd
     /tmp/ccBloFiL.s:1132   .text.ADC_AnalogWatchdogSingleChannelCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:1138   .text.ADC_TempSensorCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1145   .text.ADC_TempSensorCmd:0000000000000000 ADC_TempSensorCmd
     /tmp/ccBloFiL.s:1197   .text.ADC_TempSensorCmd:0000000000000030 $d
     /tmp/ccBloFiL.s:1203   .text.ADC_VrefintCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1210   .text.ADC_VrefintCmd:0000000000000000 ADC_VrefintCmd
     /tmp/ccBloFiL.s:1262   .text.ADC_VrefintCmd:0000000000000030 $d
     /tmp/ccBloFiL.s:1268   .text.ADC_VbatCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1275   .text.ADC_VbatCmd:0000000000000000 ADC_VbatCmd
     /tmp/ccBloFiL.s:1327   .text.ADC_VbatCmd:0000000000000030 $d
     /tmp/ccBloFiL.s:1333   .text.ADC_ChannelConfig:0000000000000000 $t
     /tmp/ccBloFiL.s:1340   .text.ADC_ChannelConfig:0000000000000000 ADC_ChannelConfig
     /tmp/ccBloFiL.s:1419   .text.ADC_ChannelConfig:0000000000000040 $d
     /tmp/ccBloFiL.s:1424   .text.ADC_ContinuousModeCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1431   .text.ADC_ContinuousModeCmd:0000000000000000 ADC_ContinuousModeCmd
     /tmp/ccBloFiL.s:1494   .text.ADC_ContinuousModeCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:1500   .text.ADC_DiscModeCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1507   .text.ADC_DiscModeCmd:0000000000000000 ADC_DiscModeCmd
     /tmp/ccBloFiL.s:1570   .text.ADC_DiscModeCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:1576   .text.ADC_OverrunModeCmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1583   .text.ADC_OverrunModeCmd:0000000000000000 ADC_OverrunModeCmd
     /tmp/ccBloFiL.s:1646   .text.ADC_OverrunModeCmd:0000000000000038 $d
     /tmp/ccBloFiL.s:1652   .text.ADC_GetCalibrationFactor:0000000000000000 $t
     /tmp/ccBloFiL.s:1659   .text.ADC_GetCalibrationFactor:0000000000000000 ADC_GetCalibrationFactor
ARM GAS  /tmp/ccBloFiL.s 			page 68


     /tmp/ccBloFiL.s:1741   .text.ADC_GetCalibrationFactor:000000000000003c $d
     /tmp/ccBloFiL.s:1746   .text.ADC_StopOfConversion:0000000000000000 $t
     /tmp/ccBloFiL.s:1753   .text.ADC_StopOfConversion:0000000000000000 ADC_StopOfConversion
     /tmp/ccBloFiL.s:1790   .text.ADC_StopOfConversion:000000000000001c $d
     /tmp/ccBloFiL.s:1795   .text.ADC_StartOfConversion:0000000000000000 $t
     /tmp/ccBloFiL.s:1802   .text.ADC_StartOfConversion:0000000000000000 ADC_StartOfConversion
     /tmp/ccBloFiL.s:1839   .text.ADC_StartOfConversion:000000000000001c $d
     /tmp/ccBloFiL.s:1844   .text.ADC_GetConversionValue:0000000000000000 $t
     /tmp/ccBloFiL.s:1851   .text.ADC_GetConversionValue:0000000000000000 ADC_GetConversionValue
     /tmp/ccBloFiL.s:1887   .text.ADC_GetConversionValue:0000000000000018 $d
     /tmp/ccBloFiL.s:1892   .text.ADC_DMACmd:0000000000000000 $t
     /tmp/ccBloFiL.s:1899   .text.ADC_DMACmd:0000000000000000 ADC_DMACmd
     /tmp/ccBloFiL.s:1961   .text.ADC_DMACmd:0000000000000038 $d
     /tmp/ccBloFiL.s:1966   .text.ADC_DMARequestModeConfig:0000000000000000 $t
     /tmp/ccBloFiL.s:1973   .text.ADC_DMARequestModeConfig:0000000000000000 ADC_DMARequestModeConfig
     /tmp/ccBloFiL.s:2019   .text.ADC_DMARequestModeConfig:0000000000000024 $d
     /tmp/ccBloFiL.s:2024   .text.ADC_ITConfig:0000000000000000 $t
     /tmp/ccBloFiL.s:2031   .text.ADC_ITConfig:0000000000000000 ADC_ITConfig
     /tmp/ccBloFiL.s:2116   .text.ADC_ITConfig:0000000000000050 $d
     /tmp/ccBloFiL.s:2121   .text.ADC_GetFlagStatus:0000000000000000 $t
     /tmp/ccBloFiL.s:2128   .text.ADC_GetFlagStatus:0000000000000000 ADC_GetFlagStatus
     /tmp/ccBloFiL.s:2275   .text.ADC_GetFlagStatus:0000000000000090 $d
     /tmp/ccBloFiL.s:2285   .text.ADC_ClearFlag:0000000000000000 $t
     /tmp/ccBloFiL.s:2292   .text.ADC_ClearFlag:0000000000000000 ADC_ClearFlag
     /tmp/ccBloFiL.s:2352   .text.ADC_ClearFlag:0000000000000030 $d
     /tmp/ccBloFiL.s:2358   .text.ADC_GetITStatus:0000000000000000 $t
     /tmp/ccBloFiL.s:2365   .text.ADC_GetITStatus:0000000000000000 ADC_GetITStatus
     /tmp/ccBloFiL.s:2474   .text.ADC_GetITStatus:000000000000005c $d
     /tmp/ccBloFiL.s:2479   .text.ADC_ClearITPendingBit:0000000000000000 $t
     /tmp/ccBloFiL.s:2486   .text.ADC_ClearITPendingBit:0000000000000000 ADC_ClearITPendingBit
     /tmp/ccBloFiL.s:2547   .text.ADC_ClearITPendingBit:0000000000000030 $d

UNDEFINED SYMBOLS
assert_param
RCC_APB2PeriphResetCmd
